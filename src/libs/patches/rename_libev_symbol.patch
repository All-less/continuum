From 8795838f70ccb4c9adc8446f777b8c3c3b8f8db2 Mon Sep 17 00:00:00 2001
From: Loy <puregithub@yeah.net>
Date: Sat, 24 Mar 2018 10:26:28 +0800
Subject: [PATCH] change constant names to start with LIBEV

---
 .gitignore    |  176 ++++
 Makefile.am   |    6 +-
 Makefile.in   |   55 +-
 Symbols.event |   24 -
 aclocal.m4    | 2756 +++++++++++++++++++++++++++++++++------------------------
 ev++.h        |  346 ++++----
 ev.c          | 1860 +++++++++++++++++++-------------------
 ev.h          |  640 +++++++-------
 ev_epoll.c    |   55 +-
 ev_kqueue.c   |   72 +-
 ev_poll.c     |   39 +-
 ev_port.c     |   52 +-
 ev_select.c   |   86 +-
 ev_vars.h     |   52 +-
 ev_win32.c    |   10 +-
 ev_wrap.h     |    6 +-
 event.c       |  425 ---------
 event.h       |  177 ----
 18 files changed, 3445 insertions(+), 3392 deletions(-)
 create mode 100644 .gitignore
 delete mode 100644 Symbols.event
 delete mode 100644 event.c
 delete mode 100644 event.h

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..c493a2d
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,176 @@
+
+# Created by https://www.gitignore.io/api/vim,linux,emacs,macos,windows,sublimetext
+
+### Emacs ###
+# -*- mode: gitignore; -*-
+*~
+\#*\#
+/.emacs.desktop
+/.emacs.desktop.lock
+*.elc
+auto-save-list
+tramp
+.\#*
+
+# Org-mode
+.org-id-locations
+*_archive
+
+# flymake-mode
+*_flymake.*
+
+# eshell files
+/eshell/history
+/eshell/lastdir
+
+# elpa packages
+/elpa/
+
+# reftex files
+*.rel
+
+# AUCTeX auto folder
+/auto/
+
+# cask packages
+.cask/
+dist/
+
+# Flycheck
+flycheck_*.el
+
+# server auth directory
+/server/
+
+# projectiles files
+.projectile
+projectile-bookmarks.eld
+
+# directory configuration
+.dir-locals.el
+
+# saveplace
+places
+
+# url cache
+url/cache/
+
+# cedet
+ede-projects.el
+
+# smex
+smex-items
+
+# company-statistics
+company-statistics-cache.el
+
+# anaconda-mode
+anaconda-mode/
+
+### Linux ###
+
+# temporary files which can be created if a process still has a handle open of a deleted file
+.fuse_hidden*
+
+# KDE directory preferences
+.directory
+
+# Linux trash folder which might appear on any partition or disk
+.Trash-*
+
+# .nfs files are created when an open file is removed but is still being accessed
+.nfs*
+
+### macOS ###
+*.DS_Store
+.AppleDouble
+.LSOverride
+
+# Icon must end with two \r
+Icon
+
+# Thumbnails
+._*
+
+# Files that might appear in the root of a volume
+.DocumentRevisions-V100
+.fseventsd
+.Spotlight-V100
+.TemporaryItems
+.Trashes
+.VolumeIcon.icns
+.com.apple.timemachine.donotpresent
+
+# Directories potentially created on remote AFP share
+.AppleDB
+.AppleDesktop
+Network Trash Folder
+Temporary Items
+.apdisk
+
+### SublimeText ###
+# cache files for sublime text
+*.tmlanguage.cache
+*.tmPreferences.cache
+*.stTheme.cache
+
+# workspace files are user-specific
+*.sublime-workspace
+
+# project files should be checked into the repository, unless a significant
+# proportion of contributors will probably not be using SublimeText
+# *.sublime-project
+
+# sftp configuration file
+sftp-config.json
+
+# Package control specific files
+Package Control.last-run
+Package Control.ca-list
+Package Control.ca-bundle
+Package Control.system-ca-bundle
+Package Control.cache/
+Package Control.ca-certs/
+Package Control.merged-ca-bundle
+Package Control.user-ca-bundle
+oscrypto-ca-bundle.crt
+bh_unicode_properties.cache
+
+# Sublime-github package stores a github token in this file
+# https://packagecontrol.io/packages/sublime-github
+GitHub.sublime-settings
+
+### Vim ###
+# swap
+.sw[a-p]
+.*.sw[a-p]
+# session
+Session.vim
+# temporary
+.netrwhist
+# auto-generated tag files
+tags
+
+### Windows ###
+# Windows thumbnail cache files
+Thumbs.db
+ehthumbs.db
+ehthumbs_vista.db
+
+# Folder config file
+Desktop.ini
+
+# Recycle Bin used on file shares
+$RECYCLE.BIN/
+
+# Windows Installer files
+*.cab
+*.msi
+*.msm
+*.msp
+
+# Windows shortcuts
+*.lnk
+
+
+# End of https://www.gitignore.io/api/vim,linux,emacs,macos,windows,sublimetext
diff --git a/Makefile.am b/Makefile.am
index 059305b..f285889 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -5,15 +5,15 @@ VERSION_INFO = 4:0:0
 EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \
 	     ev_vars.h ev_wrap.h \
 	     ev_epoll.c ev_select.c ev_poll.c ev_kqueue.c ev_port.c ev_win32.c \
-	     ev.3 ev.pod Symbols.ev Symbols.event
+	     ev.3 ev.pod Symbols.ev
 
 man_MANS = ev.3
 
-include_HEADERS = ev.h ev++.h event.h
+include_HEADERS = ev.h ev++.h
 
 lib_LTLIBRARIES = libev.la
 
-libev_la_SOURCES = ev.c event.c
+libev_la_SOURCES = ev.c
 libev_la_LDFLAGS = -version-info $(VERSION_INFO)
 
 ev.3: ev.pod
diff --git a/Makefile.in b/Makefile.in
index f67b86d..3ba5d8c 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# Makefile.in generated by automake 1.15 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+# Copyright (C) 1994-2014 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -16,7 +16,17 @@
 
 
 VPATH = @srcdir@
-am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
 am__make_running_with_option = \
   case $${target_option-} in \
       ?) ;; \
@@ -80,16 +90,13 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 subdir = .
-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
-	$(top_srcdir)/configure $(am__configure_deps) \
-	$(srcdir)/config.h.in mkinstalldirs depcomp $(include_HEADERS) \
-	README compile config.guess config.sub install-sh missing \
-	ltmain.sh
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/libev.m4 \
 	$(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
+	$(am__configure_deps) $(include_HEADERS) $(am__DIST_COMMON)
 am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
  configure.lineno config.status.lineno
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
@@ -127,7 +134,7 @@ am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man3dir)" \
 	"$(DESTDIR)$(includedir)"
 LTLIBRARIES = $(lib_LTLIBRARIES)
 libev_la_LIBADD =
-am_libev_la_OBJECTS = ev.lo event.lo
+am_libev_la_OBJECTS = ev.lo
 libev_la_OBJECTS = $(am_libev_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
 am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
@@ -203,6 +210,9 @@ ETAGS = etags
 CTAGS = ctags
 CSCOPE = cscope
 AM_RECURSIVE_TARGETS = cscope
+am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in README \
+	compile config.guess config.sub depcomp install-sh ltmain.sh \
+	missing mkinstalldirs
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 distdir = $(PACKAGE)-$(VERSION)
 top_distdir = $(distdir)
@@ -259,6 +269,7 @@ LIBTOOL = @LIBTOOL@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
@@ -340,12 +351,12 @@ VERSION_INFO = 4:0:0
 EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \
 	     ev_vars.h ev_wrap.h \
 	     ev_epoll.c ev_select.c ev_poll.c ev_kqueue.c ev_port.c ev_win32.c \
-	     ev.3 ev.pod Symbols.ev Symbols.event
+	     ev.3 ev.pod Symbols.ev
 
 man_MANS = ev.3
-include_HEADERS = ev.h ev++.h event.h
+include_HEADERS = ev.h ev++.h
 lib_LTLIBRARIES = libev.la
-libev_la_SOURCES = ev.c event.c
+libev_la_SOURCES = ev.c
 libev_la_LDFLAGS = -version-info $(VERSION_INFO)
 all: config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-am
@@ -367,7 +378,6 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi
 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
 	$(am__cd) $(top_srcdir) && \
 	  $(AUTOMAKE) --foreign Makefile
-.PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
@@ -447,7 +457,6 @@ distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ev.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/event.Plo@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@@ -658,15 +667,15 @@ dist-xz: distdir
 	$(am__post_remove_distdir)
 
 dist-tarZ: distdir
-	@echo WARNING: "Support for shar distribution archives is" \
-	               "deprecated." >&2
+	@echo WARNING: "Support for distribution archives compressed with" \
+		       "legacy program 'compress' is deprecated." >&2
 	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
 	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
 	$(am__post_remove_distdir)
 
 dist-shar: distdir
-	@echo WARNING: "Support for distribution archives compressed with" \
-		       "legacy program 'compress' is deprecated." >&2
+	@echo WARNING: "Support for shar distribution archives is" \
+	               "deprecated." >&2
 	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
 	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
 	$(am__post_remove_distdir)
@@ -702,17 +711,17 @@ distcheck: dist
 	esac
 	chmod -R a-w $(distdir)
 	chmod u+w $(distdir)
-	mkdir $(distdir)/_build $(distdir)/_inst
+	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
 	chmod a-w $(distdir)
 	test -d $(distdir)/_build || exit 0; \
 	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
 	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
 	  && am__cwd=`pwd` \
-	  && $(am__cd) $(distdir)/_build \
-	  && ../configure \
+	  && $(am__cd) $(distdir)/_build/sub \
+	  && ../../configure \
 	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
 	    $(DISTCHECK_CONFIGURE_FLAGS) \
-	    --srcdir=.. --prefix="$$dc_install_base" \
+	    --srcdir=../.. --prefix="$$dc_install_base" \
 	  && $(MAKE) $(AM_MAKEFLAGS) \
 	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
 	  && $(MAKE) $(AM_MAKEFLAGS) check \
@@ -900,6 +909,8 @@ uninstall-man: uninstall-man3
 	uninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES \
 	uninstall-man uninstall-man3
 
+.PRECIOUS: Makefile
+
 
 ev.3: ev.pod
 	pod2man -n LIBEV -r "libev-$(VERSION)" -c "libev - high performance full featured event loop" -s3 <$< >$@
diff --git a/Symbols.event b/Symbols.event
deleted file mode 100644
index 799d424..0000000
--- a/Symbols.event
+++ /dev/null
@@ -1,24 +0,0 @@
-event_active
-event_add
-event_base_dispatch
-event_base_free
-event_base_get_method
-event_base_loop
-event_base_loopexit
-event_base_new
-event_base_once
-event_base_priority_init
-event_base_set
-event_del
-event_dispatch
-event_get_callback
-event_get_method
-event_get_version
-event_init
-event_loop
-event_loopexit
-event_once
-event_pending
-event_priority_init
-event_priority_set
-event_set
diff --git a/aclocal.m4 b/aclocal.m4
index 186cbf1..1d95cce 100644
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -1,6 +1,6 @@
-# generated automatically by aclocal 1.14.1 -*- Autoconf -*-
+# generated automatically by aclocal 1.15 -*- Autoconf -*-
 
-# Copyright (C) 1996-2013 Free Software Foundation, Inc.
+# Copyright (C) 1996-2014 Free Software Foundation, Inc.
 
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -22,9 +22,7 @@ To do so, use the procedure documented by the package, typically 'autoreconf'.])
 
 # libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-
 #
-#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
-#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
-#                 Foundation, Inc.
+#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.
 #   Written by Gordon Matzigkeit, 1996
 #
 # This file is free software; the Free Software Foundation gives
@@ -32,36 +30,30 @@ To do so, use the procedure documented by the package, typically 'autoreconf'.])
 # modifications, as long as this notice is preserved.
 
 m4_define([_LT_COPYING], [dnl
-#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
-#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
-#                 Foundation, Inc.
-#   Written by Gordon Matzigkeit, 1996
-#
-#   This file is part of GNU Libtool.
-#
-# GNU Libtool is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License as
-# published by the Free Software Foundation; either version 2 of
-# the License, or (at your option) any later version.
+# Copyright (C) 2014 Free Software Foundation, Inc.
+# This is free software; see the source for copying conditions.  There is NO
+# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+# GNU Libtool is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of of the License, or
+# (at your option) any later version.
 #
-# As a special exception to the GNU General Public License,
-# if you distribute this file as part of a program or library that
-# is built using GNU Libtool, you may include this file under the
-# same distribution terms that you use for the rest of that program.
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program or library that is built
+# using GNU Libtool, you may include this file under the  same
+# distribution terms that you use for the rest of that program.
 #
-# GNU Libtool is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# GNU Libtool is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with GNU Libtool; see the file COPYING.  If not, a copy
-# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
-# obtained by writing to the Free Software Foundation, Inc.,
-# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ])
 
-# serial 57 LT_INIT
+# serial 58 LT_INIT
 
 
 # LT_PREREQ(VERSION)
@@ -89,7 +81,7 @@ esac
 # LT_INIT([OPTIONS])
 # ------------------
 AC_DEFUN([LT_INIT],
-[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT
+[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK
 AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
 AC_BEFORE([$0], [LT_LANG])dnl
 AC_BEFORE([$0], [LT_OUTPUT])dnl
@@ -113,7 +105,7 @@ dnl Parse OPTIONS
 _LT_SET_OPTIONS([$0], [$1])
 
 # This can be used to rebuild libtool when needed
-LIBTOOL_DEPS="$ltmain"
+LIBTOOL_DEPS=$ltmain
 
 # Always use our own libtool.
 LIBTOOL='$(SHELL) $(top_builddir)/libtool'
@@ -133,26 +125,43 @@ dnl AC_DEFUN([AC_PROG_LIBTOOL], [])
 dnl AC_DEFUN([AM_PROG_LIBTOOL], [])
 
 
+# _LT_PREPARE_CC_BASENAME
+# -----------------------
+m4_defun([_LT_PREPARE_CC_BASENAME], [
+# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+func_cc_basename ()
+{
+    for cc_temp in @S|@*""; do
+      case $cc_temp in
+        compile | *[[\\/]]compile | ccache | *[[\\/]]ccache ) ;;
+        distcc | *[[\\/]]distcc | purify | *[[\\/]]purify ) ;;
+        \-*) ;;
+        *) break;;
+      esac
+    done
+    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
+}
+])# _LT_PREPARE_CC_BASENAME
+
+
 # _LT_CC_BASENAME(CC)
 # -------------------
-# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,
+# but that macro is also expanded into generated libtool script, which
+# arranges for $SED and $ECHO to be set by different means.
 m4_defun([_LT_CC_BASENAME],
-[for cc_temp in $1""; do
-  case $cc_temp in
-    compile | *[[\\/]]compile | ccache | *[[\\/]]ccache ) ;;
-    distcc | *[[\\/]]distcc | purify | *[[\\/]]purify ) ;;
-    \-*) ;;
-    *) break;;
-  esac
-done
-cc_basename=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
+[m4_require([_LT_PREPARE_CC_BASENAME])dnl
+AC_REQUIRE([_LT_DECL_SED])dnl
+AC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl
+func_cc_basename $1
+cc_basename=$func_cc_basename_result
 ])
 
 
 # _LT_FILEUTILS_DEFAULTS
 # ----------------------
 # It is okay to use these file commands and assume they have been set
-# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.
+# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.
 m4_defun([_LT_FILEUTILS_DEFAULTS],
 [: ${CP="cp -f"}
 : ${MV="mv -f"}
@@ -199,15 +208,16 @@ m4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl
 m4_require([_LT_CMD_OLD_ARCHIVE])dnl
 m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
 m4_require([_LT_WITH_SYSROOT])dnl
+m4_require([_LT_CMD_TRUNCATE])dnl
 
 _LT_CONFIG_LIBTOOL_INIT([
-# See if we are running on zsh, and set the options which allow our
+# See if we are running on zsh, and set the options that allow our
 # commands through without removal of \ escapes INIT.
-if test -n "\${ZSH_VERSION+set}" ; then
+if test -n "\${ZSH_VERSION+set}"; then
    setopt NO_GLOB_SUBST
 fi
 ])
-if test -n "${ZSH_VERSION+set}" ; then
+if test -n "${ZSH_VERSION+set}"; then
    setopt NO_GLOB_SUBST
 fi
 
@@ -220,7 +230,7 @@ aix3*)
   # AIX sometimes has problems with the GCC collect2 program.  For some
   # reason, if we set the COLLECT_NAMES environment variable, the problems
   # vanish in a puff of smoke.
-  if test "X${COLLECT_NAMES+set}" != Xset; then
+  if test set != "${COLLECT_NAMES+set}"; then
     COLLECT_NAMES=
     export COLLECT_NAMES
   fi
@@ -231,14 +241,14 @@ esac
 ofile=libtool
 can_build_shared=yes
 
-# All known linkers require a `.a' archive for static linking (except MSVC,
+# All known linkers require a '.a' archive for static linking (except MSVC,
 # which needs '.lib').
 libext=a
 
-with_gnu_ld="$lt_cv_prog_gnu_ld"
+with_gnu_ld=$lt_cv_prog_gnu_ld
 
-old_CC="$CC"
-old_CFLAGS="$CFLAGS"
+old_CC=$CC
+old_CFLAGS=$CFLAGS
 
 # Set sane defaults for various variables
 test -z "$CC" && CC=cc
@@ -291,21 +301,21 @@ no_glob_subst='s/\*/\\\*/g'
 
 # _LT_PROG_LTMAIN
 # ---------------
-# Note that this code is called both from `configure', and `config.status'
+# Note that this code is called both from 'configure', and 'config.status'
 # now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,
-# `config.status' has no value for ac_aux_dir unless we are using Automake,
+# 'config.status' has no value for ac_aux_dir unless we are using Automake,
 # so we pass a copy along to make sure it has a sensible value anyway.
 m4_defun([_LT_PROG_LTMAIN],
 [m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl
 _LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])
-ltmain="$ac_aux_dir/ltmain.sh"
+ltmain=$ac_aux_dir/ltmain.sh
 ])# _LT_PROG_LTMAIN
 
 
 
 # So that we can recreate a full libtool script including additional
 # tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS
-# in macros and then make a single call at the end using the `libtool'
+# in macros and then make a single call at the end using the 'libtool'
 # label.
 
 
@@ -437,8 +447,8 @@ m4_define([_lt_decl_all_varnames],
 
 # _LT_CONFIG_STATUS_DECLARE([VARNAME])
 # ------------------------------------
-# Quote a variable value, and forward it to `config.status' so that its
-# declaration there will have the same value as in `configure'.  VARNAME
+# Quote a variable value, and forward it to 'config.status' so that its
+# declaration there will have the same value as in 'configure'.  VARNAME
 # must have a single quote delimited value for this to work.
 m4_define([_LT_CONFIG_STATUS_DECLARE],
 [$1='`$ECHO "$][$1" | $SED "$delay_single_quote_subst"`'])
@@ -462,7 +472,7 @@ m4_defun([_LT_CONFIG_STATUS_DECLARATIONS],
 # Output comment and list of tags supported by the script
 m4_defun([_LT_LIBTOOL_TAGS],
 [_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl
-available_tags="_LT_TAGS"dnl
+available_tags='_LT_TAGS'dnl
 ])
 
 
@@ -490,7 +500,7 @@ m4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl
 # _LT_LIBTOOL_CONFIG_VARS
 # -----------------------
 # Produce commented declarations of non-tagged libtool config variables
-# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'
+# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'
 # script.  Tagged libtool config variables (even for the LIBTOOL CONFIG
 # section) are produced by _LT_LIBTOOL_TAG_VARS.
 m4_defun([_LT_LIBTOOL_CONFIG_VARS],
@@ -516,8 +526,8 @@ m4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])
 # Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of
 # variables for single and double quote escaping we saved from calls
 # to _LT_DECL, we can put quote escaped variables declarations
-# into `config.status', and then the shell code to quote escape them in
-# for loops in `config.status'.  Finally, any additional code accumulated
+# into 'config.status', and then the shell code to quote escape them in
+# for loops in 'config.status'.  Finally, any additional code accumulated
 # from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.
 m4_defun([_LT_CONFIG_COMMANDS],
 [AC_PROVIDE_IFELSE([LT_OUTPUT],
@@ -563,7 +573,7 @@ for var in lt_decl_all_varnames([[ \
 ]], lt_decl_quote_varnames); do
     case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
     *[[\\\\\\\`\\"\\\$]]*)
-      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED \\"\\\$sed_quote_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
       ;;
     *)
       eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
@@ -576,7 +586,7 @@ for var in lt_decl_all_varnames([[ \
 ]], lt_decl_dquote_varnames); do
     case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
     *[[\\\\\\\`\\"\\\$]]*)
-      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
       ;;
     *)
       eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
@@ -592,7 +602,7 @@ _LT_OUTPUT_LIBTOOL_INIT
 # Generate a child script FILE with all initialization necessary to
 # reuse the environment learned by the parent script, and make the
 # file executable.  If COMMENT is supplied, it is inserted after the
-# `#!' sequence but before initialization text begins.  After this
+# '#!' sequence but before initialization text begins.  After this
 # macro, additional text can be appended to FILE to form the body of
 # the child script.  The macro ends with non-zero status if the
 # file could not be fully written (such as if the disk is full).
@@ -614,7 +624,7 @@ AS_SHELL_SANITIZE
 _AS_PREPARE
 exec AS_MESSAGE_FD>&1
 _ASEOF
-test $lt_write_fail = 0 && chmod +x $1[]dnl
+test 0 = "$lt_write_fail" && chmod +x $1[]dnl
 m4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT
 
 # LT_OUTPUT
@@ -637,7 +647,7 @@ exec AS_MESSAGE_LOG_FD>>config.log
 } >&AS_MESSAGE_LOG_FD
 
 lt_cl_help="\
-\`$as_me' creates a local libtool stub from the current configuration,
+'$as_me' creates a local libtool stub from the current configuration,
 for use in further configure time tests before the real libtool is
 generated.
 
@@ -659,7 +669,7 @@ Copyright (C) 2011 Free Software Foundation, Inc.
 This config.lt script is free software; the Free Software Foundation
 gives unlimited permision to copy, distribute and modify it."
 
-while test $[#] != 0
+while test 0 != $[#]
 do
   case $[1] in
     --version | --v* | -V )
@@ -672,10 +682,10 @@ do
       lt_cl_silent=: ;;
 
     -*) AC_MSG_ERROR([unrecognized option: $[1]
-Try \`$[0] --help' for more information.]) ;;
+Try '$[0] --help' for more information.]) ;;
 
     *) AC_MSG_ERROR([unrecognized argument: $[1]
-Try \`$[0] --help' for more information.]) ;;
+Try '$[0] --help' for more information.]) ;;
   esac
   shift
 done
@@ -701,7 +711,7 @@ chmod +x "$CONFIG_LT"
 # open by configure.  Here we exec the FD to /dev/null, effectively closing
 # config.log, so it can be properly (re)opened and appended to by config.lt.
 lt_cl_success=:
-test "$silent" = yes &&
+test yes = "$silent" &&
   lt_config_lt_args="$lt_config_lt_args --quiet"
 exec AS_MESSAGE_LOG_FD>/dev/null
 $SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
@@ -721,27 +731,31 @@ m4_defun([_LT_CONFIG],
 _LT_CONFIG_SAVE_COMMANDS([
   m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl
   m4_if(_LT_TAG, [C], [
-    # See if we are running on zsh, and set the options which allow our
+    # See if we are running on zsh, and set the options that allow our
     # commands through without removal of \ escapes.
-    if test -n "${ZSH_VERSION+set}" ; then
+    if test -n "${ZSH_VERSION+set}"; then
       setopt NO_GLOB_SUBST
     fi
 
-    cfgfile="${ofile}T"
+    cfgfile=${ofile}T
     trap "$RM \"$cfgfile\"; exit 1" 1 2 15
     $RM "$cfgfile"
 
     cat <<_LT_EOF >> "$cfgfile"
 #! $SHELL
-
-# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
-# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Generated automatically by $as_me ($PACKAGE) $VERSION
 # Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
 # NOTE: Changes made to this file will be lost: look at ltmain.sh.
-#
+
+# Provide generalized library-building support services.
+# Written by Gordon Matzigkeit, 1996
+
 _LT_COPYING
 _LT_LIBTOOL_TAGS
 
+# Configured defaults for sys_lib_dlsearch_path munging.
+: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}
+
 # ### BEGIN LIBTOOL CONFIG
 _LT_LIBTOOL_CONFIG_VARS
 _LT_LIBTOOL_TAG_VARS
@@ -749,13 +763,24 @@ _LT_LIBTOOL_TAG_VARS
 
 _LT_EOF
 
+    cat <<'_LT_EOF' >> "$cfgfile"
+
+# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE
+
+_LT_PREPARE_MUNGE_PATH_LIST
+_LT_PREPARE_CC_BASENAME
+
+# ### END FUNCTIONS SHARED WITH CONFIGURE
+
+_LT_EOF
+
   case $host_os in
   aix3*)
     cat <<\_LT_EOF >> "$cfgfile"
 # AIX sometimes has problems with the GCC collect2 program.  For some
 # reason, if we set the COLLECT_NAMES environment variable, the problems
 # vanish in a puff of smoke.
-if test "X${COLLECT_NAMES+set}" != Xset; then
+if test set != "${COLLECT_NAMES+set}"; then
   COLLECT_NAMES=
   export COLLECT_NAMES
 fi
@@ -772,8 +797,6 @@ _LT_EOF
   sed '$q' "$ltmain" >> "$cfgfile" \
      || (rm -f "$cfgfile"; exit 1)
 
-  _LT_PROG_REPLACE_SHELLFNS
-
    mv -f "$cfgfile" "$ofile" ||
     (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
   chmod +x "$ofile"
@@ -791,7 +814,6 @@ _LT_EOF
 [m4_if([$1], [], [
     PACKAGE='$PACKAGE'
     VERSION='$VERSION'
-    TIMESTAMP='$TIMESTAMP'
     RM='$RM'
     ofile='$ofile'], [])
 ])dnl /_LT_CONFIG_SAVE_COMMANDS
@@ -988,7 +1010,7 @@ m4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[
 
     AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],
       [lt_cv_apple_cc_single_mod=no
-      if test -z "${LT_MULTI_MODULE}"; then
+      if test -z "$LT_MULTI_MODULE"; then
 	# By default we will add the -single_module flag. You can override
 	# by either setting the environment variable LT_MULTI_MODULE
 	# non-empty at configure time, or by adding -multi_module to the
@@ -1006,7 +1028,7 @@ m4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[
 	  cat conftest.err >&AS_MESSAGE_LOG_FD
 	# Otherwise, if the output was created with a 0 exit code from
 	# the compiler, it worked.
-	elif test -f libconftest.dylib && test $_lt_result -eq 0; then
+	elif test -f libconftest.dylib && test 0 = "$_lt_result"; then
 	  lt_cv_apple_cc_single_mod=yes
 	else
 	  cat conftest.err >&AS_MESSAGE_LOG_FD
@@ -1024,7 +1046,7 @@ m4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[
       AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],
 	[lt_cv_ld_exported_symbols_list=yes],
 	[lt_cv_ld_exported_symbols_list=no])
-	LDFLAGS="$save_LDFLAGS"
+	LDFLAGS=$save_LDFLAGS
     ])
 
     AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],
@@ -1046,7 +1068,7 @@ _LT_EOF
       _lt_result=$?
       if test -s conftest.err && $GREP force_load conftest.err; then
 	cat conftest.err >&AS_MESSAGE_LOG_FD
-      elif test -f conftest && test $_lt_result -eq 0 && $GREP forced_load conftest >/dev/null 2>&1 ; then
+      elif test -f conftest && test 0 = "$_lt_result" && $GREP forced_load conftest >/dev/null 2>&1; then
 	lt_cv_ld_force_load=yes
       else
 	cat conftest.err >&AS_MESSAGE_LOG_FD
@@ -1056,32 +1078,32 @@ _LT_EOF
     ])
     case $host_os in
     rhapsody* | darwin1.[[012]])
-      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;
     darwin1.*)
-      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
     darwin*) # darwin 5.x on
       # if running on 10.5 or later, the deployment target defaults
       # to the OS version, if on x86, and 10.4, the deployment
       # target defaults to 10.4. Don't you love it?
       case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
 	10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)
-	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
-	10.[[012]]*)
-	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;
+	10.[[012]][[,.]]*)
+	  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
 	10.*)
-	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;
       esac
     ;;
   esac
-    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+    if test yes = "$lt_cv_apple_cc_single_mod"; then
       _lt_dar_single_mod='$single_module'
     fi
-    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
-      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    if test yes = "$lt_cv_ld_exported_symbols_list"; then
+      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'
     else
-      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'
     fi
-    if test "$DSYMUTIL" != ":" && test "$lt_cv_ld_force_load" = "no"; then
+    if test : != "$DSYMUTIL" && test no = "$lt_cv_ld_force_load"; then
       _lt_dsymutil='~$DSYMUTIL $lib || :'
     else
       _lt_dsymutil=
@@ -1101,29 +1123,29 @@ m4_defun([_LT_DARWIN_LINKER_FEATURES],
   _LT_TAGVAR(hardcode_direct, $1)=no
   _LT_TAGVAR(hardcode_automatic, $1)=yes
   _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
-  if test "$lt_cv_ld_force_load" = "yes"; then
-    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
+  if test yes = "$lt_cv_ld_force_load"; then
+    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience $wl-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
     m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],
                   [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])
   else
     _LT_TAGVAR(whole_archive_flag_spec, $1)=''
   fi
   _LT_TAGVAR(link_all_deplibs, $1)=yes
-  _LT_TAGVAR(allow_undefined_flag, $1)="$_lt_dar_allow_undefined"
+  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined
   case $cc_basename in
-     ifort*) _lt_dar_can_shared=yes ;;
+     ifort*|nagfor*) _lt_dar_can_shared=yes ;;
      *) _lt_dar_can_shared=$GCC ;;
   esac
-  if test "$_lt_dar_can_shared" = "yes"; then
+  if test yes = "$_lt_dar_can_shared"; then
     output_verbose_link_cmd=func_echo_all
-    _LT_TAGVAR(archive_cmds, $1)="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
-    _LT_TAGVAR(module_cmds, $1)="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
-    _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
-    _LT_TAGVAR(module_expsym_cmds, $1)="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+    _LT_TAGVAR(archive_cmds, $1)="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dsymutil"
+    _LT_TAGVAR(module_cmds, $1)="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dsymutil"
+    _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil"
+    _LT_TAGVAR(module_expsym_cmds, $1)="sed -e 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dar_export_syms$_lt_dsymutil"
     m4_if([$1], [CXX],
-[   if test "$lt_cv_apple_cc_single_mod" != "yes"; then
-      _LT_TAGVAR(archive_cmds, $1)="\$CC -r -keep_private_externs -nostdlib -o \${lib}-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \${lib}-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring${_lt_dsymutil}"
-      _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -r -keep_private_externs -nostdlib -o \${lib}-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \${lib}-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring${_lt_dar_export_syms}${_lt_dsymutil}"
+[   if test yes != "$lt_cv_apple_cc_single_mod"; then
+      _LT_TAGVAR(archive_cmds, $1)="\$CC -r -keep_private_externs -nostdlib -o \$lib-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$lib-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring$_lt_dsymutil"
+      _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC -r -keep_private_externs -nostdlib -o \$lib-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$lib-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring$_lt_dar_export_syms$_lt_dsymutil"
     fi
 ],[])
   else
@@ -1143,7 +1165,7 @@ m4_defun([_LT_DARWIN_LINKER_FEATURES],
 # Allow to override them for all tags through lt_cv_aix_libpath.
 m4_defun([_LT_SYS_MODULE_PATH_AIX],
 [m4_require([_LT_DECL_SED])dnl
-if test "${lt_cv_aix_libpath+set}" = set; then
+if test set = "${lt_cv_aix_libpath+set}"; then
   aix_libpath=$lt_cv_aix_libpath
 else
   AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],
@@ -1161,7 +1183,7 @@ else
     _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
   fi],[])
   if test -z "$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])"; then
-    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])="/usr/lib:/lib"
+    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib
   fi
   ])
   aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])
@@ -1181,8 +1203,8 @@ m4_define([_LT_SHELL_INIT],
 # -----------------------
 # Find how we can fake an echo command that does not interpret backslash.
 # In particular, with Autoconf 2.60 or later we add some code to the start
-# of the generated configure script which will find a shell with a builtin
-# printf (which we can use as an echo command).
+# of the generated configure script that will find a shell with a builtin
+# printf (that we can use as an echo command).
 m4_defun([_LT_PROG_ECHO_BACKSLASH],
 [ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
 ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO
@@ -1210,10 +1232,10 @@ fi
 # Invoke $ECHO with all args, space-separated.
 func_echo_all ()
 {
-    $ECHO "$*" 
+    $ECHO "$*"
 }
 
-case "$ECHO" in
+case $ECHO in
   printf*) AC_MSG_RESULT([printf]) ;;
   print*) AC_MSG_RESULT([print -r]) ;;
   *) AC_MSG_RESULT([cat]) ;;
@@ -1239,16 +1261,17 @@ _LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])
 AC_DEFUN([_LT_WITH_SYSROOT],
 [AC_MSG_CHECKING([for sysroot])
 AC_ARG_WITH([sysroot],
-[  --with-sysroot[=DIR] Search for dependent libraries within DIR
-                        (or the compiler's sysroot if not specified).],
+[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],
+  [Search for dependent libraries within DIR (or the compiler's sysroot
+   if not specified).])],
 [], [with_sysroot=no])
 
 dnl lt_sysroot will always be passed unquoted.  We quote it here
 dnl in case the user passed a directory name.
 lt_sysroot=
-case ${with_sysroot} in #(
+case $with_sysroot in #(
  yes)
-   if test "$GCC" = yes; then
+   if test yes = "$GCC"; then
      lt_sysroot=`$CC --print-sysroot 2>/dev/null`
    fi
    ;; #(
@@ -1258,14 +1281,14 @@ case ${with_sysroot} in #(
  no|'')
    ;; #(
  *)
-   AC_MSG_RESULT([${with_sysroot}])
+   AC_MSG_RESULT([$with_sysroot])
    AC_MSG_ERROR([The sysroot must be an absolute path.])
    ;;
 esac
 
  AC_MSG_RESULT([${lt_sysroot:-no}])
 _LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
-[dependent libraries, and in which our libraries should be installed.])])
+[dependent libraries, and where our libraries should be installed.])])
 
 # _LT_ENABLE_LOCK
 # ---------------
@@ -1273,31 +1296,33 @@ m4_defun([_LT_ENABLE_LOCK],
 [AC_ARG_ENABLE([libtool-lock],
   [AS_HELP_STRING([--disable-libtool-lock],
     [avoid locking (might break parallel builds)])])
-test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+test no = "$enable_libtool_lock" || enable_libtool_lock=yes
 
 # Some flags need to be propagated to the compiler or linker for good
 # libtool support.
 case $host in
 ia64-*-hpux*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set mode
+  # options accordingly.
   echo 'int i;' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
     case `/usr/bin/file conftest.$ac_objext` in
       *ELF-32*)
-	HPUX_IA64_MODE="32"
+	HPUX_IA64_MODE=32
 	;;
       *ELF-64*)
-	HPUX_IA64_MODE="64"
+	HPUX_IA64_MODE=64
 	;;
     esac
   fi
   rm -rf conftest*
   ;;
 *-*-irix6*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
   echo '[#]line '$LINENO' "configure"' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
-    if test "$lt_cv_prog_gnu_ld" = yes; then
+    if test yes = "$lt_cv_prog_gnu_ld"; then
       case `/usr/bin/file conftest.$ac_objext` in
 	*32-bit*)
 	  LD="${LD-ld} -melf32bsmip"
@@ -1326,9 +1351,46 @@ ia64-*-hpux*)
   rm -rf conftest*
   ;;
 
+mips64*-*linux*)
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
+  echo '[#]line '$LINENO' "configure"' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    emul=elf
+    case `/usr/bin/file conftest.$ac_objext` in
+      *32-bit*)
+	emul="${emul}32"
+	;;
+      *64-bit*)
+	emul="${emul}64"
+	;;
+    esac
+    case `/usr/bin/file conftest.$ac_objext` in
+      *MSB*)
+	emul="${emul}btsmip"
+	;;
+      *LSB*)
+	emul="${emul}ltsmip"
+	;;
+    esac
+    case `/usr/bin/file conftest.$ac_objext` in
+      *N32*)
+	emul="${emul}n32"
+	;;
+    esac
+    LD="${LD-ld} -m $emul"
+  fi
+  rm -rf conftest*
+  ;;
+
 x86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \
 s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.  Note that the listed cases only cover the
+  # situations where additional linker options are needed (such as when
+  # doing 32-bit compilation for a host where ld defaults to 64-bit, or
+  # vice versa); the common cases where no linker options are needed do
+  # not appear in the list.
   echo 'int i;' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
     case `/usr/bin/file conftest.o` in
@@ -1347,10 +1409,10 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 		;;
 	    esac
 	    ;;
-	  powerpc64le-*)
+	  powerpc64le-*linux*)
 	    LD="${LD-ld} -m elf32lppclinux"
 	    ;;
-	  powerpc64-*)
+	  powerpc64-*linux*)
 	    LD="${LD-ld} -m elf32ppclinux"
 	    ;;
 	  s390x-*linux*)
@@ -1369,10 +1431,10 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 	  x86_64-*linux*)
 	    LD="${LD-ld} -m elf_x86_64"
 	    ;;
-	  powerpcle-*)
+	  powerpcle-*linux*)
 	    LD="${LD-ld} -m elf64lppc"
 	    ;;
-	  powerpc-*)
+	  powerpc-*linux*)
 	    LD="${LD-ld} -m elf64ppc"
 	    ;;
 	  s390*-*linux*|s390*-*tpf*)
@@ -1390,19 +1452,20 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 
 *-*-sco3.2v5*)
   # On SCO OpenServer 5, we need -belf to get full-featured binaries.
-  SAVE_CFLAGS="$CFLAGS"
+  SAVE_CFLAGS=$CFLAGS
   CFLAGS="$CFLAGS -belf"
   AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,
     [AC_LANG_PUSH(C)
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])
      AC_LANG_POP])
-  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+  if test yes != "$lt_cv_cc_needs_belf"; then
     # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
-    CFLAGS="$SAVE_CFLAGS"
+    CFLAGS=$SAVE_CFLAGS
   fi
   ;;
 *-*solaris*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
   echo 'int i;' > conftest.$ac_ext
   if AC_TRY_EVAL(ac_compile); then
     case `/usr/bin/file conftest.o` in
@@ -1410,7 +1473,7 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
       case $lt_cv_prog_gnu_ld in
       yes*)
         case $host in
-        i?86-*-solaris*)
+        i?86-*-solaris*|x86_64-*-solaris*)
           LD="${LD-ld} -m elf_x86_64"
           ;;
         sparc*-*-solaris*)
@@ -1419,7 +1482,7 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
         esac
         # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.
         if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then
-          LD="${LD-ld}_sol2"
+          LD=${LD-ld}_sol2
         fi
         ;;
       *)
@@ -1435,7 +1498,7 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
   ;;
 esac
 
-need_locks="$enable_libtool_lock"
+need_locks=$enable_libtool_lock
 ])# _LT_ENABLE_LOCK
 
 
@@ -1454,11 +1517,11 @@ AC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],
      [echo conftest.$ac_objext > conftest.lst
       lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'
       AC_TRY_EVAL([lt_ar_try])
-      if test "$ac_status" -eq 0; then
+      if test 0 -eq "$ac_status"; then
 	# Ensure the archiver fails upon bogus file names.
 	rm -f conftest.$ac_objext libconftest.a
 	AC_TRY_EVAL([lt_ar_try])
-	if test "$ac_status" -ne 0; then
+	if test 0 -ne "$ac_status"; then
           lt_cv_ar_at_file=@
         fi
       fi
@@ -1466,7 +1529,7 @@ AC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],
      ])
   ])
 
-if test "x$lt_cv_ar_at_file" = xno; then
+if test no = "$lt_cv_ar_at_file"; then
   archiver_list_spec=
 else
   archiver_list_spec=$lt_cv_ar_at_file
@@ -1497,7 +1560,7 @@ old_postuninstall_cmds=
 
 if test -n "$RANLIB"; then
   case $host_os in
-  openbsd*)
+  bitrig* | openbsd*)
     old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$tool_oldlib"
     ;;
   *)
@@ -1533,7 +1596,7 @@ AC_CACHE_CHECK([$1], [$2],
   [$2=no
    m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
    echo "$lt_simple_compile_test_code" > conftest.$ac_ext
-   lt_compiler_flag="$3"
+   lt_compiler_flag="$3"  ## exclude from sc_useless_quotes_in_assignment
    # Insert the option either (1) after the last *FLAGS variable, or
    # (2) before a word containing "conftest.", or (3) at the end.
    # Note that $ac_compile itself does not contain backslashes and begins
@@ -1560,7 +1623,7 @@ AC_CACHE_CHECK([$1], [$2],
    $RM conftest*
 ])
 
-if test x"[$]$2" = xyes; then
+if test yes = "[$]$2"; then
     m4_if([$5], , :, [$5])
 else
     m4_if([$6], , :, [$6])
@@ -1582,7 +1645,7 @@ AC_DEFUN([_LT_LINKER_OPTION],
 m4_require([_LT_DECL_SED])dnl
 AC_CACHE_CHECK([$1], [$2],
   [$2=no
-   save_LDFLAGS="$LDFLAGS"
+   save_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS $3"
    echo "$lt_simple_link_test_code" > conftest.$ac_ext
    if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
@@ -1601,10 +1664,10 @@ AC_CACHE_CHECK([$1], [$2],
      fi
    fi
    $RM -r conftest*
-   LDFLAGS="$save_LDFLAGS"
+   LDFLAGS=$save_LDFLAGS
 ])
 
-if test x"[$]$2" = xyes; then
+if test yes = "[$]$2"; then
     m4_if([$4], , :, [$4])
 else
     m4_if([$5], , :, [$5])
@@ -1625,7 +1688,7 @@ AC_DEFUN([LT_CMD_MAX_LEN],
 AC_MSG_CHECKING([the maximum length of command line arguments])
 AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
   i=0
-  teststring="ABCD"
+  teststring=ABCD
 
   case $build_os in
   msdosdjgpp*)
@@ -1665,7 +1728,7 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -1716,22 +1779,22 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
   *)
     lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
     if test -n "$lt_cv_sys_max_cmd_len" && \
-	test undefined != "$lt_cv_sys_max_cmd_len"; then
+       test undefined != "$lt_cv_sys_max_cmd_len"; then
       lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
       lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
     else
       # Make teststring a little bigger before we do anything with it.
       # a 1K string should be a reasonable start.
-      for i in 1 2 3 4 5 6 7 8 ; do
+      for i in 1 2 3 4 5 6 7 8; do
         teststring=$teststring$teststring
       done
       SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
       # If test is not a shell built-in, we'll probably end up computing a
       # maximum length that is only half of the actual maximum length, but
       # we can't tell.
-      while { test "X"`env echo "$teststring$teststring" 2>/dev/null` \
+      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
 	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
-	      test $i != 17 # 1/2 MB should be enough
+	      test 17 != "$i" # 1/2 MB should be enough
       do
         i=`expr $i + 1`
         teststring=$teststring$teststring
@@ -1747,7 +1810,7 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
     ;;
   esac
 ])
-if test -n $lt_cv_sys_max_cmd_len ; then
+if test -n "$lt_cv_sys_max_cmd_len"; then
   AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
 else
   AC_MSG_RESULT(none)
@@ -1775,7 +1838,7 @@ m4_defun([_LT_HEADER_DLFCN],
 # ----------------------------------------------------------------
 m4_defun([_LT_TRY_DLOPEN_SELF],
 [m4_require([_LT_HEADER_DLFCN])dnl
-if test "$cross_compiling" = yes; then :
+if test yes = "$cross_compiling"; then :
   [$4]
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
@@ -1822,9 +1885,9 @@ else
 #  endif
 #endif
 
-/* When -fvisbility=hidden is used, assume the code has been annotated
+/* When -fvisibility=hidden is used, assume the code has been annotated
    correspondingly for the symbols needed.  */
-#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
+#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
 int fnord () __attribute__((visibility("default")));
 #endif
 
@@ -1850,7 +1913,7 @@ int main ()
   return status;
 }]
 _LT_EOF
-  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then
+  if AC_TRY_EVAL(ac_link) && test -s "conftest$ac_exeext" 2>/dev/null; then
     (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
     lt_status=$?
     case x$lt_status in
@@ -1871,7 +1934,7 @@ rm -fr conftest*
 # ------------------
 AC_DEFUN([LT_SYS_DLOPEN_SELF],
 [m4_require([_LT_HEADER_DLFCN])dnl
-if test "x$enable_dlopen" != xyes; then
+if test yes != "$enable_dlopen"; then
   enable_dlopen=unknown
   enable_dlopen_self=unknown
   enable_dlopen_self_static=unknown
@@ -1881,44 +1944,52 @@ else
 
   case $host_os in
   beos*)
-    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen=load_add_on
     lt_cv_dlopen_libs=
     lt_cv_dlopen_self=yes
     ;;
 
   mingw* | pw32* | cegcc*)
-    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen=LoadLibrary
     lt_cv_dlopen_libs=
     ;;
 
   cygwin*)
-    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen=dlopen
     lt_cv_dlopen_libs=
     ;;
 
   darwin*)
-  # if libdl is installed we need to link against it
+    # if libdl is installed we need to link against it
     AC_CHECK_LIB([dl], [dlopen],
-		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
-    lt_cv_dlopen="dyld"
+		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[
+    lt_cv_dlopen=dyld
     lt_cv_dlopen_libs=
     lt_cv_dlopen_self=yes
     ])
     ;;
 
+  tpf*)
+    # Don't try to run any link tests for TPF.  We know it's impossible
+    # because TPF is a cross-compiler, and we know how we open DSOs.
+    lt_cv_dlopen=dlopen
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=no
+    ;;
+
   *)
     AC_CHECK_FUNC([shl_load],
-	  [lt_cv_dlopen="shl_load"],
+	  [lt_cv_dlopen=shl_load],
       [AC_CHECK_LIB([dld], [shl_load],
-	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
+	    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],
 	[AC_CHECK_FUNC([dlopen],
-	      [lt_cv_dlopen="dlopen"],
+	      [lt_cv_dlopen=dlopen],
 	  [AC_CHECK_LIB([dl], [dlopen],
-		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
+		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],
 	    [AC_CHECK_LIB([svld], [dlopen],
-		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
+		  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],
 	      [AC_CHECK_LIB([dld], [dld_link],
-		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
+		    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])
 	      ])
 	    ])
 	  ])
@@ -1927,21 +1998,21 @@ else
     ;;
   esac
 
-  if test "x$lt_cv_dlopen" != xno; then
-    enable_dlopen=yes
-  else
+  if test no = "$lt_cv_dlopen"; then
     enable_dlopen=no
+  else
+    enable_dlopen=yes
   fi
 
   case $lt_cv_dlopen in
   dlopen)
-    save_CPPFLAGS="$CPPFLAGS"
-    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+    save_CPPFLAGS=$CPPFLAGS
+    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
 
-    save_LDFLAGS="$LDFLAGS"
+    save_LDFLAGS=$LDFLAGS
     wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
 
-    save_LIBS="$LIBS"
+    save_LIBS=$LIBS
     LIBS="$lt_cv_dlopen_libs $LIBS"
 
     AC_CACHE_CHECK([whether a program can dlopen itself],
@@ -1951,7 +2022,7 @@ else
 	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
     ])
 
-    if test "x$lt_cv_dlopen_self" = xyes; then
+    if test yes = "$lt_cv_dlopen_self"; then
       wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
       AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
 	  lt_cv_dlopen_self_static, [dnl
@@ -1961,9 +2032,9 @@ else
       ])
     fi
 
-    CPPFLAGS="$save_CPPFLAGS"
-    LDFLAGS="$save_LDFLAGS"
-    LIBS="$save_LIBS"
+    CPPFLAGS=$save_CPPFLAGS
+    LDFLAGS=$save_LDFLAGS
+    LIBS=$save_LIBS
     ;;
   esac
 
@@ -2055,8 +2126,8 @@ m4_defun([_LT_COMPILER_FILE_LOCKS],
 m4_require([_LT_FILEUTILS_DEFAULTS])dnl
 _LT_COMPILER_C_O([$1])
 
-hard_links="nottested"
-if test "$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)" = no && test "$need_locks" != no; then
+hard_links=nottested
+if test no = "$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)" && test no != "$need_locks"; then
   # do not overwrite the value of need_locks provided by the user
   AC_MSG_CHECKING([if we can lock with hard links])
   hard_links=yes
@@ -2066,8 +2137,8 @@ if test "$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)" = no && test "$need_locks" !=
   ln conftest.a conftest.b 2>&5 || hard_links=no
   ln conftest.a conftest.b 2>/dev/null && hard_links=no
   AC_MSG_RESULT([$hard_links])
-  if test "$hard_links" = no; then
-    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])
+  if test no = "$hard_links"; then
+    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])
     need_locks=warn
   fi
 else
@@ -2094,8 +2165,8 @@ objdir=$lt_cv_objdir
 _LT_DECL([], [objdir], [0],
          [The name of the directory that contains temporary libtool files])dnl
 m4_pattern_allow([LT_OBJDIR])dnl
-AC_DEFINE_UNQUOTED(LT_OBJDIR, "$lt_cv_objdir/",
-  [Define to the sub-directory in which libtool stores uninstalled libraries.])
+AC_DEFINE_UNQUOTED([LT_OBJDIR], "$lt_cv_objdir/",
+  [Define to the sub-directory where libtool stores uninstalled libraries.])
 ])# _LT_CHECK_OBJDIR
 
 
@@ -2107,15 +2178,15 @@ m4_defun([_LT_LINKER_HARDCODE_LIBPATH],
 _LT_TAGVAR(hardcode_action, $1)=
 if test -n "$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)" ||
    test -n "$_LT_TAGVAR(runpath_var, $1)" ||
-   test "X$_LT_TAGVAR(hardcode_automatic, $1)" = "Xyes" ; then
+   test yes = "$_LT_TAGVAR(hardcode_automatic, $1)"; then
 
   # We can hardcode non-existent directories.
-  if test "$_LT_TAGVAR(hardcode_direct, $1)" != no &&
+  if test no != "$_LT_TAGVAR(hardcode_direct, $1)" &&
      # If the only mechanism to avoid hardcoding is shlibpath_var, we
      # have to relink, otherwise we might link with an installed library
      # when we should be linking with a yet-to-be-installed one
-     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, $1)" != no &&
-     test "$_LT_TAGVAR(hardcode_minus_L, $1)" != no; then
+     ## test no != "$_LT_TAGVAR(hardcode_shlibpath_var, $1)" &&
+     test no != "$_LT_TAGVAR(hardcode_minus_L, $1)"; then
     # Linking always hardcodes the temporary library directory.
     _LT_TAGVAR(hardcode_action, $1)=relink
   else
@@ -2129,12 +2200,12 @@ else
 fi
 AC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])
 
-if test "$_LT_TAGVAR(hardcode_action, $1)" = relink ||
-   test "$_LT_TAGVAR(inherit_rpath, $1)" = yes; then
+if test relink = "$_LT_TAGVAR(hardcode_action, $1)" ||
+   test yes = "$_LT_TAGVAR(inherit_rpath, $1)"; then
   # Fast installation is not supported
   enable_fast_install=no
-elif test "$shlibpath_overrides_runpath" = yes ||
-     test "$enable_shared" = no; then
+elif test yes = "$shlibpath_overrides_runpath" ||
+     test no = "$enable_shared"; then
   # Fast installation is not necessary
   enable_fast_install=needless
 fi
@@ -2158,7 +2229,7 @@ else
 # FIXME - insert some real tests, host_os isn't really good enough
   case $host_os in
   darwin*)
-    if test -n "$STRIP" ; then
+    if test -n "$STRIP"; then
       striplib="$STRIP -x"
       old_striplib="$STRIP -S"
       AC_MSG_RESULT([yes])
@@ -2176,6 +2247,47 @@ _LT_DECL([], [striplib], [1])
 ])# _LT_CMD_STRIPLIB
 
 
+# _LT_PREPARE_MUNGE_PATH_LIST
+# ---------------------------
+# Make sure func_munge_path_list() is defined correctly.
+m4_defun([_LT_PREPARE_MUNGE_PATH_LIST],
+[[# func_munge_path_list VARIABLE PATH
+# -----------------------------------
+# VARIABLE is name of variable containing _space_ separated list of
+# directories to be munged by the contents of PATH, which is string
+# having a format:
+# "DIR[:DIR]:"
+#       string "DIR[ DIR]" will be prepended to VARIABLE
+# ":DIR[:DIR]"
+#       string "DIR[ DIR]" will be appended to VARIABLE
+# "DIRP[:DIRP]::[DIRA:]DIRA"
+#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
+#       "DIRA[ DIRA]" will be appended to VARIABLE
+# "DIR[:DIR]"
+#       VARIABLE will be replaced by "DIR[ DIR]"
+func_munge_path_list ()
+{
+    case x@S|@2 in
+    x)
+        ;;
+    *:)
+        eval @S|@1=\"`$ECHO @S|@2 | $SED 's/:/ /g'` \@S|@@S|@1\"
+        ;;
+    x:*)
+        eval @S|@1=\"\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\"
+        ;;
+    *::*)
+        eval @S|@1=\"\@S|@@S|@1\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
+        eval @S|@1=\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \@S|@@S|@1\"
+        ;;
+    *)
+        eval @S|@1=\"`$ECHO @S|@2 | $SED 's/:/ /g'`\"
+        ;;
+    esac
+}
+]])# _LT_PREPARE_PATH_LIST
+
+
 # _LT_SYS_DYNAMIC_LINKER([TAG])
 # -----------------------------
 # PORTME Fill in your ld.so characteristics
@@ -2186,17 +2298,18 @@ m4_require([_LT_FILEUTILS_DEFAULTS])dnl
 m4_require([_LT_DECL_OBJDUMP])dnl
 m4_require([_LT_DECL_SED])dnl
 m4_require([_LT_CHECK_SHELL_FEATURES])dnl
+m4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl
 AC_MSG_CHECKING([dynamic linker characteristics])
 m4_if([$1],
 	[], [
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   case $host_os in
-    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
-    *) lt_awk_arg="/^libraries:/" ;;
+    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;
+    *) lt_awk_arg='/^libraries:/' ;;
   esac
   case $host_os in
-    mingw* | cegcc*) lt_sed_strip_eq="s,=\([[A-Za-z]]:\),\1,g" ;;
-    *) lt_sed_strip_eq="s,=/,/,g" ;;
+    mingw* | cegcc*) lt_sed_strip_eq='s|=\([[A-Za-z]]:\)|\1|g' ;;
+    *) lt_sed_strip_eq='s|=/|/|g' ;;
   esac
   lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e $lt_sed_strip_eq`
   case $lt_search_path_spec in
@@ -2212,28 +2325,35 @@ if test "$GCC" = yes; then
     ;;
   esac
   # Ok, now we have the path, separated by spaces, we can step through it
-  # and add multilib dir if necessary.
+  # and add multilib dir if necessary...
   lt_tmp_lt_search_path_spec=
-  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  # ...but if some path component already ends with the multilib dir we assume
+  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).
+  case "$lt_multi_os_dir; $lt_search_path_spec " in
+  "/; "* | "/.; "* | "/./; "* | *"$lt_multi_os_dir "* | *"$lt_multi_os_dir/ "*)
+    lt_multi_os_dir=
+    ;;
+  esac
   for lt_sys_path in $lt_search_path_spec; do
-    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
-      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
-    else
+    if test -d "$lt_sys_path$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir"
+    elif test -n "$lt_multi_os_dir"; then
       test -d "$lt_sys_path" && \
 	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
     fi
   done
   lt_search_path_spec=`$ECHO "$lt_tmp_lt_search_path_spec" | awk '
-BEGIN {RS=" "; FS="/|\n";} {
-  lt_foo="";
-  lt_count=0;
+BEGIN {RS = " "; FS = "/|\n";} {
+  lt_foo = "";
+  lt_count = 0;
   for (lt_i = NF; lt_i > 0; lt_i--) {
     if ($lt_i != "" && $lt_i != ".") {
       if ($lt_i == "..") {
         lt_count++;
       } else {
         if (lt_count == 0) {
-          lt_foo="/" $lt_i lt_foo;
+          lt_foo = "/" $lt_i lt_foo;
         } else {
           lt_count--;
         }
@@ -2247,7 +2367,7 @@ BEGIN {RS=" "; FS="/|\n";} {
   # for these hosts.
   case $host_os in
     mingw* | cegcc*) lt_search_path_spec=`$ECHO "$lt_search_path_spec" |\
-      $SED 's,/\([[A-Za-z]]:\),\1,g'` ;;
+      $SED 's|/\([[A-Za-z]]:\)|\1|g'` ;;
   esac
   sys_lib_search_path_spec=`$ECHO "$lt_search_path_spec" | $lt_NL2SP`
 else
@@ -2256,7 +2376,7 @@ fi])
 library_names_spec=
 libname_spec='lib$name'
 soname_spec=
-shrext_cmds=".so"
+shrext_cmds=.so
 postinstall_cmds=
 postuninstall_cmds=
 finish_cmds=
@@ -2273,14 +2393,17 @@ hardcode_into_libs=no
 # flags to be left without arguments
 need_version=unknown
 
+AC_ARG_VAR([LT_SYS_LIBRARY_PATH],
+[User-defined run-time library search path.])
+
 case $host_os in
 aix3*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'
   shlibpath_var=LIBPATH
 
   # AIX 3 has no versioning support, so we append a major version to the name.
-  soname_spec='${libname}${release}${shared_ext}$major'
+  soname_spec='$libname$release$shared_ext$major'
   ;;
 
 aix[[4-9]]*)
@@ -2288,41 +2411,91 @@ aix[[4-9]]*)
   need_lib_prefix=no
   need_version=no
   hardcode_into_libs=yes
-  if test "$host_cpu" = ia64; then
+  if test ia64 = "$host_cpu"; then
     # AIX 5 supports IA64
-    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'
     shlibpath_var=LD_LIBRARY_PATH
   else
     # With GCC up to 2.95.x, collect2 would create an import file
     # for dependence libraries.  The import file would start with
-    # the line `#! .'.  This would cause the generated library to
-    # depend on `.', always an invalid library.  This was fixed in
+    # the line '#! .'.  This would cause the generated library to
+    # depend on '.', always an invalid library.  This was fixed in
     # development snapshots of GCC prior to 3.0.
     case $host_os in
       aix4 | aix4.[[01]] | aix4.[[01]].*)
       if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
 	   echo ' yes '
-	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then
 	:
       else
 	can_build_shared=no
       fi
       ;;
     esac
-    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # Using Import Files as archive members, it is possible to support
+    # filename-based versioning of shared library archives on AIX. While
+    # this would work for both with and without runtime linking, it will
+    # prevent static linking of such archives. So we do filename-based
+    # shared library versioning with .so extension only, which is used
+    # when both runtime linking and shared linking is enabled.
+    # Unfortunately, runtime linking may impact performance, so we do
+    # not want this to be the default eventually. Also, we use the
+    # versioned .so libs for executables only if there is the -brtl
+    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.
+    # To allow for filename-based versioning support, we need to create
+    # libNAME.so.V as an archive file, containing:
+    # *) an Import File, referring to the versioned filename of the
+    #    archive as well as the shared archive member, telling the
+    #    bitwidth (32 or 64) of that shared object, and providing the
+    #    list of exported symbols of that shared object, eventually
+    #    decorated with the 'weak' keyword
+    # *) the shared object with the F_LOADONLY flag set, to really avoid
+    #    it being seen by the linker.
+    # At run time we better use the real file rather than another symlink,
+    # but for link time we create the symlink libNAME.so -> libNAME.so.V
+
+    case $with_aix_soname,$aix_use_runtimelinking in
+    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct
     # soname into executable. Probably we can add versioning support to
     # collect2, so additional links can be useful in future.
-    if test "$aix_use_runtimelinking" = yes; then
+    aix,yes) # traditional libtool
+      dynamic_linker='AIX unversionable lib.so'
       # If using run time linking (on AIX 4.2 or later) use lib<name>.so
       # instead of lib<name>.a to let people know that these are not
       # typical AIX shared libraries.
-      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    else
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+      ;;
+    aix,no) # traditional AIX only
+      dynamic_linker='AIX lib.a[(]lib.so.V[)]'
       # We preserve .a as extension for shared libraries through AIX4.2
       # and later when we are not doing run time linking.
-      library_names_spec='${libname}${release}.a $libname.a'
-      soname_spec='${libname}${release}${shared_ext}$major'
-    fi
+      library_names_spec='$libname$release.a $libname.a'
+      soname_spec='$libname$release$shared_ext$major'
+      ;;
+    svr4,*) # full svr4 only
+      dynamic_linker="AIX lib.so.V[(]$shared_archive_member_spec.o[)]"
+      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
+      # We do not specify a path in Import Files, so LIBPATH fires.
+      shlibpath_overrides_runpath=yes
+      ;;
+    *,yes) # both, prefer svr4
+      dynamic_linker="AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]"
+      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
+      # unpreferred sharedlib libNAME.a needs extra handling
+      postinstall_cmds='test -n "$linkname" || linkname="$realname"~func_stripname "" ".so" "$linkname"~$install_shared_prog "$dir/$func_stripname_result.$libext" "$destdir/$func_stripname_result.$libext"~test -z "$tstripme" || test -z "$striplib" || $striplib "$destdir/$func_stripname_result.$libext"'
+      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname "" ".so" "$n"~test "$func_stripname_result" = "$n" || func_append rmfiles " $odir/$func_stripname_result.$libext"'
+      # We do not specify a path in Import Files, so LIBPATH fires.
+      shlibpath_overrides_runpath=yes
+      ;;
+    *,no) # both, prefer aix
+      dynamic_linker="AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]"
+      library_names_spec='$libname$release.a $libname.a'
+      soname_spec='$libname$release$shared_ext$major'
+      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling
+      postinstall_cmds='test -z "$dlname" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z "$tstripme" || test -z "$striplib" || $striplib $destdir/$dlname~test -n "$linkname" || linkname=$realname~func_stripname "" ".a" "$linkname"~(cd "$destdir" && $LN_S -f $dlname $func_stripname_result.so)'
+      postuninstall_cmds='test -z "$dlname" || func_append rmfiles " $odir/$dlname"~for n in $old_library $library_names; do :; done~func_stripname "" ".a" "$n"~func_append rmfiles " $odir/$func_stripname_result.so"'
+      ;;
+    esac
     shlibpath_var=LIBPATH
   fi
   ;;
@@ -2332,18 +2505,18 @@ amigaos*)
   powerpc)
     # Since July 2007 AmigaOS4 officially supports .so libraries.
     # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
     ;;
   m68k)
     library_names_spec='$libname.ixlibrary $libname.a'
     # Create ${libname}_ixlibrary.a entries in /sys/libs.
-    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all "$lib" | $SED '\''s%^.*/\([[^/]]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all "$lib" | $SED '\''s%^.*/\([[^/]]*\)\.ixlibrary$%\1%'\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
     ;;
   esac
   ;;
 
 beos*)
-  library_names_spec='${libname}${shared_ext}'
+  library_names_spec='$libname$shared_ext'
   dynamic_linker="$host_os ld.so"
   shlibpath_var=LIBRARY_PATH
   ;;
@@ -2351,8 +2524,8 @@ beos*)
 bsdi[[45]]*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
@@ -2364,7 +2537,7 @@ bsdi[[45]]*)
 
 cygwin* | mingw* | pw32* | cegcc*)
   version_type=windows
-  shrext_cmds=".dll"
+  shrext_cmds=.dll
   need_version=no
   need_lib_prefix=no
 
@@ -2373,8 +2546,8 @@ cygwin* | mingw* | pw32* | cegcc*)
     # gcc
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
-    postinstall_cmds='base_file=`basename \${file}`~
-      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+    postinstall_cmds='base_file=`basename \$file`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
       dldir=$destdir/`dirname \$dlpath`~
       test -d \$dldir || mkdir -p \$dldir~
       $install_prog $dir/$dlname \$dldir/$dlname~
@@ -2390,17 +2563,17 @@ cygwin* | mingw* | pw32* | cegcc*)
     case $host_os in
     cygwin*)
       # Cygwin DLLs use 'cyg' prefix rather than 'lib'
-      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'
 m4_if([$1], [],[
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
     mingw* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
-      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'
       ;;
     pw32*)
       # pw32 DLLs use 'pw' prefix rather than 'lib'
-      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'
       ;;
     esac
     dynamic_linker='Win32 ld.exe'
@@ -2409,8 +2582,8 @@ m4_if([$1], [],[
   *,cl*)
     # Native MSVC
     libname_spec='$name'
-    soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
-    library_names_spec='${libname}.dll.lib'
+    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'
+    library_names_spec='$libname.dll.lib'
 
     case $build_os in
     mingw*)
@@ -2437,7 +2610,7 @@ m4_if([$1], [],[
       sys_lib_search_path_spec=`cygpath --path --unix "$sys_lib_search_path_spec" | $SED -e "s/$PATH_SEPARATOR/ /g"`
       ;;
     *)
-      sys_lib_search_path_spec="$LIB"
+      sys_lib_search_path_spec=$LIB
       if $ECHO "$sys_lib_search_path_spec" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then
         # It is most probably a Windows format PATH.
         sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
@@ -2450,8 +2623,8 @@ m4_if([$1], [],[
     esac
 
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
-    postinstall_cmds='base_file=`basename \${file}`~
-      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+    postinstall_cmds='base_file=`basename \$file`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
       dldir=$destdir/`dirname \$dlpath`~
       test -d \$dldir || mkdir -p \$dldir~
       $install_prog $dir/$dlname \$dldir/$dlname'
@@ -2464,7 +2637,7 @@ m4_if([$1], [],[
 
   *)
     # Assume MSVC wrapper
-    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'
     dynamic_linker='Win32 ld.exe'
     ;;
   esac
@@ -2477,8 +2650,8 @@ darwin* | rhapsody*)
   version_type=darwin
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
-  soname_spec='${libname}${release}${major}$shared_ext'
+  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'
+  soname_spec='$libname$release$major$shared_ext'
   shlibpath_overrides_runpath=yes
   shlibpath_var=DYLD_LIBRARY_PATH
   shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
@@ -2491,8 +2664,8 @@ dgux*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
@@ -2510,12 +2683,13 @@ freebsd* | dragonfly*)
   version_type=freebsd-$objformat
   case $version_type in
     freebsd-elf*)
-      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+      soname_spec='$libname$release$shared_ext$major'
       need_version=no
       need_lib_prefix=no
       ;;
     freebsd-*)
-      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
       need_version=yes
       ;;
   esac
@@ -2545,10 +2719,10 @@ haiku*)
   need_lib_prefix=no
   need_version=no
   dynamic_linker="$host_os runtime_loader"
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LIBRARY_PATH
-  shlibpath_overrides_runpath=yes
+  shlibpath_overrides_runpath=no
   sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'
   hardcode_into_libs=yes
   ;;
@@ -2566,14 +2740,15 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.so"
     shlibpath_var=LD_LIBRARY_PATH
     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
-    if test "X$HPUX_IA64_MODE" = X32; then
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
+    if test 32 = "$HPUX_IA64_MODE"; then
       sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+      sys_lib_dlsearch_path_spec=/usr/lib/hpux32
     else
       sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+      sys_lib_dlsearch_path_spec=/usr/lib/hpux64
     fi
-    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
     ;;
   hppa*64*)
     shrext_cmds='.sl'
@@ -2581,8 +2756,8 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.sl"
     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
     ;;
@@ -2591,8 +2766,8 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.sl"
     shlibpath_var=SHLIB_PATH
     shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     ;;
   esac
   # HP-UX runs *really* slowly unless shared libraries are mode 555, ...
@@ -2605,8 +2780,8 @@ interix[[3-9]]*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
@@ -2617,7 +2792,7 @@ irix5* | irix6* | nonstopux*)
   case $host_os in
     nonstopux*) version_type=nonstopux ;;
     *)
-	if test "$lt_cv_prog_gnu_ld" = yes; then
+	if test yes = "$lt_cv_prog_gnu_ld"; then
 		version_type=linux # correct to gnu/linux during the next big refactor
 	else
 		version_type=irix
@@ -2625,8 +2800,8 @@ irix5* | irix6* | nonstopux*)
   esac
   need_lib_prefix=no
   need_version=no
-  soname_spec='${libname}${release}${shared_ext}$major'
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='$libname$release$shared_ext$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'
   case $host_os in
   irix5* | nonstopux*)
     libsuff= shlibsuff=
@@ -2645,8 +2820,8 @@ irix5* | irix6* | nonstopux*)
   esac
   shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
   shlibpath_overrides_runpath=no
-  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
-  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  sys_lib_search_path_spec="/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff"
+  sys_lib_dlsearch_path_spec="/usr/lib$libsuff /lib$libsuff"
   hardcode_into_libs=yes
   ;;
 
@@ -2655,13 +2830,33 @@ linux*oldld* | linux*aout* | linux*coff*)
   dynamic_linker=no
   ;;
 
+linux*android*)
+  version_type=none # Android doesn't support versioned libraries.
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='$libname$release$shared_ext'
+  soname_spec='$libname$release$shared_ext'
+  finish_cmds=
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  dynamic_linker='Android linker'
+  # Don't embed -rpath directories since the linker doesn't support them.
+  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+  ;;
+
 # This must be glibc/ELF.
 linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
@@ -2686,7 +2881,12 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   # before this can be enabled.
   hardcode_into_libs=yes
 
-  # Append ld.so.conf contents to the search path
+  # Ideally, we could use ldconfig to report *all* directores which are
+  # searched for libraries, however this is still not possible.  Aside from not
+  # being certain /sbin/ldconfig is available, command
+  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,
+  # even though it is searched at run-time.  Try to do the best guess by
+  # appending ld.so.conf contents (and includes) to the search path.
   if test -f /etc/ld.so.conf; then
     lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \[$]2)); skip = 1; } { if (!skip) print \[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/"//g;/^$/d' | tr '\n' ' '`
     sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
@@ -2701,29 +2901,17 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
-netbsdelf*-gnu)
-  version_type=linux
-  need_lib_prefix=no
-  need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
-  shlibpath_var=LD_LIBRARY_PATH
-  shlibpath_overrides_runpath=no
-  hardcode_into_libs=yes
-  dynamic_linker='NetBSD ld.elf_so'
-  ;;
-
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
   if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
     finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
     dynamic_linker='NetBSD (a.out) ld.so'
   else
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     dynamic_linker='NetBSD ld.elf_so'
   fi
   shlibpath_var=LD_LIBRARY_PATH
@@ -2733,7 +2921,7 @@ netbsd*)
 
 newsos6)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   ;;
@@ -2742,58 +2930,68 @@ newsos6)
   version_type=qnx
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
   hardcode_into_libs=yes
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
-  sys_lib_dlsearch_path_spec="/usr/lib"
+  sys_lib_dlsearch_path_spec=/usr/lib
   need_lib_prefix=no
-  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
-  case $host_os in
-    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
-    *)				need_version=no  ;;
-  esac
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
-  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
-  shlibpath_var=LD_LIBRARY_PATH
-  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
-    case $host_os in
-      openbsd2.[[89]] | openbsd2.[[89]].*)
-	shlibpath_overrides_runpath=no
-	;;
-      *)
-	shlibpath_overrides_runpath=yes
-	;;
-      esac
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
+    need_version=no
   else
-    shlibpath_overrides_runpath=yes
+    need_version=yes
   fi
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
   ;;
 
 os2*)
   libname_spec='$name'
-  shrext_cmds=".dll"
+  version_type=windows
+  shrext_cmds=.dll
+  need_version=no
   need_lib_prefix=no
-  library_names_spec='$libname${shared_ext} $libname.a'
+  # OS/2 can only load a DLL with a base name of 8 characters or less.
+  soname_spec='`test -n "$os2dllname" && libname="$os2dllname";
+    v=$($ECHO $release$versuffix | tr -d .-);
+    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);
+    $ECHO $n$v`$shared_ext'
+  library_names_spec='${libname}_dll.$libext'
   dynamic_linker='OS/2 ld.exe'
-  shlibpath_var=LIBPATH
+  shlibpath_var=BEGINLIBPATH
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+  postinstall_cmds='base_file=`basename \$file`~
+    dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; $ECHO \$dlname'\''`~
+    dldir=$destdir/`dirname \$dlpath`~
+    test -d \$dldir || mkdir -p \$dldir~
+    $install_prog $dir/$dlname \$dldir/$dlname~
+    chmod a+x \$dldir/$dlname~
+    if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+      eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+    fi'
+  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; $ECHO \$dlname'\''`~
+    dlpath=$dir/\$dldll~
+    $RM \$dlpath'
   ;;
 
 osf3* | osf4* | osf5*)
   version_type=osf
   need_lib_prefix=no
   need_version=no
-  soname_spec='${libname}${release}${shared_ext}$major'
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='$libname$release$shared_ext$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
-  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
   ;;
 
 rdos*)
@@ -2804,8 +3002,8 @@ solaris*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   hardcode_into_libs=yes
@@ -2815,11 +3013,11 @@ solaris*)
 
 sunos4*)
   version_type=sunos
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
   finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     need_lib_prefix=no
   fi
   need_version=yes
@@ -2827,8 +3025,8 @@ sunos4*)
 
 sysv4 | sysv4.3*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   case $host_vendor in
     sni)
@@ -2849,24 +3047,24 @@ sysv4 | sysv4.3*)
   ;;
 
 sysv4*MP*)
-  if test -d /usr/nec ;then
+  if test -d /usr/nec; then
     version_type=linux # correct to gnu/linux during the next big refactor
-    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
-    soname_spec='$libname${shared_ext}.$major'
+    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'
+    soname_spec='$libname$shared_ext.$major'
     shlibpath_var=LD_LIBRARY_PATH
   fi
   ;;
 
 sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
-  version_type=freebsd-elf
+  version_type=sco
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   hardcode_into_libs=yes
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
   else
     sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
@@ -2884,7 +3082,7 @@ tpf*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
   hardcode_into_libs=yes
@@ -2892,8 +3090,8 @@ tpf*)
 
 uts4*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
@@ -2902,20 +3100,30 @@ uts4*)
   ;;
 esac
 AC_MSG_RESULT([$dynamic_linker])
-test "$dynamic_linker" = no && can_build_shared=no
+test no = "$dynamic_linker" && can_build_shared=no
 
 variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
 fi
 
-if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
-  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+if test set = "${lt_cv_sys_lib_search_path_spec+set}"; then
+  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec
 fi
-if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
-  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+
+if test set = "${lt_cv_sys_lib_dlsearch_path_spec+set}"; then
+  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec
 fi
 
+# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...
+configure_time_dlsearch_path=$sys_lib_dlsearch_path_spec
+
+# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code
+func_munge_path_list sys_lib_dlsearch_path_spec "$LT_SYS_LIBRARY_PATH"
+
+# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool
+configure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH
+
 _LT_DECL([], [variables_saved_for_relink], [1],
     [Variables whose values should be saved in libtool wrapper scripts and
     restored at link time])
@@ -2948,39 +3156,41 @@ _LT_DECL([], [hardcode_into_libs], [0],
     [Whether we should hardcode library paths into libraries])
 _LT_DECL([], [sys_lib_search_path_spec], [2],
     [Compile-time system search path for libraries])
-_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],
-    [Run-time system search path for libraries])
+_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],
+    [Detected run-time system search path for libraries])
+_LT_DECL([], [configure_time_lt_sys_library_path], [2],
+    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])
 ])# _LT_SYS_DYNAMIC_LINKER
 
 
 # _LT_PATH_TOOL_PREFIX(TOOL)
 # --------------------------
-# find a file program which can recognize shared library
+# find a file program that can recognize shared library
 AC_DEFUN([_LT_PATH_TOOL_PREFIX],
 [m4_require([_LT_DECL_EGREP])dnl
 AC_MSG_CHECKING([for $1])
 AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
 [case $MAGIC_CMD in
 [[\\/*] |  ?:[\\/]*])
-  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
   ;;
 *)
-  lt_save_MAGIC_CMD="$MAGIC_CMD"
-  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  lt_save_MAGIC_CMD=$MAGIC_CMD
+  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
 dnl $ac_dummy forces splitting on constant user-supplied paths.
 dnl POSIX.2 word splitting is done only on the output of word expansions,
 dnl not every word.  This closes a longstanding sh security hole.
   ac_dummy="m4_if([$2], , $PATH, [$2])"
   for ac_dir in $ac_dummy; do
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
     test -z "$ac_dir" && ac_dir=.
-    if test -f $ac_dir/$1; then
-      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
+    if test -f "$ac_dir/$1"; then
+      lt_cv_path_MAGIC_CMD=$ac_dir/"$1"
       if test -n "$file_magic_test_file"; then
 	case $deplibs_check_method in
 	"file_magic "*)
 	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
-	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
 	    $EGREP "$file_magic_regex" > /dev/null; then
 	    :
@@ -3003,11 +3213,11 @@ _LT_EOF
       break
     fi
   done
-  IFS="$lt_save_ifs"
-  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  IFS=$lt_save_ifs
+  MAGIC_CMD=$lt_save_MAGIC_CMD
   ;;
 esac])
-MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 if test -n "$MAGIC_CMD"; then
   AC_MSG_RESULT($MAGIC_CMD)
 else
@@ -3025,7 +3235,7 @@ dnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])
 
 # _LT_PATH_MAGIC
 # --------------
-# find a file program which can recognize a shared library
+# find a file program that can recognize a shared library
 m4_defun([_LT_PATH_MAGIC],
 [_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)
 if test -z "$lt_cv_path_MAGIC_CMD"; then
@@ -3052,16 +3262,16 @@ m4_require([_LT_PROG_ECHO_BACKSLASH])dnl
 AC_ARG_WITH([gnu-ld],
     [AS_HELP_STRING([--with-gnu-ld],
 	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
-    [test "$withval" = no || with_gnu_ld=yes],
+    [test no = "$withval" || with_gnu_ld=yes],
     [with_gnu_ld=no])dnl
 
 ac_prog=ld
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by $CC])
   case $host in
   *-*-mingw*)
-    # gcc leaves a trailing carriage return which upsets mingw
+    # gcc leaves a trailing carriage return, which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
     ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
@@ -3075,7 +3285,7 @@ if test "$GCC" = yes; then
       while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
 	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
       done
-      test -z "$LD" && LD="$ac_prog"
+      test -z "$LD" && LD=$ac_prog
       ;;
   "")
     # If it fails, then pretend we aren't using GCC.
@@ -3086,37 +3296,37 @@ if test "$GCC" = yes; then
     with_gnu_ld=unknown
     ;;
   esac
-elif test "$with_gnu_ld" = yes; then
+elif test yes = "$with_gnu_ld"; then
   AC_MSG_CHECKING([for GNU ld])
 else
   AC_MSG_CHECKING([for non-GNU ld])
 fi
 AC_CACHE_VAL(lt_cv_path_LD,
 [if test -z "$LD"; then
-  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
   for ac_dir in $PATH; do
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
     test -z "$ac_dir" && ac_dir=.
     if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
-      lt_cv_path_LD="$ac_dir/$ac_prog"
+      lt_cv_path_LD=$ac_dir/$ac_prog
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some variants of GNU ld only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
       case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
       *GNU* | *'with BFD'*)
-	test "$with_gnu_ld" != no && break
+	test no != "$with_gnu_ld" && break
 	;;
       *)
-	test "$with_gnu_ld" != yes && break
+	test yes != "$with_gnu_ld" && break
 	;;
       esac
     fi
   done
-  IFS="$lt_save_ifs"
+  IFS=$lt_save_ifs
 else
-  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+  lt_cv_path_LD=$LD # Let the user override the test with a path.
 fi])
-LD="$lt_cv_path_LD"
+LD=$lt_cv_path_LD
 if test -n "$LD"; then
   AC_MSG_RESULT($LD)
 else
@@ -3170,13 +3380,13 @@ esac
 reload_cmds='$LD$reload_flag -o $output$reload_objs'
 case $host_os in
   cygwin* | mingw* | pw32* | cegcc*)
-    if test "$GCC" != yes; then
+    if test yes != "$GCC"; then
       reload_cmds=false
     fi
     ;;
   darwin*)
-    if test "$GCC" = yes; then
-      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    if test yes = "$GCC"; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'
     else
       reload_cmds='$LD$reload_flag -o $output$reload_objs'
     fi
@@ -3187,6 +3397,43 @@ _LT_TAGDECL([], [reload_cmds], [2])dnl
 ])# _LT_CMD_RELOAD
 
 
+# _LT_PATH_DD
+# -----------
+# find a working dd
+m4_defun([_LT_PATH_DD],
+[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],
+[printf 0123456789abcdef0123456789abcdef >conftest.i
+cat conftest.i conftest.i >conftest2.i
+: ${lt_DD:=$DD}
+AC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],
+[if "$ac_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
+  cmp -s conftest.i conftest.out \
+  && ac_cv_path_lt_DD="$ac_path_lt_DD" ac_path_lt_DD_found=:
+fi])
+rm -f conftest.i conftest2.i conftest.out])
+])# _LT_PATH_DD
+
+
+# _LT_CMD_TRUNCATE
+# ----------------
+# find command to truncate a binary pipe
+m4_defun([_LT_CMD_TRUNCATE],
+[m4_require([_LT_PATH_DD])
+AC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],
+[printf 0123456789abcdef0123456789abcdef >conftest.i
+cat conftest.i conftest.i >conftest2.i
+lt_cv_truncate_bin=
+if "$ac_cv_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
+  cmp -s conftest.i conftest.out \
+  && lt_cv_truncate_bin="$ac_cv_path_lt_DD bs=4096 count=1"
+fi
+rm -f conftest.i conftest2.i conftest.out
+test -z "$lt_cv_truncate_bin" && lt_cv_truncate_bin="$SED -e 4q"])
+_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],
+  [Command to truncate a binary pipe])
+])# _LT_CMD_TRUNCATE
+
+
 # _LT_CHECK_MAGIC_METHOD
 # ----------------------
 # how to check for library dependencies
@@ -3202,13 +3449,13 @@ lt_cv_deplibs_check_method='unknown'
 # Need to set the preceding variable on all platforms that support
 # interlibrary dependencies.
 # 'none' -- dependencies not supported.
-# `unknown' -- same as none, but documents that we really don't know.
+# 'unknown' -- same as none, but documents that we really don't know.
 # 'pass_all' -- all dependencies passed with no checks.
 # 'test_compile' -- check by making test program.
 # 'file_magic [[regex]]' -- check by looking for files in library path
-# which responds to the $file_magic_cmd with a given extended regex.
-# If you have `file' or equivalent on your system and you're not sure
-# whether `pass_all' will *always* work, you probably want this one.
+# that responds to the $file_magic_cmd with a given extended regex.
+# If you have 'file' or equivalent on your system and you're not sure
+# whether 'pass_all' will *always* work, you probably want this one.
 
 case $host_os in
 aix[[4-9]]*)
@@ -3235,8 +3482,7 @@ mingw* | pw32*)
   # Base MSYS/MinGW do not provide the 'file' command needed by
   # func_win32_libid shell function, so use a weaker test based on 'objdump',
   # unless we find 'file', for example because we are cross-compiling.
-  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.
-  if ( test "$lt_cv_nm_interface" = "BSD nm" && file / ) >/dev/null 2>&1; then
+  if ( file / ) >/dev/null 2>&1; then
     lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
     lt_cv_file_magic_cmd='func_win32_libid'
   else
@@ -3314,7 +3560,7 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd* | netbsdelf*-gnu)
+netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
   else
@@ -3332,8 +3578,8 @@ newos6*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-openbsd*)
-  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+openbsd* | bitrig*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|\.so|_pic\.a)$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
@@ -3386,6 +3632,9 @@ sysv4 | sysv4.3*)
 tpf*)
   lt_cv_deplibs_check_method=pass_all
   ;;
+os2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
 esac
 ])
 
@@ -3426,33 +3675,38 @@ AC_DEFUN([LT_PATH_NM],
 AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
 [if test -n "$NM"; then
   # Let the user override the test.
-  lt_cv_path_NM="$NM"
+  lt_cv_path_NM=$NM
 else
-  lt_nm_to_check="${ac_tool_prefix}nm"
+  lt_nm_to_check=${ac_tool_prefix}nm
   if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
     lt_nm_to_check="$lt_nm_to_check nm"
   fi
   for lt_tmp_nm in $lt_nm_to_check; do
-    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
     for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       test -z "$ac_dir" && ac_dir=.
-      tmp_nm="$ac_dir/$lt_tmp_nm"
-      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+      tmp_nm=$ac_dir/$lt_tmp_nm
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
 	# Check to see if the nm accepts a BSD-compat flag.
-	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
 	#   nm: unknown option "B" ignored
 	# Tru64's nm complains that /dev/null is an invalid object file
-	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
-	*/dev/null* | *'Invalid file or object type'*)
+	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
+	case $build_os in
+	mingw*) lt_bad_file=conftest.nm/nofile ;;
+	*) lt_bad_file=/dev/null ;;
+	esac
+	case `"$tmp_nm" -B $lt_bad_file 2>&1 | sed '1q'` in
+	*$lt_bad_file* | *'Invalid file or object type'*)
 	  lt_cv_path_NM="$tmp_nm -B"
-	  break
+	  break 2
 	  ;;
 	*)
 	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
 	  */dev/null*)
 	    lt_cv_path_NM="$tmp_nm -p"
-	    break
+	    break 2
 	    ;;
 	  *)
 	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
@@ -3463,21 +3717,21 @@ else
 	esac
       fi
     done
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
   done
   : ${lt_cv_path_NM=no}
 fi])
-if test "$lt_cv_path_NM" != "no"; then
-  NM="$lt_cv_path_NM"
+if test no != "$lt_cv_path_NM"; then
+  NM=$lt_cv_path_NM
 else
   # Didn't find any BSD compatible name lister, look for dumpbin.
   if test -n "$DUMPBIN"; then :
     # Let the user override the test.
   else
     AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
-    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in
+    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in
     *COFF*)
-      DUMPBIN="$DUMPBIN -symbols"
+      DUMPBIN="$DUMPBIN -symbols -headers"
       ;;
     *)
       DUMPBIN=:
@@ -3485,8 +3739,8 @@ else
     esac
   fi
   AC_SUBST([DUMPBIN])
-  if test "$DUMPBIN" != ":"; then
-    NM="$DUMPBIN"
+  if test : != "$DUMPBIN"; then
+    NM=$DUMPBIN
   fi
 fi
 test -z "$NM" && NM=nm
@@ -3532,8 +3786,8 @@ lt_cv_sharedlib_from_linklib_cmd,
 
 case $host_os in
 cygwin* | mingw* | pw32* | cegcc*)
-  # two different shell functions defined in ltmain.sh
-  # decide which to use based on capabilities of $DLLTOOL
+  # two different shell functions defined in ltmain.sh;
+  # decide which one to use based on capabilities of $DLLTOOL
   case `$DLLTOOL --help 2>&1` in
   *--identify-strict*)
     lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
@@ -3545,7 +3799,7 @@ cygwin* | mingw* | pw32* | cegcc*)
   ;;
 *)
   # fallback: assume linklib IS sharedlib
-  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
+  lt_cv_sharedlib_from_linklib_cmd=$ECHO
   ;;
 esac
 ])
@@ -3572,13 +3826,28 @@ AC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool
     lt_cv_path_mainfest_tool=yes
   fi
   rm -f conftest*])
-if test "x$lt_cv_path_mainfest_tool" != xyes; then
+if test yes != "$lt_cv_path_mainfest_tool"; then
   MANIFEST_TOOL=:
 fi
 _LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl
 ])# _LT_PATH_MANIFEST_TOOL
 
 
+# _LT_DLL_DEF_P([FILE])
+# ---------------------
+# True iff FILE is a Windows DLL '.def' file.
+# Keep in sync with func_dll_def_p in the libtool script
+AC_DEFUN([_LT_DLL_DEF_P],
+[dnl
+  test DEF = "`$SED -n dnl
+    -e '\''s/^[[	 ]]*//'\'' dnl Strip leading whitespace
+    -e '\''/^\(;.*\)*$/d'\'' dnl      Delete empty lines and comments
+    -e '\''s/^\(EXPORTS\|LIBRARY\)\([[	 ]].*\)*$/DEF/p'\'' dnl
+    -e q dnl                          Only consider the first "real" line
+    $1`" dnl
+])# _LT_DLL_DEF_P
+
+
 # LT_LIB_M
 # --------
 # check for math library
@@ -3590,11 +3859,11 @@ case $host in
   # These system don't have libm, or don't need it
   ;;
 *-ncr-sysv4.3*)
-  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
+  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)
   AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
   ;;
 *)
-  AC_CHECK_LIB(m, cos, LIBM="-lm")
+  AC_CHECK_LIB(m, cos, LIBM=-lm)
   ;;
 esac
 AC_SUBST([LIBM])
@@ -3613,7 +3882,7 @@ m4_defun([_LT_COMPILER_NO_RTTI],
 
 _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
 
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   case $cc_basename in
   nvcc*)
     _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;
@@ -3665,7 +3934,7 @@ cygwin* | mingw* | pw32* | cegcc*)
   symcode='[[ABCDGISTW]]'
   ;;
 hpux*)
-  if test "$host_cpu" = ia64; then
+  if test ia64 = "$host_cpu"; then
     symcode='[[ABCDEGRST]]'
   fi
   ;;
@@ -3698,14 +3967,44 @@ case `$NM -V 2>&1` in
   symcode='[[ABCDGIRSTW]]' ;;
 esac
 
+if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+  # Gets list of data symbols to import.
+  lt_cv_sys_global_symbol_to_import="sed -n -e 's/^I .* \(.*\)$/\1/p'"
+  # Adjust the below global symbol transforms to fixup imported variables.
+  lt_cdecl_hook=" -e 's/^I .* \(.*\)$/extern __declspec(dllimport) char \1;/p'"
+  lt_c_name_hook=" -e 's/^I .* \(.*\)$/  {\"\1\", (void *) 0},/p'"
+  lt_c_name_lib_hook="\
+  -e 's/^I .* \(lib.*\)$/  {\"\1\", (void *) 0},/p'\
+  -e 's/^I .* \(.*\)$/  {\"lib\1\", (void *) 0},/p'"
+else
+  # Disable hooks by default.
+  lt_cv_sys_global_symbol_to_import=
+  lt_cdecl_hook=
+  lt_c_name_hook=
+  lt_c_name_lib_hook=
+fi
+
 # Transform an extracted symbol line into a proper C declaration.
 # Some systems (esp. on ia64) link data and code symbols differently,
 # so use this general approach.
-lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+lt_cv_sys_global_symbol_to_cdecl="sed -n"\
+$lt_cdecl_hook\
+" -e 's/^T .* \(.*\)$/extern int \1();/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/extern char \1;/p'"
 
 # Transform an extracted symbol line into symbol name and symbol address
-lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([[^ ]]*\)[[ ]]*$/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"\2\", (void *) \&\2},/p'"
-lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([[^ ]]*\)[[ ]]*$/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \(lib[[^ ]]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address="sed -n"\
+$lt_c_name_hook\
+" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/p'"
+
+# Transform an extracted symbol line into symbol name with lib prefix and
+# symbol address.
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n"\
+$lt_c_name_lib_hook\
+" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
+" -e 's/^$symcode$symcode* .* \(lib.*\)$/  {\"\1\", (void *) \&\1},/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"lib\1\", (void *) \&\1},/p'"
 
 # Handle CRLF in mingw tool chain
 opt_cr=
@@ -3723,21 +4022,24 @@ for ac_symprfx in "" "_"; do
 
   # Write the raw and C identifiers.
   if test "$lt_cv_nm_interface" = "MS dumpbin"; then
-    # Fake it for dumpbin and say T for any non-static function
-    # and D for any global variable.
+    # Fake it for dumpbin and say T for any non-static function,
+    # D for any global variable and I for any imported variable.
     # Also find C++ and __fastcall symbols from MSVC++,
     # which start with @ or ?.
     lt_cv_sys_global_symbol_pipe="$AWK ['"\
 "     {last_section=section; section=\$ 3};"\
 "     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};"\
 "     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     /^ *Symbol name *: /{split(\$ 0,sn,\":\"); si=substr(sn[2],2)};"\
+"     /^ *Type *: code/{print \"T\",si,substr(si,length(prfx))};"\
+"     /^ *Type *: data/{print \"I\",si,substr(si,length(prfx))};"\
 "     \$ 0!~/External *\|/{next};"\
 "     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
 "     {if(hide[section]) next};"\
-"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
-"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
-"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
-"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     {f=\"D\"}; \$ 0~/\(\).*\|/{f=\"T\"};"\
+"     {split(\$ 0,a,/\||\r/); split(a[2],s)};"\
+"     s[1]~/^[@?]/{print f,s[1],s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print f,t[1],substr(t[1],length(prfx))}"\
 "     ' prfx=^$ac_symprfx]"
   else
     lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[[	 ]]\($symcode$symcode*\)[[	 ]][[	 ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
@@ -3777,11 +4079,11 @@ _LT_EOF
 	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
 	  cat <<_LT_EOF > conftest.$ac_ext
 /* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */
-#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)
-/* DATA imports from DLLs on WIN32 con't be const, because runtime
+#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE
+/* DATA imports from DLLs on WIN32 can't be const, because runtime
    relocations are performed -- see ld's documentation on pseudo-relocs.  */
 # define LT@&t@_DLSYM_CONST
-#elif defined(__osf__)
+#elif defined __osf__
 /* This system does not cope well with relocations in const data.  */
 # define LT@&t@_DLSYM_CONST
 #else
@@ -3807,7 +4109,7 @@ lt__PROGRAM__LTX_preloaded_symbols[[]] =
 {
   { "@PROGRAM@", (void *) 0 },
 _LT_EOF
-	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  $SED "s/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
 	  cat <<\_LT_EOF >> conftest.$ac_ext
   {0, (void *) 0}
 };
@@ -3827,9 +4129,9 @@ _LT_EOF
 	  mv conftest.$ac_objext conftstm.$ac_objext
 	  lt_globsym_save_LIBS=$LIBS
 	  lt_globsym_save_CFLAGS=$CFLAGS
-	  LIBS="conftstm.$ac_objext"
+	  LIBS=conftstm.$ac_objext
 	  CFLAGS="$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)"
-	  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then
+	  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then
 	    pipe_works=yes
 	  fi
 	  LIBS=$lt_globsym_save_LIBS
@@ -3850,7 +4152,7 @@ _LT_EOF
   rm -rf conftest* conftst*
 
   # Do not use the global_symbol_pipe unless it works.
-  if test "$pipe_works" = yes; then
+  if test yes = "$pipe_works"; then
     break
   else
     lt_cv_sys_global_symbol_pipe=
@@ -3877,12 +4179,16 @@ _LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],
     [Take the output of nm and produce a listing of raw symbols and C names])
 _LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],
     [Transform the output of nm in a proper C declaration])
+_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],
+    [Transform the output of nm into a list of symbols to manually relocate])
 _LT_DECL([global_symbol_to_c_name_address],
     [lt_cv_sys_global_symbol_to_c_name_address], [1],
     [Transform the output of nm in a C name address pair])
 _LT_DECL([global_symbol_to_c_name_address_lib_prefix],
     [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],
     [Transform the output of nm in a C name address pair when lib prefix is needed])
+_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],
+    [The name lister interface])
 _LT_DECL([], [nm_file_list_spec], [1],
     [Specify filename containing input files for $NM])
 ]) # _LT_CMD_GLOBAL_SYMBOLS
@@ -3898,17 +4204,18 @@ _LT_TAGVAR(lt_prog_compiler_static, $1)=
 
 m4_if([$1], [CXX], [
   # C++ specific cases for pic, static, wl, etc.
-  if test "$GXX" = yes; then
+  if test yes = "$GXX"; then
     _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
     _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
 
     case $host_os in
     aix*)
       # All AIX code is PIC.
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# AIX 5 now supports IA64 processor
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
       fi
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
       ;;
 
     amigaos*)
@@ -3919,8 +4226,8 @@ m4_if([$1], [CXX], [
         ;;
       m68k)
             # FIXME: we need at least 68020 code to build shared libraries, but
-            # adding the `-m68020' flag to GCC prevents building anything better,
-            # like `-m68040'.
+            # adding the '-m68020' flag to GCC prevents building anything better,
+            # like '-m68040'.
             _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
         ;;
       esac
@@ -3936,6 +4243,11 @@ m4_if([$1], [CXX], [
       # (--disable-auto-import) libraries
       m4_if([$1], [GCJ], [],
 	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      case $host_os in
+      os2*)
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'
+	;;
+      esac
       ;;
     darwin* | rhapsody*)
       # PIC is the default on this platform
@@ -3985,7 +4297,7 @@ m4_if([$1], [CXX], [
     case $host_os in
       aix[[4-9]]*)
 	# All AIX code is PIC.
-	if test "$host_cpu" = ia64; then
+	if test ia64 = "$host_cpu"; then
 	  # AIX 5 now supports IA64 processor
 	  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
 	else
@@ -4026,14 +4338,14 @@ m4_if([$1], [CXX], [
 	case $cc_basename in
 	  CC*)
 	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
-	    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
-	    if test "$host_cpu" != ia64; then
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'
+	    if test ia64 != "$host_cpu"; then
 	      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
 	    fi
 	    ;;
 	  aCC*)
 	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
-	    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'
 	    case $host_cpu in
 	    hppa*64*|ia64*)
 	      # +Z the default
@@ -4070,7 +4382,7 @@ m4_if([$1], [CXX], [
 	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
 	    ;;
 	  ecpc* )
-	    # old Intel C++ for x86_64 which still supported -KPIC.
+	    # old Intel C++ for x86_64, which still supported -KPIC.
 	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
 	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
 	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
@@ -4126,7 +4438,7 @@ m4_if([$1], [CXX], [
 	    ;;
 	esac
 	;;
-      netbsd* | netbsdelf*-gnu)
+      netbsd*)
 	;;
       *qnx* | *nto*)
         # QNX uses GNU C++, but need to define -shared option too, otherwise
@@ -4215,17 +4527,18 @@ m4_if([$1], [CXX], [
   fi
 ],
 [
-  if test "$GCC" = yes; then
+  if test yes = "$GCC"; then
     _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
     _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
 
     case $host_os in
       aix*)
       # All AIX code is PIC.
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# AIX 5 now supports IA64 processor
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
       fi
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
       ;;
 
     amigaos*)
@@ -4236,8 +4549,8 @@ m4_if([$1], [CXX], [
         ;;
       m68k)
             # FIXME: we need at least 68020 code to build shared libraries, but
-            # adding the `-m68020' flag to GCC prevents building anything better,
-            # like `-m68040'.
+            # adding the '-m68020' flag to GCC prevents building anything better,
+            # like '-m68040'.
             _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
         ;;
       esac
@@ -4254,6 +4567,11 @@ m4_if([$1], [CXX], [
       # (--disable-auto-import) libraries
       m4_if([$1], [GCJ], [],
 	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      case $host_os in
+      os2*)
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'
+	;;
+      esac
       ;;
 
     darwin* | rhapsody*)
@@ -4324,7 +4642,7 @@ m4_if([$1], [CXX], [
     case $host_os in
     aix*)
       _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# AIX 5 now supports IA64 processor
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
       else
@@ -4332,11 +4650,30 @@ m4_if([$1], [CXX], [
       fi
       ;;
 
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'
+      case $cc_basename in
+      nagfor*)
+        # NAG Fortran compiler
+        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'
+        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
+        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+        ;;
+      esac
+      ;;
+
     mingw* | cygwin* | pw32* | os2* | cegcc*)
       # This hack is so that the source file can tell whether it is being
       # built for inclusion in a dll (and should export symbols for example).
       m4_if([$1], [GCJ], [],
 	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      case $host_os in
+      os2*)
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'
+	;;
+      esac
       ;;
 
     hpux9* | hpux10* | hpux11*)
@@ -4352,7 +4689,7 @@ m4_if([$1], [CXX], [
 	;;
       esac
       # Is there a better lt_prog_compiler_static that works with the bundled CC?
-      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'
       ;;
 
     irix5* | irix6* | nonstopux*)
@@ -4363,7 +4700,7 @@ m4_if([$1], [CXX], [
 
     linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
       case $cc_basename in
-      # old Intel for x86_64 which still supported -KPIC.
+      # old Intel for x86_64, which still supported -KPIC.
       ecc*)
 	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
 	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
@@ -4388,6 +4725,12 @@ m4_if([$1], [CXX], [
 	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
 	;;
+      tcc*)
+	# Fabrice Bellard et al's Tiny C Compiler
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+	;;
       pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)
         # Portland Group compilers (*not* the Pentium gcc compiler,
 	# which looks to be a dead project)
@@ -4485,7 +4828,7 @@ m4_if([$1], [CXX], [
       ;;
 
     sysv4*MP*)
-      if test -d /usr/nec ;then
+      if test -d /usr/nec; then
 	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'
 	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
       fi
@@ -4514,7 +4857,7 @@ m4_if([$1], [CXX], [
   fi
 ])
 case $host_os in
-  # For platforms which do not support PIC, -DPIC is meaningless:
+  # For platforms that do not support PIC, -DPIC is meaningless:
   *djgpp*)
     _LT_TAGVAR(lt_prog_compiler_pic, $1)=
     ;;
@@ -4580,17 +4923,21 @@ m4_if([$1], [CXX], [
   case $host_os in
   aix[[4-9]]*)
     # If we're using GNU nm, then we don't want the "-C" option.
-    # -C means demangle to AIX nm, but means don't demangle with GNU nm
-    # Also, AIX nm treats weak defined symbols like other global defined
-    # symbols, whereas GNU nm marks them as "W".
+    # -C means demangle to GNU nm, but means don't demangle to AIX nm.
+    # Without the "-l" option, or with the "-B" option, AIX nm treats
+    # weak defined symbols like other global defined symbols, whereas
+    # GNU nm marks them as "W".
+    # While the 'weak' keyword is ignored in the Export File, we need
+    # it in the Import File for the 'aix-soname' feature, so we have
+    # to replace the "-B" option with "-P" for AIX nm.
     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
-      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
     else
-      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
     fi
     ;;
   pw32*)
-    _LT_TAGVAR(export_symbols_cmds, $1)="$ltdll_cmds"
+    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds
     ;;
   cygwin* | mingw* | cegcc*)
     case $cc_basename in
@@ -4603,9 +4950,6 @@ m4_if([$1], [CXX], [
       ;;
     esac
     ;;
-  linux* | k*bsd*-gnu | gnu*)
-    _LT_TAGVAR(link_all_deplibs, $1)=no
-    ;;
   *)
     _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
     ;;
@@ -4639,9 +4983,9 @@ m4_if([$1], [CXX], [
   # included in the symbol list
   _LT_TAGVAR(include_expsyms, $1)=
   # exclude_expsyms can be an extended regexp of symbols to exclude
-  # it will be wrapped by ` (' and `)$', so one must not match beginning or
-  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
-  # as well as any symbol that contains `d'.
+  # it will be wrapped by ' (' and ')$', so one must not match beginning or
+  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',
+  # as well as any symbol that contains 'd'.
   _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']
   # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
   # platforms (ab)use it in PIC code, but their linkers get confused if
@@ -4657,7 +5001,7 @@ dnl Note also adjust exclude_expsyms for C++ above.
     # FIXME: the MSVC++ port hasn't been tested in a loooong time
     # When not using gcc, we currently assume that we are using
     # Microsoft Visual C++.
-    if test "$GCC" != yes; then
+    if test yes != "$GCC"; then
       with_gnu_ld=no
     fi
     ;;
@@ -4665,12 +5009,9 @@ dnl Note also adjust exclude_expsyms for C++ above.
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
-  linux* | k*bsd*-gnu | gnu*)
-    _LT_TAGVAR(link_all_deplibs, $1)=no
-    ;;
   esac
 
   _LT_TAGVAR(ld_shlibs, $1)=yes
@@ -4678,7 +5019,7 @@ dnl Note also adjust exclude_expsyms for C++ above.
   # On some targets, GNU ld is compatible enough with the native linker
   # that we're better off using the native interface for both.
   lt_use_gnu_ld_interface=no
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     case $host_os in
       aix*)
 	# The AIX port of GNU ld has always aspired to compatibility
@@ -4700,24 +5041,24 @@ dnl Note also adjust exclude_expsyms for C++ above.
     esac
   fi
 
-  if test "$lt_use_gnu_ld_interface" = yes; then
+  if test yes = "$lt_use_gnu_ld_interface"; then
     # If archive_cmds runs LD, not CC, wlarc should be empty
-    wlarc='${wl}'
+    wlarc='$wl'
 
     # Set some defaults for GNU ld with shared library support. These
     # are reset later if shared libraries are not supported. Putting them
     # here allows them to be overridden if necessary.
     runpath_var=LD_RUN_PATH
-    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
-    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
+    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
     # ancient GNU ld didn't support --whole-archive et. al.
     if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
-      _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'
     else
       _LT_TAGVAR(whole_archive_flag_spec, $1)=
     fi
     supports_anon_versioning=no
-    case `$LD -v 2>&1` in
+    case `$LD -v | $SED -e 's/([^)]\+)\s\+//' 2>&1` in
       *GNU\ gold*) supports_anon_versioning=yes ;;
       *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.10.*) ;; # catch versions < 2.11
       *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
@@ -4730,7 +5071,7 @@ dnl Note also adjust exclude_expsyms for C++ above.
     case $host_os in
     aix[[3-9]]*)
       # On AIX/PPC, the GNU linker is very broken
-      if test "$host_cpu" != ia64; then
+      if test ia64 != "$host_cpu"; then
 	_LT_TAGVAR(ld_shlibs, $1)=no
 	cat <<_LT_EOF 1>&2
 
@@ -4749,7 +5090,7 @@ _LT_EOF
       case $host_cpu in
       powerpc)
             # see comment about AmigaOS4 .so support
-            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
             _LT_TAGVAR(archive_expsym_cmds, $1)=''
         ;;
       m68k)
@@ -4765,7 +5106,7 @@ _LT_EOF
 	_LT_TAGVAR(allow_undefined_flag, $1)=unsupported
 	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
 	# support --undefined.  This deserves some investigation.  FIXME
-	_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
       else
 	_LT_TAGVAR(ld_shlibs, $1)=no
       fi
@@ -4775,7 +5116,7 @@ _LT_EOF
       # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
       # as there is no search path for DLLs.
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
-      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'
       _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
       _LT_TAGVAR(always_export_symbols, $1)=no
       _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
@@ -4783,61 +5124,89 @@ _LT_EOF
       _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']
 
       if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
-        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
-	# If the export-symbols file already is a .def file (1st line
-	# is EXPORTS), use it as is; otherwise, prepend...
-	_LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	  cp $export_symbols $output_objdir/$soname.def;
-	else
-	  echo EXPORTS > $output_objdir/$soname.def;
-	  cat $export_symbols >> $output_objdir/$soname.def;
-	fi~
-	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file, use it as
+	# is; otherwise, prepend EXPORTS...
+	_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then
+          cp $export_symbols $output_objdir/$soname.def;
+        else
+          echo EXPORTS > $output_objdir/$soname.def;
+          cat $export_symbols >> $output_objdir/$soname.def;
+        fi~
+        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
       else
 	_LT_TAGVAR(ld_shlibs, $1)=no
       fi
       ;;
 
     haiku*)
-      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
       _LT_TAGVAR(link_all_deplibs, $1)=yes
       ;;
 
+    os2*)
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+      shrext_cmds=.dll
+      _LT_TAGVAR(archive_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	prefix_cmds="$SED"~
+	if test EXPORTS = "`$SED 1q $export_symbols`"; then
+	  prefix_cmds="$prefix_cmds -e 1d";
+	fi~
+	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
+	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
+      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      ;;
+
     interix[[3-9]]*)
       _LT_TAGVAR(hardcode_direct, $1)=no
       _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
       # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
       # Instead, shared libraries are loaded at an image base (0x10000000 by
       # default) and relocated if they conflict, which is a slow very memory
       # consuming and fragmenting process.  To avoid this, we pick a random,
       # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
       # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
-      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
-      _LT_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      _LT_TAGVAR(archive_expsym_cmds, $1)='sed "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       ;;
 
     gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
       tmp_diet=no
-      if test "$host_os" = linux-dietlibc; then
+      if test linux-dietlibc = "$host_os"; then
 	case $cc_basename in
 	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
 	esac
       fi
       if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
-	 && test "$tmp_diet" = no
+	 && test no = "$tmp_diet"
       then
 	tmp_addflag=' $pic_flag'
 	tmp_sharedflag='-shared'
 	case $cc_basename,$host_cpu in
         pgcc*)				# Portland Group C compiler
-	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  tmp_addflag=' $pic_flag'
 	  ;;
 	pgf77* | pgf90* | pgf95* | pgfortran*)
 					# Portland Group f77 and f90 compilers
-	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  tmp_addflag=' $pic_flag -Mnomain' ;;
 	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
 	  tmp_addflag=' -i_dynamic' ;;
@@ -4848,42 +5217,47 @@ _LT_EOF
 	lf95*)				# Lahey Fortran 8.1
 	  _LT_TAGVAR(whole_archive_flag_spec, $1)=
 	  tmp_sharedflag='--shared' ;;
+        nagfor*)                        # NAGFOR 5.3
+          tmp_sharedflag='-Wl,-shared' ;;
 	xl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)
 	  tmp_sharedflag='-qmkshrobj'
 	  tmp_addflag= ;;
 	nvcc*)	# Cuda Compiler Driver 2.2
-	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  _LT_TAGVAR(compiler_needs_object, $1)=yes
 	  ;;
 	esac
 	case `$CC -V 2>&1 | sed 5q` in
 	*Sun\ C*)			# Sun C 5.9
-	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  _LT_TAGVAR(compiler_needs_object, $1)=yes
 	  tmp_sharedflag='-G' ;;
 	*Sun\ F*)			# Sun Fortran 8.3
 	  tmp_sharedflag='-G' ;;
 	esac
-	_LT_TAGVAR(archive_cmds, $1)='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 
-        if test "x$supports_anon_versioning" = xyes; then
+        if test yes = "$supports_anon_versioning"; then
           _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
-	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
-	    echo "local: *; };" >> $output_objdir/$libname.ver~
-	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+            echo "local: *; };" >> $output_objdir/$libname.ver~
+            $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
         fi
 
 	case $cc_basename in
+	tcc*)
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'
+	  ;;
 	xlf* | bgf* | bgxlf* | mpixlf*)
 	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
 	  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'
-	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
 	  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
-	  if test "x$supports_anon_versioning" = xyes; then
+	  if test yes = "$supports_anon_versioning"; then
 	    _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
-	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
-	      echo "local: *; };" >> $output_objdir/$libname.ver~
-	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+              cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+              echo "local: *; };" >> $output_objdir/$libname.ver~
+              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
 	  fi
 	  ;;
 	esac
@@ -4892,13 +5266,13 @@ _LT_EOF
       fi
       ;;
 
-    netbsd* | netbsdelf*-gnu)
+    netbsd*)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
       else
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       fi
       ;;
 
@@ -4916,8 +5290,8 @@ _LT_EOF
 
 _LT_EOF
       elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       else
 	_LT_TAGVAR(ld_shlibs, $1)=no
       fi
@@ -4929,7 +5303,7 @@ _LT_EOF
 	_LT_TAGVAR(ld_shlibs, $1)=no
 	cat <<_LT_EOF 1>&2
 
-*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot
 *** reliably create shared libraries on SCO systems.  Therefore, libtool
 *** is disabling shared libraries support.  We urge you to upgrade GNU
 *** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
@@ -4944,9 +5318,9 @@ _LT_EOF
 	  # DT_RUNPATH tag from executables and libraries.  But doing so
 	  # requires that you compile everything twice, which is a pain.
 	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	  else
 	    _LT_TAGVAR(ld_shlibs, $1)=no
 	  fi
@@ -4963,15 +5337,15 @@ _LT_EOF
 
     *)
       if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       else
 	_LT_TAGVAR(ld_shlibs, $1)=no
       fi
       ;;
     esac
 
-    if test "$_LT_TAGVAR(ld_shlibs, $1)" = no; then
+    if test no = "$_LT_TAGVAR(ld_shlibs, $1)"; then
       runpath_var=
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
       _LT_TAGVAR(export_dynamic_flag_spec, $1)=
@@ -4987,7 +5361,7 @@ _LT_EOF
       # Note: this linker hardcodes the directories in LIBPATH if there
       # are no directories specified by -L.
       _LT_TAGVAR(hardcode_minus_L, $1)=yes
-      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+      if test yes = "$GCC" && test -z "$lt_prog_compiler_static"; then
 	# Neither direct hardcoding nor static linking is supported with a
 	# broken collect2.
 	_LT_TAGVAR(hardcode_direct, $1)=unsupported
@@ -4995,34 +5369,57 @@ _LT_EOF
       ;;
 
     aix[[4-9]]*)
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# On IA64, the linker does run time linking by default, so we don't
 	# have to do anything special.
 	aix_use_runtimelinking=no
 	exp_sym_flag='-Bexport'
-	no_entry_flag=""
+	no_entry_flag=
       else
 	# If we're using GNU nm, then we don't want the "-C" option.
-	# -C means demangle to AIX nm, but means don't demangle with GNU nm
-	# Also, AIX nm treats weak defined symbols like other global
-	# defined symbols, whereas GNU nm marks them as "W".
+	# -C means demangle to GNU nm, but means don't demangle to AIX nm.
+	# Without the "-l" option, or with the "-B" option, AIX nm treats
+	# weak defined symbols like other global defined symbols, whereas
+	# GNU nm marks them as "W".
+	# While the 'weak' keyword is ignored in the Export File, we need
+	# it in the Import File for the 'aix-soname' feature, so we have
+	# to replace the "-B" option with "-P" for AIX nm.
 	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
-	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && ([substr](\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
 	else
-	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\''s/B\([[^B]]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && ([substr](\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
 	fi
 	aix_use_runtimelinking=no
 
 	# Test if we are trying to use run time linking or normal
 	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
-	# need to do runtime linking.
+	# have runtime linking enabled, and use it for executables.
+	# For shared libraries, we enable/disable runtime linking
+	# depending on the kind of the shared library created -
+	# when "with_aix_soname,aix_use_runtimelinking" is:
+	# "aix,no"   lib.a(lib.so.V) shared, rtl:no,  for executables
+	# "aix,yes"  lib.so          shared, rtl:yes, for executables
+	#            lib.a           static archive
+	# "both,no"  lib.so.V(shr.o) shared, rtl:yes
+	#            lib.a(lib.so.V) shared, rtl:no,  for executables
+	# "both,yes" lib.so.V(shr.o) shared, rtl:yes, for executables
+	#            lib.a(lib.so.V) shared, rtl:no
+	# "svr4,*"   lib.so.V(shr.o) shared, rtl:yes, for executables
+	#            lib.a           static archive
 	case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)
 	  for ld_flag in $LDFLAGS; do
-	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	  if (test x-brtl = "x$ld_flag" || test x-Wl,-brtl = "x$ld_flag"); then
 	    aix_use_runtimelinking=yes
 	    break
 	  fi
 	  done
+	  if test svr4,no = "$with_aix_soname,$aix_use_runtimelinking"; then
+	    # With aix-soname=svr4, we create the lib.so.V shared archives only,
+	    # so we don't have lib.a shared libs to link our executables.
+	    # We have to force runtime linking in this case.
+	    aix_use_runtimelinking=yes
+	    LDFLAGS="$LDFLAGS -Wl,-brtl"
+	  fi
 	  ;;
 	esac
 
@@ -5041,13 +5438,21 @@ _LT_EOF
       _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
       _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
       _LT_TAGVAR(link_all_deplibs, $1)=yes
-      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'
+      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'
+      case $with_aix_soname,$aix_use_runtimelinking in
+      aix,*) ;; # traditional, no import file
+      svr4,* | *,yes) # use import file
+	# The Import File defines what to hardcode.
+	_LT_TAGVAR(hardcode_direct, $1)=no
+	_LT_TAGVAR(hardcode_direct_absolute, $1)=no
+	;;
+      esac
 
-      if test "$GCC" = yes; then
+      if test yes = "$GCC"; then
 	case $host_os in aix4.[[012]]|aix4.[[012]].*)
 	# We only want to do this on AIX 4.2 and lower, the check
 	# below for broken collect2 doesn't work under 4.3+
-	  collect2name=`${CC} -print-prog-name=collect2`
+	  collect2name=`$CC -print-prog-name=collect2`
 	  if test -f "$collect2name" &&
 	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
 	  then
@@ -5066,62 +5471,80 @@ _LT_EOF
 	  ;;
 	esac
 	shared_flag='-shared'
-	if test "$aix_use_runtimelinking" = yes; then
-	  shared_flag="$shared_flag "'${wl}-G'
+	if test yes = "$aix_use_runtimelinking"; then
+	  shared_flag="$shared_flag "'$wl-G'
 	fi
-	_LT_TAGVAR(link_all_deplibs, $1)=no
+	# Need to ensure runtime linking is disabled for the traditional
+	# shared library, or the linker may eventually find shared libraries
+	# /with/ Import File - we do not want to mix them.
+	shared_flag_aix='-shared'
+	shared_flag_svr4='-shared $wl-G'
       else
 	# not using gcc
-	if test "$host_cpu" = ia64; then
+	if test ia64 = "$host_cpu"; then
 	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
 	# chokes on -Wl,-G. The following line is correct:
 	  shared_flag='-G'
 	else
-	  if test "$aix_use_runtimelinking" = yes; then
-	    shared_flag='${wl}-G'
+	  if test yes = "$aix_use_runtimelinking"; then
+	    shared_flag='$wl-G'
 	  else
-	    shared_flag='${wl}-bM:SRE'
+	    shared_flag='$wl-bM:SRE'
 	  fi
+	  shared_flag_aix='$wl-bM:SRE'
+	  shared_flag_svr4='$wl-G'
 	fi
       fi
 
-      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'
       # It seems that -bexpall does not export symbols beginning with
       # underscore (_), so it is better to generate a list of symbols to export.
       _LT_TAGVAR(always_export_symbols, $1)=yes
-      if test "$aix_use_runtimelinking" = yes; then
+      if test aix,yes = "$with_aix_soname,$aix_use_runtimelinking"; then
 	# Warning - without using the other runtime loading flags (-brtl),
 	# -berok will link without error, but may produce a broken library.
 	_LT_TAGVAR(allow_undefined_flag, $1)='-berok'
         # Determine the default libpath from the value encoded in an
         # empty executable.
         _LT_SYS_MODULE_PATH_AIX([$1])
-        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
-        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then func_echo_all "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'"$aix_libpath"
+        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n "$allow_undefined_flag"; then func_echo_all "$wl$allow_undefined_flag"; else :; fi` $wl'$exp_sym_flag:\$export_symbols' '$shared_flag
       else
-	if test "$host_cpu" = ia64; then
-	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+	if test ia64 = "$host_cpu"; then
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'
 	  _LT_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
-	  _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	  _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\$wl$no_entry_flag"' $compiler_flags $wl$allow_undefined_flag '"\$wl$exp_sym_flag:\$export_symbols"
 	else
 	 # Determine the default libpath from the value encoded in an
 	 # empty executable.
 	 _LT_SYS_MODULE_PATH_AIX([$1])
-	 _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	 _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'"$aix_libpath"
 	  # Warning - without using the other run time loading flags,
 	  # -berok will link without error, but may produce a broken library.
-	  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
-	  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
-	  if test "$with_gnu_ld" = yes; then
+	  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'
+	  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'
+	  if test yes = "$with_gnu_ld"; then
 	    # We only use this code for GNU lds that support --whole-archive.
-	    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'
 	  else
 	    # Exported symbols can be pulled into shared objects from archives
 	    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
 	  fi
 	  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
-	  # This is similar to how AIX traditionally builds its shared libraries.
-	  _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'
+	  # -brtl affects multiple linker settings, -berok does not and is overridden later
+	  compiler_flags_filtered='`func_echo_all "$compiler_flags " | $SED -e "s%-brtl\\([[, ]]\\)%-berok\\1%g"`'
+	  if test svr4 != "$with_aix_soname"; then
+	    # This is similar to how AIX traditionally builds its shared libraries.
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'
+	  fi
+	  if test aix != "$with_aix_soname"; then
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all "#! $soname($shared_archive_member_spec.o)"; if test shr_64 = "$shared_archive_member_spec"; then func_echo_all "# 64"; else func_echo_all "# 32"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'
+	  else
+	    # used by -dlpreopen to get the symbols
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'
+	  fi
+	  _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$RM -r $output_objdir/$realname.d'
 	fi
       fi
       ;;
@@ -5130,7 +5553,7 @@ _LT_EOF
       case $host_cpu in
       powerpc)
             # see comment about AmigaOS4 .so support
-            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
             _LT_TAGVAR(archive_expsym_cmds, $1)=''
         ;;
       m68k)
@@ -5160,16 +5583,17 @@ _LT_EOF
 	# Tell ltmain to make .lib files, not .a files.
 	libext=lib
 	# Tell ltmain to make .dll files, not .so files.
-	shrext_cmds=".dll"
+	shrext_cmds=.dll
 	# FIXME: Setting linknames here is a bad hack.
-	_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
-	_LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
-	  else
-	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
-	  fi~
-	  $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
-	  linknames='
+	_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~linknames='
+	_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then
+            cp "$export_symbols" "$output_objdir/$soname.def";
+            echo "$tool_output_objdir$soname.def" > "$output_objdir/$soname.exp";
+          else
+            $SED -e '\''s/^/-link -EXPORT:/'\'' < $export_symbols > $output_objdir/$soname.exp;
+          fi~
+          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
+          linknames='
 	# The linker will not automatically build a static lib if we build a DLL.
 	# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'
 	_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
@@ -5178,18 +5602,18 @@ _LT_EOF
 	# Don't use ranlib
 	_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'
 	_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
-	  lt_tool_outputfile="@TOOL_OUTPUT@"~
-	  case $lt_outputfile in
-	    *.exe|*.EXE) ;;
-	    *)
-	      lt_outputfile="$lt_outputfile.exe"
-	      lt_tool_outputfile="$lt_tool_outputfile.exe"
-	      ;;
-	  esac~
-	  if test "$MANIFEST_TOOL" != ":" && test -f "$lt_outputfile.manifest"; then
-	    $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
-	    $RM "$lt_outputfile.manifest";
-	  fi'
+          lt_tool_outputfile="@TOOL_OUTPUT@"~
+          case $lt_outputfile in
+            *.exe|*.EXE) ;;
+            *)
+              lt_outputfile=$lt_outputfile.exe
+              lt_tool_outputfile=$lt_tool_outputfile.exe
+              ;;
+          esac~
+          if test : != "$MANIFEST_TOOL" && test -f "$lt_outputfile.manifest"; then
+            $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
+            $RM "$lt_outputfile.manifest";
+          fi'
 	;;
       *)
 	# Assume MSVC wrapper
@@ -5198,7 +5622,7 @@ _LT_EOF
 	# Tell ltmain to make .lib files, not .a files.
 	libext=lib
 	# Tell ltmain to make .dll files, not .so files.
-	shrext_cmds=".dll"
+	shrext_cmds=.dll
 	# FIXME: Setting linknames here is a bad hack.
 	_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
 	# The linker will automatically build a .lib file if we build a DLL.
@@ -5248,33 +5672,33 @@ _LT_EOF
       ;;
 
     hpux9*)
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
       else
-	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
       fi
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=:
       _LT_TAGVAR(hardcode_direct, $1)=yes
 
       # hardcode_minus_L: Not really in the search PATH,
       # but as the default location of the library.
       _LT_TAGVAR(hardcode_minus_L, $1)=yes
-      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
       ;;
 
     hpux10*)
-      if test "$GCC" = yes && test "$with_gnu_ld" = no; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes,no = "$GCC,$with_gnu_ld"; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
       else
 	_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
       fi
-      if test "$with_gnu_ld" = no; then
-	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      if test no = "$with_gnu_ld"; then
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'
 	_LT_TAGVAR(hardcode_libdir_separator, $1)=:
 	_LT_TAGVAR(hardcode_direct, $1)=yes
 	_LT_TAGVAR(hardcode_direct_absolute, $1)=yes
-	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
 	# hardcode_minus_L: Not really in the search PATH,
 	# but as the default location of the library.
 	_LT_TAGVAR(hardcode_minus_L, $1)=yes
@@ -5282,25 +5706,25 @@ _LT_EOF
       ;;
 
     hpux11*)
-      if test "$GCC" = yes && test "$with_gnu_ld" = no; then
+      if test yes,no = "$GCC,$with_gnu_ld"; then
 	case $host_cpu in
 	hppa*64*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	ia64*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	esac
       else
 	case $host_cpu in
 	hppa*64*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	ia64*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	*)
 	m4_if($1, [], [
@@ -5308,14 +5732,14 @@ _LT_EOF
 	  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)
 	  _LT_LINKER_OPTION([if $CC understands -b],
 	    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],
-	    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],
+	    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],
 	    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],
-	  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])
+	  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])
 	  ;;
 	esac
       fi
-      if test "$with_gnu_ld" = no; then
-	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      if test no = "$with_gnu_ld"; then
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'
 	_LT_TAGVAR(hardcode_libdir_separator, $1)=:
 
 	case $host_cpu in
@@ -5326,7 +5750,7 @@ _LT_EOF
 	*)
 	  _LT_TAGVAR(hardcode_direct, $1)=yes
 	  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
-	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
 
 	  # hardcode_minus_L: Not really in the search PATH,
 	  # but as the default location of the library.
@@ -5337,16 +5761,16 @@ _LT_EOF
       ;;
 
     irix5* | irix6* | nonstopux*)
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
 	# Try to use the -exported_symbol ld option, if it does not
 	# work, assume that -exports_file does not work either and
 	# implicitly export all symbols.
 	# This should be the same for all languages, so no per-tag cache variable.
 	AC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],
 	  [lt_cv_irix_exported_symbol],
-	  [save_LDFLAGS="$LDFLAGS"
-	   LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+	  [save_LDFLAGS=$LDFLAGS
+	   LDFLAGS="$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null"
 	   AC_LINK_IFELSE(
 	     [AC_LANG_SOURCE(
 	        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],
@@ -5359,22 +5783,32 @@ _LT_EOF
       end]])])],
 	      [lt_cv_irix_exported_symbol=yes],
 	      [lt_cv_irix_exported_symbol=no])
-           LDFLAGS="$save_LDFLAGS"])
-	if test "$lt_cv_irix_exported_symbol" = yes; then
-          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+           LDFLAGS=$save_LDFLAGS])
+	if test yes = "$lt_cv_irix_exported_symbol"; then
+          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'
 	fi
       else
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'
       fi
       _LT_TAGVAR(archive_cmds_need_lc, $1)='no'
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=:
       _LT_TAGVAR(inherit_rpath, $1)=yes
       _LT_TAGVAR(link_all_deplibs, $1)=yes
       ;;
 
-    netbsd* | netbsdelf*-gnu)
+    linux*)
+      case $cc_basename in
+      tcc*)
+	# Fabrice Bellard et al's Tiny C Compiler
+	_LT_TAGVAR(ld_shlibs, $1)=yes
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      esac
+      ;;
+
+    netbsd*)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
@@ -5388,7 +5822,7 @@ _LT_EOF
     newsos6)
       _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
       _LT_TAGVAR(hardcode_direct, $1)=yes
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=:
       _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
       ;;
@@ -5396,27 +5830,19 @@ _LT_EOF
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	_LT_TAGVAR(hardcode_direct, $1)=yes
 	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
 	_LT_TAGVAR(hardcode_direct_absolute, $1)=yes
-	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
 	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
-	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
 	else
-	  case $host_os in
-	   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)
-	     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
-	     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
-	     ;;
-	   *)
-	     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	     ;;
-	  esac
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
 	fi
       else
 	_LT_TAGVAR(ld_shlibs, $1)=no
@@ -5427,33 +5853,53 @@ _LT_EOF
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
       _LT_TAGVAR(hardcode_minus_L, $1)=yes
       _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
-      _LT_TAGVAR(archive_cmds, $1)='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
-      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      shrext_cmds=.dll
+      _LT_TAGVAR(archive_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	prefix_cmds="$SED"~
+	if test EXPORTS = "`$SED 1q $export_symbols`"; then
+	  prefix_cmds="$prefix_cmds -e 1d";
+	fi~
+	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
+	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
+      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
       ;;
 
     osf3*)
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
       else
 	_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
       fi
       _LT_TAGVAR(archive_cmds_need_lc, $1)='no'
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=:
       ;;
 
     osf4* | osf5*)	# as osf3* with the addition of -msym flag
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $pic_flag $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
-	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
       else
 	_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
 	_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
-	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'
 
 	# Both c and cxx compiler support -rpath directly
 	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
@@ -5464,24 +5910,24 @@ _LT_EOF
 
     solaris*)
       _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'
-      if test "$GCC" = yes; then
-	wlarc='${wl}'
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	wlarc='$wl'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	_LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
       else
 	case `$CC -V 2>&1` in
 	*"Compilers 5.0"*)
 	  wlarc=''
-	  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'
 	  _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
 	  ;;
 	*)
-	  wlarc='${wl}'
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  wlarc='$wl'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'
 	  _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
 	  ;;
 	esac
       fi
@@ -5491,11 +5937,11 @@ _LT_EOF
       solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
       *)
 	# The compiler driver will combine and reorder linker options,
-	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but understands '-z linker_flag'.  GCC discards it without '$wl',
 	# but is careful enough not to reorder.
 	# Supported since Solaris 2.6 (maybe 2.5.1?)
-	if test "$GCC" = yes; then
-	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	if test yes = "$GCC"; then
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'
 	else
 	  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'
 	fi
@@ -5505,10 +5951,10 @@ _LT_EOF
       ;;
 
     sunos4*)
-      if test "x$host_vendor" = xsequent; then
+      if test sequent = "$host_vendor"; then
 	# Use $CC to link under sequent, because it throws in some extra .o
 	# files that make .init and .fini sections work.
-	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'
       else
 	_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
       fi
@@ -5557,43 +6003,43 @@ _LT_EOF
       ;;
 
     sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)
-      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'
       _LT_TAGVAR(archive_cmds_need_lc, $1)=no
       _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
       runpath_var='LD_RUN_PATH'
 
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       else
-	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       fi
       ;;
 
     sysv5* | sco3.2v5* | sco5v6*)
-      # Note: We can NOT use -z defs as we might desire, because we do not
+      # Note: We CANNOT use -z defs as we might desire, because we do not
       # link with -lc, and that would cause any symbols used from libc to
       # always be unresolved, which means just about no library would
       # ever link correctly.  If we're not using GNU ld we use -z text
       # though, which does catch some bad symbols but isn't as heavy-handed
       # as -z defs.
-      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
-      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'
+      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'
       _LT_TAGVAR(archive_cmds_need_lc, $1)=no
       _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
-      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'
       _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
       _LT_TAGVAR(link_all_deplibs, $1)=yes
-      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'
       runpath_var='LD_RUN_PATH'
 
-      if test "$GCC" = yes; then
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       else
-	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       fi
       ;;
 
@@ -5608,17 +6054,17 @@ _LT_EOF
       ;;
     esac
 
-    if test x$host_vendor = xsni; then
+    if test sni = "$host_vendor"; then
       case $host in
       sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
-	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'
 	;;
       esac
     fi
   fi
 ])
 AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])
-test "$_LT_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+test no = "$_LT_TAGVAR(ld_shlibs, $1)" && can_build_shared=no
 
 _LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld
 
@@ -5635,7 +6081,7 @@ x|xyes)
   # Assume -lc should be added
   _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
 
-  if test "$enable_shared" = yes && test "$GCC" = yes; then
+  if test yes,yes = "$GCC,$enable_shared"; then
     case $_LT_TAGVAR(archive_cmds, $1) in
     *'~'*)
       # FIXME: we may have to deal with multi-command sequences.
@@ -5715,12 +6161,12 @@ _LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],
 _LT_TAGDECL([], [hardcode_libdir_separator], [1],
     [Whether we need a single "-rpath" flag with a separated argument])
 _LT_TAGDECL([], [hardcode_direct], [0],
-    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
+    [Set to "yes" if using DIR/libNAME$shared_ext during linking hardcodes
     DIR into the resulting binary])
 _LT_TAGDECL([], [hardcode_direct_absolute], [0],
-    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
+    [Set to "yes" if using DIR/libNAME$shared_ext during linking hardcodes
     DIR into the resulting binary and the resulting library dependency is
-    "absolute", i.e impossible to change by setting ${shlibpath_var} if the
+    "absolute", i.e impossible to change by setting $shlibpath_var if the
     library is relocated])
 _LT_TAGDECL([], [hardcode_minus_L], [0],
     [Set to "yes" if using the -LDIR flag during linking hardcodes DIR
@@ -5761,10 +6207,10 @@ dnl    [Compiler flag to generate thread safe objects])
 # ------------------------
 # Ensure that the configuration variables for a C compiler are suitably
 # defined.  These variables are subsequently used by _LT_CONFIG to write
-# the compiler configuration to `libtool'.
+# the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_C_CONFIG],
 [m4_require([_LT_DECL_EGREP])dnl
-lt_save_CC="$CC"
+lt_save_CC=$CC
 AC_LANG_PUSH(C)
 
 # Source file extension for C test sources.
@@ -5800,18 +6246,18 @@ if test -n "$compiler"; then
   LT_SYS_DLOPEN_SELF
   _LT_CMD_STRIPLIB
 
-  # Report which library types will actually be built
+  # Report what library types will actually be built
   AC_MSG_CHECKING([if libtool supports shared libraries])
   AC_MSG_RESULT([$can_build_shared])
 
   AC_MSG_CHECKING([whether to build shared libraries])
-  test "$can_build_shared" = "no" && enable_shared=no
+  test no = "$can_build_shared" && enable_shared=no
 
   # On AIX, shared libraries and static libraries use the same namespace, and
   # are all built from PIC.
   case $host_os in
   aix3*)
-    test "$enable_shared" = yes && enable_static=no
+    test yes = "$enable_shared" && enable_static=no
     if test -n "$RANLIB"; then
       archive_cmds="$archive_cmds~\$RANLIB \$lib"
       postinstall_cmds='$RANLIB $lib'
@@ -5819,8 +6265,12 @@ if test -n "$compiler"; then
     ;;
 
   aix[[4-9]]*)
-    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
-      test "$enable_shared" = yes && enable_static=no
+    if test ia64 != "$host_cpu"; then
+      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
+      yes,aix,yes) ;;			# shared object as lib.so file only
+      yes,svr4,*) ;;			# shared object as lib.so archive member only
+      yes,*) enable_static=no ;;	# shared object in lib.a archive as well
+      esac
     fi
     ;;
   esac
@@ -5828,13 +6278,13 @@ if test -n "$compiler"; then
 
   AC_MSG_CHECKING([whether to build static libraries])
   # Make sure either enable_shared or enable_static is yes.
-  test "$enable_shared" = yes || enable_static=yes
+  test yes = "$enable_shared" || enable_static=yes
   AC_MSG_RESULT([$enable_static])
 
   _LT_CONFIG($1)
 fi
 AC_LANG_POP
-CC="$lt_save_CC"
+CC=$lt_save_CC
 ])# _LT_LANG_C_CONFIG
 
 
@@ -5842,14 +6292,14 @@ CC="$lt_save_CC"
 # --------------------------
 # Ensure that the configuration variables for a C++ compiler are suitably
 # defined.  These variables are subsequently used by _LT_CONFIG to write
-# the compiler configuration to `libtool'.
+# the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_CXX_CONFIG],
 [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
 m4_require([_LT_DECL_EGREP])dnl
 m4_require([_LT_PATH_MANIFEST_TOOL])dnl
-if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
-    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
-    (test "X$CXX" != "Xg++"))) ; then
+if test -n "$CXX" && ( test no != "$CXX" &&
+    ( (test g++ = "$CXX" && `g++ -v >/dev/null 2>&1` ) ||
+    (test g++ != "$CXX"))); then
   AC_PROG_CXXCPP
 else
   _lt_caught_CXX_error=yes
@@ -5891,7 +6341,7 @@ _LT_TAGVAR(objext, $1)=$objext
 # the CXX compiler isn't working.  Some variables (like enable_shared)
 # are currently assumed to apply to all compilers on this platform,
 # and will be corrupted by setting them based on a non-working compiler.
-if test "$_lt_caught_CXX_error" != yes; then
+if test yes != "$_lt_caught_CXX_error"; then
   # Code to be used in simple compile tests
   lt_simple_compile_test_code="int some_variable = 0;"
 
@@ -5933,35 +6383,35 @@ if test "$_lt_caught_CXX_error" != yes; then
   if test -n "$compiler"; then
     # We don't want -fno-exception when compiling C++ code, so set the
     # no_builtin_flag separately
-    if test "$GXX" = yes; then
+    if test yes = "$GXX"; then
       _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'
     else
       _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
     fi
 
-    if test "$GXX" = yes; then
+    if test yes = "$GXX"; then
       # Set up default GNU C++ configuration
 
       LT_PATH_LD
 
       # Check if GNU C++ uses GNU ld as the underlying linker, since the
       # archiving commands below assume that GNU ld is being used.
-      if test "$with_gnu_ld" = yes; then
-        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
-        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      if test yes = "$with_gnu_ld"; then
+        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
+        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 
-        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
-        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
 
         # If archive_cmds runs LD, not CC, wlarc should be empty
         # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to
         #     investigate it a little bit more. (MM)
-        wlarc='${wl}'
+        wlarc='$wl'
 
         # ancient GNU ld didn't support --whole-archive et. al.
         if eval "`$CC -print-prog-name=ld` --help 2>&1" |
 	  $GREP 'no-whole-archive' > /dev/null; then
-          _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'
         else
           _LT_TAGVAR(whole_archive_flag_spec, $1)=
         fi
@@ -5997,18 +6447,30 @@ if test "$_lt_caught_CXX_error" != yes; then
         _LT_TAGVAR(ld_shlibs, $1)=no
         ;;
       aix[[4-9]]*)
-        if test "$host_cpu" = ia64; then
+        if test ia64 = "$host_cpu"; then
           # On IA64, the linker does run time linking by default, so we don't
           # have to do anything special.
           aix_use_runtimelinking=no
           exp_sym_flag='-Bexport'
-          no_entry_flag=""
+          no_entry_flag=
         else
           aix_use_runtimelinking=no
 
           # Test if we are trying to use run time linking or normal
           # AIX style linking. If -brtl is somewhere in LDFLAGS, we
-          # need to do runtime linking.
+          # have runtime linking enabled, and use it for executables.
+          # For shared libraries, we enable/disable runtime linking
+          # depending on the kind of the shared library created -
+          # when "with_aix_soname,aix_use_runtimelinking" is:
+          # "aix,no"   lib.a(lib.so.V) shared, rtl:no,  for executables
+          # "aix,yes"  lib.so          shared, rtl:yes, for executables
+          #            lib.a           static archive
+          # "both,no"  lib.so.V(shr.o) shared, rtl:yes
+          #            lib.a(lib.so.V) shared, rtl:no,  for executables
+          # "both,yes" lib.so.V(shr.o) shared, rtl:yes, for executables
+          #            lib.a(lib.so.V) shared, rtl:no
+          # "svr4,*"   lib.so.V(shr.o) shared, rtl:yes, for executables
+          #            lib.a           static archive
           case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)
 	    for ld_flag in $LDFLAGS; do
 	      case $ld_flag in
@@ -6018,6 +6480,13 @@ if test "$_lt_caught_CXX_error" != yes; then
 	        ;;
 	      esac
 	    done
+	    if test svr4,no = "$with_aix_soname,$aix_use_runtimelinking"; then
+	      # With aix-soname=svr4, we create the lib.so.V shared archives only,
+	      # so we don't have lib.a shared libs to link our executables.
+	      # We have to force runtime linking in this case.
+	      aix_use_runtimelinking=yes
+	      LDFLAGS="$LDFLAGS -Wl,-brtl"
+	    fi
 	    ;;
           esac
 
@@ -6036,13 +6505,21 @@ if test "$_lt_caught_CXX_error" != yes; then
         _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
         _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
         _LT_TAGVAR(link_all_deplibs, $1)=yes
-        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'
+        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'
+        case $with_aix_soname,$aix_use_runtimelinking in
+        aix,*) ;;	# no import file
+        svr4,* | *,yes) # use import file
+          # The Import File defines what to hardcode.
+          _LT_TAGVAR(hardcode_direct, $1)=no
+          _LT_TAGVAR(hardcode_direct_absolute, $1)=no
+          ;;
+        esac
 
-        if test "$GXX" = yes; then
+        if test yes = "$GXX"; then
           case $host_os in aix4.[[012]]|aix4.[[012]].*)
           # We only want to do this on AIX 4.2 and lower, the check
           # below for broken collect2 doesn't work under 4.3+
-	  collect2name=`${CC} -print-prog-name=collect2`
+	  collect2name=`$CC -print-prog-name=collect2`
 	  if test -f "$collect2name" &&
 	     strings "$collect2name" | $GREP resolve_lib_name >/dev/null
 	  then
@@ -6060,64 +6537,84 @@ if test "$_lt_caught_CXX_error" != yes; then
 	  fi
           esac
           shared_flag='-shared'
-	  if test "$aix_use_runtimelinking" = yes; then
-	    shared_flag="$shared_flag "'${wl}-G'
+	  if test yes = "$aix_use_runtimelinking"; then
+	    shared_flag=$shared_flag' $wl-G'
 	  fi
+	  # Need to ensure runtime linking is disabled for the traditional
+	  # shared library, or the linker may eventually find shared libraries
+	  # /with/ Import File - we do not want to mix them.
+	  shared_flag_aix='-shared'
+	  shared_flag_svr4='-shared $wl-G'
         else
           # not using gcc
-          if test "$host_cpu" = ia64; then
+          if test ia64 = "$host_cpu"; then
 	  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
 	  # chokes on -Wl,-G. The following line is correct:
 	  shared_flag='-G'
           else
-	    if test "$aix_use_runtimelinking" = yes; then
-	      shared_flag='${wl}-G'
+	    if test yes = "$aix_use_runtimelinking"; then
+	      shared_flag='$wl-G'
 	    else
-	      shared_flag='${wl}-bM:SRE'
+	      shared_flag='$wl-bM:SRE'
 	    fi
+	    shared_flag_aix='$wl-bM:SRE'
+	    shared_flag_svr4='$wl-G'
           fi
         fi
 
-        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'
         # It seems that -bexpall does not export symbols beginning with
         # underscore (_), so it is better to generate a list of symbols to
 	# export.
         _LT_TAGVAR(always_export_symbols, $1)=yes
-        if test "$aix_use_runtimelinking" = yes; then
+	if test aix,yes = "$with_aix_soname,$aix_use_runtimelinking"; then
           # Warning - without using the other runtime loading flags (-brtl),
           # -berok will link without error, but may produce a broken library.
-          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'
+          # The "-G" linker flag allows undefined symbols.
+          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'
           # Determine the default libpath from the value encoded in an empty
           # executable.
           _LT_SYS_MODULE_PATH_AIX([$1])
-          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'"$aix_libpath"
 
-          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then func_echo_all "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n "$allow_undefined_flag"; then func_echo_all "$wl$allow_undefined_flag"; else :; fi` $wl'$exp_sym_flag:\$export_symbols' '$shared_flag
         else
-          if test "$host_cpu" = ia64; then
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+          if test ia64 = "$host_cpu"; then
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'
 	    _LT_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
-	    _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\$wl$no_entry_flag"' $compiler_flags $wl$allow_undefined_flag '"\$wl$exp_sym_flag:\$export_symbols"
           else
 	    # Determine the default libpath from the value encoded in an
 	    # empty executable.
 	    _LT_SYS_MODULE_PATH_AIX([$1])
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'"$aix_libpath"
 	    # Warning - without using the other run time loading flags,
 	    # -berok will link without error, but may produce a broken library.
-	    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
-	    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
-	    if test "$with_gnu_ld" = yes; then
+	    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'
+	    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'
+	    if test yes = "$with_gnu_ld"; then
 	      # We only use this code for GNU lds that support --whole-archive.
-	      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'
 	    else
 	      # Exported symbols can be pulled into shared objects from archives
 	      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
 	    fi
 	    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
-	    # This is similar to how AIX traditionally builds its shared
-	    # libraries.
-	    _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'
+	    # -brtl affects multiple linker settings, -berok does not and is overridden later
+	    compiler_flags_filtered='`func_echo_all "$compiler_flags " | $SED -e "s%-brtl\\([[, ]]\\)%-berok\\1%g"`'
+	    if test svr4 != "$with_aix_soname"; then
+	      # This is similar to how AIX traditionally builds its shared
+	      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.
+	      _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'
+	    fi
+	    if test aix != "$with_aix_soname"; then
+	      _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all "#! $soname($shared_archive_member_spec.o)"; if test shr_64 = "$shared_archive_member_spec"; then func_echo_all "# 64"; else func_echo_all "# 32"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'
+	    else
+	      # used by -dlpreopen to get the symbols
+	      _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'
+	    fi
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="$_LT_TAGVAR(archive_expsym_cmds, $1)"'~$RM -r $output_objdir/$realname.d'
           fi
         fi
         ;;
@@ -6127,7 +6624,7 @@ if test "$_lt_caught_CXX_error" != yes; then
 	  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
 	  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
 	  # support --undefined.  This deserves some investigation.  FIXME
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 	else
 	  _LT_TAGVAR(ld_shlibs, $1)=no
 	fi
@@ -6155,57 +6652,58 @@ if test "$_lt_caught_CXX_error" != yes; then
 	  # Tell ltmain to make .lib files, not .a files.
 	  libext=lib
 	  # Tell ltmain to make .dll files, not .so files.
-	  shrext_cmds=".dll"
+	  shrext_cmds=.dll
 	  # FIXME: Setting linknames here is a bad hack.
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
-	  _LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	      $SED -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
-	    else
-	      $SED -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
-	    fi~
-	    $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
-	    linknames='
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~linknames='
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then
+              cp "$export_symbols" "$output_objdir/$soname.def";
+              echo "$tool_output_objdir$soname.def" > "$output_objdir/$soname.exp";
+            else
+              $SED -e '\''s/^/-link -EXPORT:/'\'' < $export_symbols > $output_objdir/$soname.exp;
+            fi~
+            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
+            linknames='
 	  # The linker will not automatically build a static lib if we build a DLL.
 	  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'
 	  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
 	  # Don't use ranlib
 	  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'
 	  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
-	    lt_tool_outputfile="@TOOL_OUTPUT@"~
-	    case $lt_outputfile in
-	      *.exe|*.EXE) ;;
-	      *)
-		lt_outputfile="$lt_outputfile.exe"
-		lt_tool_outputfile="$lt_tool_outputfile.exe"
-		;;
-	    esac~
-	    func_to_tool_file "$lt_outputfile"~
-	    if test "$MANIFEST_TOOL" != ":" && test -f "$lt_outputfile.manifest"; then
-	      $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
-	      $RM "$lt_outputfile.manifest";
-	    fi'
+            lt_tool_outputfile="@TOOL_OUTPUT@"~
+            case $lt_outputfile in
+              *.exe|*.EXE) ;;
+              *)
+                lt_outputfile=$lt_outputfile.exe
+                lt_tool_outputfile=$lt_tool_outputfile.exe
+                ;;
+            esac~
+            func_to_tool_file "$lt_outputfile"~
+            if test : != "$MANIFEST_TOOL" && test -f "$lt_outputfile.manifest"; then
+              $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
+              $RM "$lt_outputfile.manifest";
+            fi'
 	  ;;
 	*)
 	  # g++
 	  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
 	  # as there is no search path for DLLs.
 	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
-	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'
 	  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
 	  _LT_TAGVAR(always_export_symbols, $1)=no
 	  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
 
 	  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
-	    # If the export-symbols file already is a .def file (1st line
-	    # is EXPORTS), use it as is; otherwise, prepend...
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	      cp $export_symbols $output_objdir/$soname.def;
-	    else
-	      echo EXPORTS > $output_objdir/$soname.def;
-	      cat $export_symbols >> $output_objdir/$soname.def;
-	    fi~
-	    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	    # If the export-symbols file already is a .def file, use it as
+	    # is; otherwise, prepend EXPORTS...
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then
+              cp $export_symbols $output_objdir/$soname.def;
+            else
+              echo EXPORTS > $output_objdir/$soname.def;
+              cat $export_symbols >> $output_objdir/$soname.def;
+            fi~
+            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
 	  else
 	    _LT_TAGVAR(ld_shlibs, $1)=no
 	  fi
@@ -6216,6 +6714,34 @@ if test "$_lt_caught_CXX_error" != yes; then
         _LT_DARWIN_LINKER_FEATURES($1)
 	;;
 
+      os2*)
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+	_LT_TAGVAR(hardcode_minus_L, $1)=yes
+	_LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+	shrext_cmds=.dll
+	_LT_TAGVAR(archive_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	  $ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	  $ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	  $ECHO EXPORTS >> $output_objdir/$libname.def~
+	  emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
+	  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	  emximp -o $lib $output_objdir/$libname.def'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	  $ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	  $ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	  $ECHO EXPORTS >> $output_objdir/$libname.def~
+	  prefix_cmds="$SED"~
+	  if test EXPORTS = "`$SED 1q $export_symbols`"; then
+	    prefix_cmds="$prefix_cmds -e 1d";
+	  fi~
+	  prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
+	  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
+	  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	  emximp -o $lib $output_objdir/$libname.def'
+	_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
+	_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+	;;
+
       dgux*)
         case $cc_basename in
           ec++*)
@@ -6251,14 +6777,14 @@ if test "$_lt_caught_CXX_error" != yes; then
         ;;
 
       haiku*)
-        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
         _LT_TAGVAR(link_all_deplibs, $1)=yes
         ;;
 
       hpux9*)
-        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'
         _LT_TAGVAR(hardcode_libdir_separator, $1)=:
-        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
         _LT_TAGVAR(hardcode_direct, $1)=yes
         _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,
 				             # but as the default
@@ -6270,7 +6796,7 @@ if test "$_lt_caught_CXX_error" != yes; then
             _LT_TAGVAR(ld_shlibs, $1)=no
             ;;
           aCC*)
-            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
             # Commands to make compiler produce verbose output that lists
             # what "hidden" libraries, object files and flags are used when
             # linking a shared library.
@@ -6279,11 +6805,11 @@ if test "$_lt_caught_CXX_error" != yes; then
             # explicitly linking system object files so we need to strip them
             # from the output so that they don't get included in the library
             # dependencies.
-            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
+            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP "\-L"`; list= ; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
             ;;
           *)
-            if test "$GXX" = yes; then
-              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+            if test yes = "$GXX"; then
+              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
             else
               # FIXME: insert proper C++ library support
               _LT_TAGVAR(ld_shlibs, $1)=no
@@ -6293,15 +6819,15 @@ if test "$_lt_caught_CXX_error" != yes; then
         ;;
 
       hpux10*|hpux11*)
-        if test $with_gnu_ld = no; then
-	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+        if test no = "$with_gnu_ld"; then
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'
 	  _LT_TAGVAR(hardcode_libdir_separator, $1)=:
 
           case $host_cpu in
             hppa*64*|ia64*)
               ;;
             *)
-	      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
               ;;
           esac
         fi
@@ -6327,13 +6853,13 @@ if test "$_lt_caught_CXX_error" != yes; then
           aCC*)
 	    case $host_cpu in
 	      hppa*64*)
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	        ;;
 	      ia64*)
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	        ;;
 	      *)
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	        ;;
 	    esac
 	    # Commands to make compiler produce verbose output that lists
@@ -6344,20 +6870,20 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # explicitly linking system object files so we need to strip them
 	    # from the output so that they don't get included in the library
 	    # dependencies.
-	    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
+	    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP "\-L"`; list= ; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
 	    ;;
           *)
-	    if test "$GXX" = yes; then
-	      if test $with_gnu_ld = no; then
+	    if test yes = "$GXX"; then
+	      if test no = "$with_gnu_ld"; then
 	        case $host_cpu in
 	          hppa*64*)
-	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	            ;;
 	          ia64*)
-	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	            ;;
 	          *)
-	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	            ;;
 	        esac
 	      fi
@@ -6372,22 +6898,22 @@ if test "$_lt_caught_CXX_error" != yes; then
       interix[[3-9]]*)
 	_LT_TAGVAR(hardcode_direct, $1)=no
 	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
-	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
 	# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
 	# Instead, shared libraries are loaded at an image base (0x10000000 by
 	# default) and relocated if they conflict, which is a slow very memory
 	# consuming and fragmenting process.  To avoid this, we pick a random,
 	# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
 	# time.  Moving up from 0x10000000 also allows more sbrk(2) space.
-	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
-	_LT_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='sed "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
 	;;
       irix5* | irix6*)
         case $cc_basename in
           CC*)
 	    # SGI C++
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
 
 	    # Archives containing C++ object files must be created using
 	    # "CC -ar", where "CC" is the IRIX C++ compiler.  This is
@@ -6396,17 +6922,17 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'
 	    ;;
           *)
-	    if test "$GXX" = yes; then
-	      if test "$with_gnu_ld" = no; then
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	    if test yes = "$GXX"; then
+	      if test no = "$with_gnu_ld"; then
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
 	      else
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` -o $lib'
 	      fi
 	    fi
 	    _LT_TAGVAR(link_all_deplibs, $1)=yes
 	    ;;
         esac
-        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
         _LT_TAGVAR(hardcode_libdir_separator, $1)=:
         _LT_TAGVAR(inherit_rpath, $1)=yes
         ;;
@@ -6419,8 +6945,8 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # KCC will only create a shared library if the output file
 	    # ends with ".so" (or ".sl" for HP-UX), so rename the library
 	    # to its proper name (with version) after linking.
-	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib ${wl}-retain-symbols-file,$export_symbols; mv \$templib $lib'
+	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\$tempext\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\$tempext\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib $wl-retain-symbols-file,$export_symbols; mv \$templib $lib'
 	    # Commands to make compiler produce verbose output that lists
 	    # what "hidden" libraries, object files and flags are used when
 	    # linking a shared library.
@@ -6429,10 +6955,10 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # explicitly linking system object files so we need to strip them
 	    # from the output so that they don't get included in the library
 	    # dependencies.
-	    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
+	    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP "ld"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
 
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
 
 	    # Archives containing C++ object files must be created using
 	    # "CC -Bstatic", where "CC" is the KAI C++ compiler.
@@ -6446,59 +6972,59 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # earlier do not add the objects themselves.
 	    case `$CC -V 2>&1` in
 	      *"Version 7."*)
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
-		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
+		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 		;;
 	      *)  # Version 8.0 or newer
 	        tmp_idyn=
 	        case $host_cpu in
 		  ia64*) tmp_idyn=' -i_dynamic';;
 		esac
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 		;;
 	    esac
 	    _LT_TAGVAR(archive_cmds_need_lc, $1)=no
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
-	    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'
 	    ;;
           pgCC* | pgcpp*)
             # Portland Group C++ compiler
 	    case `$CC -V` in
 	    *pgCC\ [[1-5]].* | *pgcpp\ [[1-5]].*)
 	      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~
-		rm -rf $tpldir~
-		$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~
-		compile_command="$compile_command `find $tpldir -name \*.o | sort | $NL2SP`"'
+               rm -rf $tpldir~
+               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~
+               compile_command="$compile_command `find $tpldir -name \*.o | sort | $NL2SP`"'
 	      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~
-		rm -rf $tpldir~
-		$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~
-		$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \*.o | sort | $NL2SP`~
-		$RANLIB $oldlib'
+                rm -rf $tpldir~
+                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~
+                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \*.o | sort | $NL2SP`~
+                $RANLIB $oldlib'
 	      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~
-		rm -rf $tpldir~
-		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
-		$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
+                rm -rf $tpldir~
+                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
+                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
 	      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~
-		rm -rf $tpldir~
-		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
-		$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+                rm -rf $tpldir~
+                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
+                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	      ;;
 	    *) # Version 6 and above use weak symbols
-	      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
-	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+	      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	      ;;
 	    esac
 
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'
-	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
-	    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
             ;;
 	  cxx*)
 	    # Compaq C++
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'
 
 	    runpath_var=LD_RUN_PATH
 	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
@@ -6512,18 +7038,18 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # explicitly linking system object files so we need to strip them
 	    # from the output so that they don't get included in the library
 	    # dependencies.
-	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "X$list" | $Xsed'
+	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list= ; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "X$list" | $Xsed'
 	    ;;
 	  xl* | mpixl* | bgxl*)
 	    # IBM XL 8.0 on PPC, with GNU ld
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
-	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	    if test "x$supports_anon_versioning" = xyes; then
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	    if test yes = "$supports_anon_versioning"; then
 	      _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
-		cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
-		echo "local: *; };" >> $output_objdir/$libname.ver~
-		$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+                cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+                echo "local: *; };" >> $output_objdir/$libname.ver~
+                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
 	    fi
 	    ;;
 	  *)
@@ -6531,10 +7057,10 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    *Sun\ C*)
 	      # Sun C++ 5.9
 	      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'
-	      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
-	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'
+	      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'
 	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
-	      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	      _LT_TAGVAR(compiler_needs_object, $1)=yes
 
 	      # Not sure whether something based on
@@ -6592,22 +7118,17 @@ if test "$_lt_caught_CXX_error" != yes; then
         _LT_TAGVAR(ld_shlibs, $1)=yes
 	;;
 
-      openbsd2*)
-        # C++ shared libraries are fairly broken
-	_LT_TAGVAR(ld_shlibs, $1)=no
-	;;
-
-      openbsd*)
+      openbsd* | bitrig*)
 	if test -f /usr/libexec/ld.so; then
 	  _LT_TAGVAR(hardcode_direct, $1)=yes
 	  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
 	  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
 	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
-	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
-	  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'
-	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
-	    _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
+	  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`"; then
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'
 	  fi
 	  output_verbose_link_cmd=func_echo_all
 	else
@@ -6623,9 +7144,9 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # KCC will only create a shared library if the output file
 	    # ends with ".so" (or ".sl" for HP-UX), so rename the library
 	    # to its proper name (with version) after linking.
-	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo "$lib" | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo "$lib" | $SED -e "s/\$tempext\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
 
-	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'
 	    _LT_TAGVAR(hardcode_libdir_separator, $1)=:
 
 	    # Archives containing C++ object files must be created using
@@ -6643,17 +7164,17 @@ if test "$_lt_caught_CXX_error" != yes; then
           cxx*)
 	    case $host in
 	      osf3*)
-	        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n "$verstring" && func_echo_all "${wl}-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
-	        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\*'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n "$verstring" && func_echo_all "$wl-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
+	        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
 		;;
 	      *)
 	        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
 	        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done~
-	          echo "-hidden">> $lib.exp~
-	          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib~
-	          $RM $lib.exp'
+                  echo "-hidden">> $lib.exp~
+                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib~
+                  $RM $lib.exp'
 	        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
 		;;
 	    esac
@@ -6668,21 +7189,21 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # explicitly linking system object files so we need to strip them
 	    # from the output so that they don't get included in the library
 	    # dependencies.
-	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld" | $GREP -v "ld:"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
+	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld" | $GREP -v "ld:"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list= ; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
 	    ;;
 	  *)
-	    if test "$GXX" = yes && test "$with_gnu_ld" = no; then
-	      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	    if test yes,no = "$GXX,$with_gnu_ld"; then
+	      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\*'
 	      case $host in
 	        osf3*)
-	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
 		  ;;
 	        *)
-	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
 		  ;;
 	      esac
 
-	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'
 	      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
 
 	      # Commands to make compiler produce verbose output that lists
@@ -6728,9 +7249,9 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    # Sun C++ 4.2, 5.x and Centerline C++
             _LT_TAGVAR(archive_cmds_need_lc,$1)=yes
 	    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
 	    _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
 
 	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
 	    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
@@ -6738,7 +7259,7 @@ if test "$_lt_caught_CXX_error" != yes; then
 	      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
 	      *)
 		# The compiler driver will combine and reorder linker options,
-		# but understands `-z linker_flag'.
+		# but understands '-z linker_flag'.
 	        # Supported since Solaris 2.6 (maybe 2.5.1?)
 		_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'
 	        ;;
@@ -6755,30 +7276,30 @@ if test "$_lt_caught_CXX_error" != yes; then
 	    ;;
           gcx*)
 	    # Green Hills C++ Compiler
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'
 
 	    # The C++ compiler must be used to create the archive.
 	    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'
 	    ;;
           *)
 	    # GNU C++ compiler with Solaris linker
-	    if test "$GXX" = yes && test "$with_gnu_ld" = no; then
-	      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'
+	    if test yes,no = "$GXX,$with_gnu_ld"; then
+	      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'
 	      if $CC --version | $GREP -v '^2\.7' > /dev/null; then
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'
 	        _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-		  $CC -shared $pic_flag -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
 
 	        # Commands to make compiler produce verbose output that lists
 	        # what "hidden" libraries, object files and flags are used when
 	        # linking a shared library.
 	        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
 	      else
-	        # g++ 2.7 appears to require `-G' NOT `-shared' on this
+	        # g++ 2.7 appears to require '-G' NOT '-shared' on this
 	        # platform.
-	        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'
 	        _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-		  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
 
 	        # Commands to make compiler produce verbose output that lists
 	        # what "hidden" libraries, object files and flags are used when
@@ -6786,11 +7307,11 @@ if test "$_lt_caught_CXX_error" != yes; then
 	        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
 	      fi
 
-	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'
+	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'
 	      case $host_os in
 		solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
 		*)
-		  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+		  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'
 		  ;;
 	      esac
 	    fi
@@ -6799,52 +7320,52 @@ if test "$_lt_caught_CXX_error" != yes; then
         ;;
 
     sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)
-      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'
       _LT_TAGVAR(archive_cmds_need_lc, $1)=no
       _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
       runpath_var='LD_RUN_PATH'
 
       case $cc_basename in
         CC*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	*)
-	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
       esac
       ;;
 
       sysv5* | sco3.2v5* | sco5v6*)
-	# Note: We can NOT use -z defs as we might desire, because we do not
+	# Note: We CANNOT use -z defs as we might desire, because we do not
 	# link with -lc, and that would cause any symbols used from libc to
 	# always be unresolved, which means just about no library would
 	# ever link correctly.  If we're not using GNU ld we use -z text
 	# though, which does catch some bad symbols but isn't as heavy-handed
 	# as -z defs.
-	_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
-	_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+	_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'
+	_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'
 	_LT_TAGVAR(archive_cmds_need_lc, $1)=no
 	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
-	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'
 	_LT_TAGVAR(hardcode_libdir_separator, $1)=':'
 	_LT_TAGVAR(link_all_deplibs, $1)=yes
-	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'
 	runpath_var='LD_RUN_PATH'
 
 	case $cc_basename in
           CC*)
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
 	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~
-	      '"$_LT_TAGVAR(old_archive_cmds, $1)"
+              '"$_LT_TAGVAR(old_archive_cmds, $1)"
 	    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~
-	      '"$_LT_TAGVAR(reload_cmds, $1)"
+              '"$_LT_TAGVAR(reload_cmds, $1)"
 	    ;;
 	  *)
-	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
 	    ;;
 	esac
       ;;
@@ -6875,10 +7396,10 @@ if test "$_lt_caught_CXX_error" != yes; then
     esac
 
     AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])
-    test "$_LT_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+    test no = "$_LT_TAGVAR(ld_shlibs, $1)" && can_build_shared=no
 
-    _LT_TAGVAR(GCC, $1)="$GXX"
-    _LT_TAGVAR(LD, $1)="$LD"
+    _LT_TAGVAR(GCC, $1)=$GXX
+    _LT_TAGVAR(LD, $1)=$LD
 
     ## CAVEAT EMPTOR:
     ## There is no encapsulation within the following macros, do not change
@@ -6905,7 +7426,7 @@ if test "$_lt_caught_CXX_error" != yes; then
   lt_cv_path_LD=$lt_save_path_LD
   lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld
   lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld
-fi # test "$_lt_caught_CXX_error" != yes
+fi # test yes != "$_lt_caught_CXX_error"
 
 AC_LANG_POP
 ])# _LT_LANG_CXX_CONFIG
@@ -6927,13 +7448,14 @@ AC_REQUIRE([_LT_DECL_SED])
 AC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])
 func_stripname_cnf ()
 {
-  case ${2} in
-  .*) func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%\\\\${2}\$%%"`;;
-  *)  func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%${2}\$%%"`;;
+  case @S|@2 in
+  .*) func_stripname_result=`$ECHO "@S|@3" | $SED "s%^@S|@1%%; s%\\\\@S|@2\$%%"`;;
+  *)  func_stripname_result=`$ECHO "@S|@3" | $SED "s%^@S|@1%%; s%@S|@2\$%%"`;;
   esac
 } # func_stripname_cnf
 ])# _LT_FUNC_STRIPNAME_CNF
 
+
 # _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])
 # ---------------------------------
 # Figure out "hidden" library dependencies from verbose
@@ -7017,13 +7539,13 @@ if AC_TRY_EVAL(ac_compile); then
   pre_test_object_deps_done=no
 
   for p in `eval "$output_verbose_link_cmd"`; do
-    case ${prev}${p} in
+    case $prev$p in
 
     -L* | -R* | -l*)
        # Some compilers place space between "-{L,R}" and the path.
        # Remove the space.
-       if test $p = "-L" ||
-          test $p = "-R"; then
+       if test x-L = "$p" ||
+          test x-R = "$p"; then
 	 prev=$p
 	 continue
        fi
@@ -7039,16 +7561,16 @@ if AC_TRY_EVAL(ac_compile); then
        case $p in
        =*) func_stripname_cnf '=' '' "$p"; p=$lt_sysroot$func_stripname_result ;;
        esac
-       if test "$pre_test_object_deps_done" = no; then
-	 case ${prev} in
+       if test no = "$pre_test_object_deps_done"; then
+	 case $prev in
 	 -L | -R)
 	   # Internal compiler library paths should come after those
 	   # provided the user.  The postdeps already come after the
 	   # user supplied libs so there is no need to process them.
 	   if test -z "$_LT_TAGVAR(compiler_lib_search_path, $1)"; then
-	     _LT_TAGVAR(compiler_lib_search_path, $1)="${prev}${p}"
+	     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p
 	   else
-	     _LT_TAGVAR(compiler_lib_search_path, $1)="${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}"
+	     _LT_TAGVAR(compiler_lib_search_path, $1)="${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p"
 	   fi
 	   ;;
 	 # The "-l" case would never come before the object being
@@ -7056,9 +7578,9 @@ if AC_TRY_EVAL(ac_compile); then
 	 esac
        else
 	 if test -z "$_LT_TAGVAR(postdeps, $1)"; then
-	   _LT_TAGVAR(postdeps, $1)="${prev}${p}"
+	   _LT_TAGVAR(postdeps, $1)=$prev$p
 	 else
-	   _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} ${prev}${p}"
+	   _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} $prev$p"
 	 fi
        fi
        prev=
@@ -7073,15 +7595,15 @@ if AC_TRY_EVAL(ac_compile); then
 	 continue
        fi
 
-       if test "$pre_test_object_deps_done" = no; then
+       if test no = "$pre_test_object_deps_done"; then
 	 if test -z "$_LT_TAGVAR(predep_objects, $1)"; then
-	   _LT_TAGVAR(predep_objects, $1)="$p"
+	   _LT_TAGVAR(predep_objects, $1)=$p
 	 else
 	   _LT_TAGVAR(predep_objects, $1)="$_LT_TAGVAR(predep_objects, $1) $p"
 	 fi
        else
 	 if test -z "$_LT_TAGVAR(postdep_objects, $1)"; then
-	   _LT_TAGVAR(postdep_objects, $1)="$p"
+	   _LT_TAGVAR(postdep_objects, $1)=$p
 	 else
 	   _LT_TAGVAR(postdep_objects, $1)="$_LT_TAGVAR(postdep_objects, $1) $p"
 	 fi
@@ -7112,51 +7634,6 @@ interix[[3-9]]*)
   _LT_TAGVAR(postdep_objects,$1)=
   _LT_TAGVAR(postdeps,$1)=
   ;;
-
-linux*)
-  case `$CC -V 2>&1 | sed 5q` in
-  *Sun\ C*)
-    # Sun C++ 5.9
-
-    # The more standards-conforming stlport4 library is
-    # incompatible with the Cstd library. Avoid specifying
-    # it if it's in CXXFLAGS. Ignore libCrun as
-    # -library=stlport4 depends on it.
-    case " $CXX $CXXFLAGS " in
-    *" -library=stlport4 "*)
-      solaris_use_stlport4=yes
-      ;;
-    esac
-
-    if test "$solaris_use_stlport4" != yes; then
-      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'
-    fi
-    ;;
-  esac
-  ;;
-
-solaris*)
-  case $cc_basename in
-  CC* | sunCC*)
-    # The more standards-conforming stlport4 library is
-    # incompatible with the Cstd library. Avoid specifying
-    # it if it's in CXXFLAGS. Ignore libCrun as
-    # -library=stlport4 depends on it.
-    case " $CXX $CXXFLAGS " in
-    *" -library=stlport4 "*)
-      solaris_use_stlport4=yes
-      ;;
-    esac
-
-    # Adding this requires a known-good setup of shared libraries for
-    # Sun compiler versions before 5.6, else PIC objects from an old
-    # archive will be linked into the output, leading to subtle bugs.
-    if test "$solaris_use_stlport4" != yes; then
-      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'
-    fi
-    ;;
-  esac
-  ;;
 esac
 ])
 
@@ -7165,7 +7642,7 @@ case " $_LT_TAGVAR(postdeps, $1) " in
 esac
  _LT_TAGVAR(compiler_lib_search_dirs, $1)=
 if test -n "${_LT_TAGVAR(compiler_lib_search_path, $1)}"; then
- _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo " ${_LT_TAGVAR(compiler_lib_search_path, $1)}" | ${SED} -e 's! -L! !g' -e 's!^ !!'`
+ _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo " ${_LT_TAGVAR(compiler_lib_search_path, $1)}" | $SED -e 's! -L! !g' -e 's!^ !!'`
 fi
 _LT_TAGDECL([], [compiler_lib_search_dirs], [1],
     [The directories searched by this compiler when creating a shared library])
@@ -7185,10 +7662,10 @@ _LT_TAGDECL([], [compiler_lib_search_path], [1],
 # --------------------------
 # Ensure that the configuration variables for a Fortran 77 compiler are
 # suitably defined.  These variables are subsequently used by _LT_CONFIG
-# to write the compiler configuration to `libtool'.
+# to write the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_F77_CONFIG],
 [AC_LANG_PUSH(Fortran 77)
-if test -z "$F77" || test "X$F77" = "Xno"; then
+if test -z "$F77" || test no = "$F77"; then
   _lt_disable_F77=yes
 fi
 
@@ -7225,7 +7702,7 @@ _LT_TAGVAR(objext, $1)=$objext
 # the F77 compiler isn't working.  Some variables (like enable_shared)
 # are currently assumed to apply to all compilers on this platform,
 # and will be corrupted by setting them based on a non-working compiler.
-if test "$_lt_disable_F77" != yes; then
+if test yes != "$_lt_disable_F77"; then
   # Code to be used in simple compile tests
   lt_simple_compile_test_code="\
       subroutine t
@@ -7247,7 +7724,7 @@ if test "$_lt_disable_F77" != yes; then
   _LT_LINKER_BOILERPLATE
 
   # Allow CC to be a program name with arguments.
-  lt_save_CC="$CC"
+  lt_save_CC=$CC
   lt_save_GCC=$GCC
   lt_save_CFLAGS=$CFLAGS
   CC=${F77-"f77"}
@@ -7261,21 +7738,25 @@ if test "$_lt_disable_F77" != yes; then
     AC_MSG_RESULT([$can_build_shared])
 
     AC_MSG_CHECKING([whether to build shared libraries])
-    test "$can_build_shared" = "no" && enable_shared=no
+    test no = "$can_build_shared" && enable_shared=no
 
     # On AIX, shared libraries and static libraries use the same namespace, and
     # are all built from PIC.
     case $host_os in
       aix3*)
-        test "$enable_shared" = yes && enable_static=no
+        test yes = "$enable_shared" && enable_static=no
         if test -n "$RANLIB"; then
           archive_cmds="$archive_cmds~\$RANLIB \$lib"
           postinstall_cmds='$RANLIB $lib'
         fi
         ;;
       aix[[4-9]]*)
-	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
-	  test "$enable_shared" = yes && enable_static=no
+	if test ia64 != "$host_cpu"; then
+	  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
+	  yes,aix,yes) ;;		# shared object as lib.so file only
+	  yes,svr4,*) ;;		# shared object as lib.so archive member only
+	  yes,*) enable_static=no ;;	# shared object in lib.a archive as well
+	  esac
 	fi
         ;;
     esac
@@ -7283,11 +7764,11 @@ if test "$_lt_disable_F77" != yes; then
 
     AC_MSG_CHECKING([whether to build static libraries])
     # Make sure either enable_shared or enable_static is yes.
-    test "$enable_shared" = yes || enable_static=yes
+    test yes = "$enable_shared" || enable_static=yes
     AC_MSG_RESULT([$enable_static])
 
-    _LT_TAGVAR(GCC, $1)="$G77"
-    _LT_TAGVAR(LD, $1)="$LD"
+    _LT_TAGVAR(GCC, $1)=$G77
+    _LT_TAGVAR(LD, $1)=$LD
 
     ## CAVEAT EMPTOR:
     ## There is no encapsulation within the following macros, do not change
@@ -7304,9 +7785,9 @@ if test "$_lt_disable_F77" != yes; then
   fi # test -n "$compiler"
 
   GCC=$lt_save_GCC
-  CC="$lt_save_CC"
-  CFLAGS="$lt_save_CFLAGS"
-fi # test "$_lt_disable_F77" != yes
+  CC=$lt_save_CC
+  CFLAGS=$lt_save_CFLAGS
+fi # test yes != "$_lt_disable_F77"
 
 AC_LANG_POP
 ])# _LT_LANG_F77_CONFIG
@@ -7316,11 +7797,11 @@ AC_LANG_POP
 # -------------------------
 # Ensure that the configuration variables for a Fortran compiler are
 # suitably defined.  These variables are subsequently used by _LT_CONFIG
-# to write the compiler configuration to `libtool'.
+# to write the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_FC_CONFIG],
 [AC_LANG_PUSH(Fortran)
 
-if test -z "$FC" || test "X$FC" = "Xno"; then
+if test -z "$FC" || test no = "$FC"; then
   _lt_disable_FC=yes
 fi
 
@@ -7357,7 +7838,7 @@ _LT_TAGVAR(objext, $1)=$objext
 # the FC compiler isn't working.  Some variables (like enable_shared)
 # are currently assumed to apply to all compilers on this platform,
 # and will be corrupted by setting them based on a non-working compiler.
-if test "$_lt_disable_FC" != yes; then
+if test yes != "$_lt_disable_FC"; then
   # Code to be used in simple compile tests
   lt_simple_compile_test_code="\
       subroutine t
@@ -7379,7 +7860,7 @@ if test "$_lt_disable_FC" != yes; then
   _LT_LINKER_BOILERPLATE
 
   # Allow CC to be a program name with arguments.
-  lt_save_CC="$CC"
+  lt_save_CC=$CC
   lt_save_GCC=$GCC
   lt_save_CFLAGS=$CFLAGS
   CC=${FC-"f95"}
@@ -7395,21 +7876,25 @@ if test "$_lt_disable_FC" != yes; then
     AC_MSG_RESULT([$can_build_shared])
 
     AC_MSG_CHECKING([whether to build shared libraries])
-    test "$can_build_shared" = "no" && enable_shared=no
+    test no = "$can_build_shared" && enable_shared=no
 
     # On AIX, shared libraries and static libraries use the same namespace, and
     # are all built from PIC.
     case $host_os in
       aix3*)
-        test "$enable_shared" = yes && enable_static=no
+        test yes = "$enable_shared" && enable_static=no
         if test -n "$RANLIB"; then
           archive_cmds="$archive_cmds~\$RANLIB \$lib"
           postinstall_cmds='$RANLIB $lib'
         fi
         ;;
       aix[[4-9]]*)
-	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
-	  test "$enable_shared" = yes && enable_static=no
+	if test ia64 != "$host_cpu"; then
+	  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
+	  yes,aix,yes) ;;		# shared object as lib.so file only
+	  yes,svr4,*) ;;		# shared object as lib.so archive member only
+	  yes,*) enable_static=no ;;	# shared object in lib.a archive as well
+	  esac
 	fi
         ;;
     esac
@@ -7417,11 +7902,11 @@ if test "$_lt_disable_FC" != yes; then
 
     AC_MSG_CHECKING([whether to build static libraries])
     # Make sure either enable_shared or enable_static is yes.
-    test "$enable_shared" = yes || enable_static=yes
+    test yes = "$enable_shared" || enable_static=yes
     AC_MSG_RESULT([$enable_static])
 
-    _LT_TAGVAR(GCC, $1)="$ac_cv_fc_compiler_gnu"
-    _LT_TAGVAR(LD, $1)="$LD"
+    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu
+    _LT_TAGVAR(LD, $1)=$LD
 
     ## CAVEAT EMPTOR:
     ## There is no encapsulation within the following macros, do not change
@@ -7441,7 +7926,7 @@ if test "$_lt_disable_FC" != yes; then
   GCC=$lt_save_GCC
   CC=$lt_save_CC
   CFLAGS=$lt_save_CFLAGS
-fi # test "$_lt_disable_FC" != yes
+fi # test yes != "$_lt_disable_FC"
 
 AC_LANG_POP
 ])# _LT_LANG_FC_CONFIG
@@ -7451,7 +7936,7 @@ AC_LANG_POP
 # --------------------------
 # Ensure that the configuration variables for the GNU Java Compiler compiler
 # are suitably defined.  These variables are subsequently used by _LT_CONFIG
-# to write the compiler configuration to `libtool'.
+# to write the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_GCJ_CONFIG],
 [AC_REQUIRE([LT_PROG_GCJ])dnl
 AC_LANG_SAVE
@@ -7485,7 +7970,7 @@ CC=${GCJ-"gcj"}
 CFLAGS=$GCJFLAGS
 compiler=$CC
 _LT_TAGVAR(compiler, $1)=$CC
-_LT_TAGVAR(LD, $1)="$LD"
+_LT_TAGVAR(LD, $1)=$LD
 _LT_CC_BASENAME([$compiler])
 
 # GCJ did not exist at the time GCC didn't implicitly link libc in.
@@ -7518,7 +8003,7 @@ CFLAGS=$lt_save_CFLAGS
 # --------------------------
 # Ensure that the configuration variables for the GNU Go compiler
 # are suitably defined.  These variables are subsequently used by _LT_CONFIG
-# to write the compiler configuration to `libtool'.
+# to write the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_GO_CONFIG],
 [AC_REQUIRE([LT_PROG_GO])dnl
 AC_LANG_SAVE
@@ -7552,7 +8037,7 @@ CC=${GOC-"gccgo"}
 CFLAGS=$GOFLAGS
 compiler=$CC
 _LT_TAGVAR(compiler, $1)=$CC
-_LT_TAGVAR(LD, $1)="$LD"
+_LT_TAGVAR(LD, $1)=$LD
 _LT_CC_BASENAME([$compiler])
 
 # Go did not exist at the time GCC didn't implicitly link libc in.
@@ -7585,7 +8070,7 @@ CFLAGS=$lt_save_CFLAGS
 # -------------------------
 # Ensure that the configuration variables for the Windows resource compiler
 # are suitably defined.  These variables are subsequently used by _LT_CONFIG
-# to write the compiler configuration to `libtool'.
+# to write the compiler configuration to 'libtool'.
 m4_defun([_LT_LANG_RC_CONFIG],
 [AC_REQUIRE([LT_PROG_RC])dnl
 AC_LANG_SAVE
@@ -7601,7 +8086,7 @@ _LT_TAGVAR(objext, $1)=$objext
 lt_simple_compile_test_code='sample MENU { MENUITEM "&Soup", 100, CHECKED }'
 
 # Code to be used in simple link tests
-lt_simple_link_test_code="$lt_simple_compile_test_code"
+lt_simple_link_test_code=$lt_simple_compile_test_code
 
 # ltmain only uses $CC for tagged configurations so make sure $CC is set.
 _LT_TAG_COMPILER
@@ -7611,7 +8096,7 @@ _LT_COMPILER_BOILERPLATE
 _LT_LINKER_BOILERPLATE
 
 # Allow CC to be a program name with arguments.
-lt_save_CC="$CC"
+lt_save_CC=$CC
 lt_save_CFLAGS=$CFLAGS
 lt_save_GCC=$GCC
 GCC=
@@ -7640,7 +8125,7 @@ AC_DEFUN([LT_PROG_GCJ],
 [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
   [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
     [AC_CHECK_TOOL(GCJ, gcj,)
-      test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
+      test set = "${GCJFLAGS+set}" || GCJFLAGS="-g -O2"
       AC_SUBST(GCJFLAGS)])])[]dnl
 ])
 
@@ -7749,7 +8234,7 @@ lt_ac_count=0
 # Add /usr/xpg4/bin/sed as it is typically found on Solaris
 # along with /bin/sed that truncates output.
 for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do
-  test ! -f $lt_ac_sed && continue
+  test ! -f "$lt_ac_sed" && continue
   cat /dev/null > conftest.in
   lt_ac_count=0
   echo $ECHO_N "0123456789$ECHO_C" >conftest.in
@@ -7766,9 +8251,9 @@ for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do
     $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break
     cmp -s conftest.out conftest.nl || break
     # 10000 chars as input seems more than enough
-    test $lt_ac_count -gt 10 && break
+    test 10 -lt "$lt_ac_count" && break
     lt_ac_count=`expr $lt_ac_count + 1`
-    if test $lt_ac_count -gt $lt_ac_max; then
+    if test "$lt_ac_count" -gt "$lt_ac_max"; then
       lt_ac_max=$lt_ac_count
       lt_cv_path_SED=$lt_ac_sed
     fi
@@ -7792,27 +8277,7 @@ dnl AC_DEFUN([LT_AC_PROG_SED], [])
 # Find out whether the shell is Bourne or XSI compatible,
 # or has some other useful features.
 m4_defun([_LT_CHECK_SHELL_FEATURES],
-[AC_MSG_CHECKING([whether the shell understands some XSI constructs])
-# Try some XSI features
-xsi_shell=no
-( _lt_dummy="a/b/c"
-  test "${_lt_dummy##*/},${_lt_dummy%/*},${_lt_dummy#??}"${_lt_dummy%"$_lt_dummy"}, \
-      = c,a/b,b/c, \
-    && eval 'test $(( 1 + 1 )) -eq 2 \
-    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
-  && xsi_shell=yes
-AC_MSG_RESULT([$xsi_shell])
-_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])
-
-AC_MSG_CHECKING([whether the shell understands "+="])
-lt_shell_append=no
-( foo=bar; set foo baz; eval "$[1]+=\$[2]" && test "$foo" = barbaz ) \
-    >/dev/null 2>&1 \
-  && lt_shell_append=yes
-AC_MSG_RESULT([$lt_shell_append])
-_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])
-
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
   lt_unset=unset
 else
   lt_unset=false
@@ -7836,102 +8301,9 @@ _LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl
 ])# _LT_CHECK_SHELL_FEATURES
 
 
-# _LT_PROG_FUNCTION_REPLACE (FUNCNAME, REPLACEMENT-BODY)
-# ------------------------------------------------------
-# In `$cfgfile', look for function FUNCNAME delimited by `^FUNCNAME ()$' and
-# '^} FUNCNAME ', and replace its body with REPLACEMENT-BODY.
-m4_defun([_LT_PROG_FUNCTION_REPLACE],
-[dnl {
-sed -e '/^$1 ()$/,/^} # $1 /c\
-$1 ()\
-{\
-m4_bpatsubsts([$2], [$], [\\], [^\([	 ]\)], [\\\1])
-} # Extended-shell $1 implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-])
-
-
-# _LT_PROG_REPLACE_SHELLFNS
-# -------------------------
-# Replace existing portable implementations of several shell functions with
-# equivalent extended shell implementations where those features are available..
-m4_defun([_LT_PROG_REPLACE_SHELLFNS],
-[if test x"$xsi_shell" = xyes; then
-  _LT_PROG_FUNCTION_REPLACE([func_dirname], [dnl
-    case ${1} in
-      */*) func_dirname_result="${1%/*}${2}" ;;
-      *  ) func_dirname_result="${3}" ;;
-    esac])
-
-  _LT_PROG_FUNCTION_REPLACE([func_basename], [dnl
-    func_basename_result="${1##*/}"])
-
-  _LT_PROG_FUNCTION_REPLACE([func_dirname_and_basename], [dnl
-    case ${1} in
-      */*) func_dirname_result="${1%/*}${2}" ;;
-      *  ) func_dirname_result="${3}" ;;
-    esac
-    func_basename_result="${1##*/}"])
-
-  _LT_PROG_FUNCTION_REPLACE([func_stripname], [dnl
-    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
-    # positional parameters, so assign one to ordinary parameter first.
-    func_stripname_result=${3}
-    func_stripname_result=${func_stripname_result#"${1}"}
-    func_stripname_result=${func_stripname_result%"${2}"}])
-
-  _LT_PROG_FUNCTION_REPLACE([func_split_long_opt], [dnl
-    func_split_long_opt_name=${1%%=*}
-    func_split_long_opt_arg=${1#*=}])
-
-  _LT_PROG_FUNCTION_REPLACE([func_split_short_opt], [dnl
-    func_split_short_opt_arg=${1#??}
-    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}])
-
-  _LT_PROG_FUNCTION_REPLACE([func_lo2o], [dnl
-    case ${1} in
-      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
-      *)    func_lo2o_result=${1} ;;
-    esac])
-
-  _LT_PROG_FUNCTION_REPLACE([func_xform], [    func_xform_result=${1%.*}.lo])
-
-  _LT_PROG_FUNCTION_REPLACE([func_arith], [    func_arith_result=$(( $[*] ))])
-
-  _LT_PROG_FUNCTION_REPLACE([func_len], [    func_len_result=${#1}])
-fi
-
-if test x"$lt_shell_append" = xyes; then
-  _LT_PROG_FUNCTION_REPLACE([func_append], [    eval "${1}+=\\${2}"])
-
-  _LT_PROG_FUNCTION_REPLACE([func_append_quoted], [dnl
-    func_quote_for_eval "${2}"
-dnl m4 expansion turns \\\\ into \\, and then the shell eval turns that into \
-    eval "${1}+=\\\\ \\$func_quote_for_eval_result"])
-
-  # Save a `func_append' function call where possible by direct use of '+='
-  sed -e 's%func_append \([[a-zA-Z_]]\{1,\}\) "%\1+="%g' $cfgfile > $cfgfile.tmp \
-    && mv -f "$cfgfile.tmp" "$cfgfile" \
-      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-  test 0 -eq $? || _lt_function_replace_fail=:
-else
-  # Save a `func_append' function call even when '+=' is not available
-  sed -e 's%func_append \([[a-zA-Z_]]\{1,\}\) "%\1="$\1%g' $cfgfile > $cfgfile.tmp \
-    && mv -f "$cfgfile.tmp" "$cfgfile" \
-      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-  test 0 -eq $? || _lt_function_replace_fail=:
-fi
-
-if test x"$_lt_function_replace_fail" = x":"; then
-  AC_MSG_WARN([Unable to substitute extended shell functions in $ofile])
-fi
-])
-
 # _LT_PATH_CONVERSION_FUNCTIONS
 # -----------------------------
-# Determine which file name conversion functions should be used by
+# Determine what file name conversion functions should be used by
 # func_to_host_file (and, implicitly, by func_to_host_path).  These are needed
 # for certain cross-compile configurations and native mingw.
 m4_defun([_LT_PATH_CONVERSION_FUNCTIONS],
@@ -7998,15 +8370,15 @@ _LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],
 
 # Helper functions for option handling.                    -*- Autoconf -*-
 #
-#   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation,
-#   Inc.
+#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software
+#   Foundation, Inc.
 #   Written by Gary V. Vaughan, 2004
 #
 # This file is free software; the Free Software Foundation gives
 # unlimited permission to copy and/or distribute it, with or without
 # modifications, as long as this notice is preserved.
 
-# serial 7 ltoptions.m4
+# serial 8 ltoptions.m4
 
 # This is to help aclocal find these macros, as it can't see m4_define.
 AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
@@ -8027,7 +8399,7 @@ m4_define([_LT_SET_OPTION],
 [m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl
 m4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),
         _LT_MANGLE_DEFUN([$1], [$2]),
-    [m4_warning([Unknown $1 option `$2'])])[]dnl
+    [m4_warning([Unknown $1 option '$2'])])[]dnl
 ])
 
 
@@ -8073,13 +8445,15 @@ m4_if([$1],[LT_INIT],[
   dnl
   dnl If no reference was made to various pairs of opposing options, then
   dnl we run the default mode handler for the pair.  For example, if neither
-  dnl `shared' nor `disable-shared' was passed, we enable building of shared
+  dnl 'shared' nor 'disable-shared' was passed, we enable building of shared
   dnl archives by default:
   _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])
   _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])
   _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])
   _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],
-  		   [_LT_ENABLE_FAST_INSTALL])
+		   [_LT_ENABLE_FAST_INSTALL])
+  _LT_UNLESS_OPTIONS([LT_INIT], [aix-soname=aix aix-soname=both aix-soname=svr4],
+		   [_LT_WITH_AIX_SONAME([aix])])
   ])
 ])# _LT_SET_OPTIONS
 
@@ -8107,7 +8481,7 @@ AU_DEFUN([AC_LIBTOOL_DLOPEN],
 [_LT_SET_OPTION([LT_INIT], [dlopen])
 AC_DIAGNOSE([obsolete],
 [$0: Remove this warning and the call to _LT_SET_OPTION when you
-put the `dlopen' option into LT_INIT's first parameter.])
+put the 'dlopen' option into LT_INIT's first parameter.])
 ])
 
 dnl aclocal-1.4 backwards compatibility:
@@ -8143,7 +8517,7 @@ AU_DEFUN([AC_LIBTOOL_WIN32_DLL],
 _LT_SET_OPTION([LT_INIT], [win32-dll])
 AC_DIAGNOSE([obsolete],
 [$0: Remove this warning and the call to _LT_SET_OPTION when you
-put the `win32-dll' option into LT_INIT's first parameter.])
+put the 'win32-dll' option into LT_INIT's first parameter.])
 ])
 
 dnl aclocal-1.4 backwards compatibility:
@@ -8152,9 +8526,9 @@ dnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])
 
 # _LT_ENABLE_SHARED([DEFAULT])
 # ----------------------------
-# implement the --enable-shared flag, and supports the `shared' and
-# `disable-shared' LT_INIT options.
-# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+# implement the --enable-shared flag, and supports the 'shared' and
+# 'disable-shared' LT_INIT options.
+# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.
 m4_define([_LT_ENABLE_SHARED],
 [m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl
 AC_ARG_ENABLE([shared],
@@ -8167,14 +8541,14 @@ AC_ARG_ENABLE([shared],
     *)
       enable_shared=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_shared=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac],
     [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)
@@ -8206,9 +8580,9 @@ dnl AC_DEFUN([AM_DISABLE_SHARED], [])
 
 # _LT_ENABLE_STATIC([DEFAULT])
 # ----------------------------
-# implement the --enable-static flag, and support the `static' and
-# `disable-static' LT_INIT options.
-# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+# implement the --enable-static flag, and support the 'static' and
+# 'disable-static' LT_INIT options.
+# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.
 m4_define([_LT_ENABLE_STATIC],
 [m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl
 AC_ARG_ENABLE([static],
@@ -8221,14 +8595,14 @@ AC_ARG_ENABLE([static],
     *)
      enable_static=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_static=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac],
     [enable_static=]_LT_ENABLE_STATIC_DEFAULT)
@@ -8260,9 +8634,9 @@ dnl AC_DEFUN([AM_DISABLE_STATIC], [])
 
 # _LT_ENABLE_FAST_INSTALL([DEFAULT])
 # ----------------------------------
-# implement the --enable-fast-install flag, and support the `fast-install'
-# and `disable-fast-install' LT_INIT options.
-# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+# implement the --enable-fast-install flag, and support the 'fast-install'
+# and 'disable-fast-install' LT_INIT options.
+# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.
 m4_define([_LT_ENABLE_FAST_INSTALL],
 [m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl
 AC_ARG_ENABLE([fast-install],
@@ -8275,14 +8649,14 @@ AC_ARG_ENABLE([fast-install],
     *)
       enable_fast_install=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_fast_install=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac],
     [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)
@@ -8299,14 +8673,14 @@ AU_DEFUN([AC_ENABLE_FAST_INSTALL],
 [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
 AC_DIAGNOSE([obsolete],
 [$0: Remove this warning and the call to _LT_SET_OPTION when you put
-the `fast-install' option into LT_INIT's first parameter.])
+the 'fast-install' option into LT_INIT's first parameter.])
 ])
 
 AU_DEFUN([AC_DISABLE_FAST_INSTALL],
 [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
 AC_DIAGNOSE([obsolete],
 [$0: Remove this warning and the call to _LT_SET_OPTION when you put
-the `disable-fast-install' option into LT_INIT's first parameter.])
+the 'disable-fast-install' option into LT_INIT's first parameter.])
 ])
 
 dnl aclocal-1.4 backwards compatibility:
@@ -8314,11 +8688,64 @@ dnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])
 dnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])
 
 
+# _LT_WITH_AIX_SONAME([DEFAULT])
+# ----------------------------------
+# implement the --with-aix-soname flag, and support the `aix-soname=aix'
+# and `aix-soname=both' and `aix-soname=svr4' LT_INIT options. DEFAULT
+# is either `aix', `both' or `svr4'.  If omitted, it defaults to `aix'.
+m4_define([_LT_WITH_AIX_SONAME],
+[m4_define([_LT_WITH_AIX_SONAME_DEFAULT], [m4_if($1, svr4, svr4, m4_if($1, both, both, aix))])dnl
+shared_archive_member_spec=
+case $host,$enable_shared in
+power*-*-aix[[5-9]]*,yes)
+  AC_MSG_CHECKING([which variant of shared library versioning to provide])
+  AC_ARG_WITH([aix-soname],
+    [AS_HELP_STRING([--with-aix-soname=aix|svr4|both],
+      [shared library versioning (aka "SONAME") variant to provide on AIX, @<:@default=]_LT_WITH_AIX_SONAME_DEFAULT[@:>@.])],
+    [case $withval in
+    aix|svr4|both)
+      ;;
+    *)
+      AC_MSG_ERROR([Unknown argument to --with-aix-soname])
+      ;;
+    esac
+    lt_cv_with_aix_soname=$with_aix_soname],
+    [AC_CACHE_VAL([lt_cv_with_aix_soname],
+      [lt_cv_with_aix_soname=]_LT_WITH_AIX_SONAME_DEFAULT)
+    with_aix_soname=$lt_cv_with_aix_soname])
+  AC_MSG_RESULT([$with_aix_soname])
+  if test aix != "$with_aix_soname"; then
+    # For the AIX way of multilib, we name the shared archive member
+    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',
+    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.
+    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,
+    # the AIX toolchain works better with OBJECT_MODE set (default 32).
+    if test 64 = "${OBJECT_MODE-32}"; then
+      shared_archive_member_spec=shr_64
+    else
+      shared_archive_member_spec=shr
+    fi
+  fi
+  ;;
+*)
+  with_aix_soname=aix
+  ;;
+esac
+
+_LT_DECL([], [shared_archive_member_spec], [0],
+    [Shared archive member basename, for filename based shared library versioning on AIX])dnl
+])# _LT_WITH_AIX_SONAME
+
+LT_OPTION_DEFINE([LT_INIT], [aix-soname=aix], [_LT_WITH_AIX_SONAME([aix])])
+LT_OPTION_DEFINE([LT_INIT], [aix-soname=both], [_LT_WITH_AIX_SONAME([both])])
+LT_OPTION_DEFINE([LT_INIT], [aix-soname=svr4], [_LT_WITH_AIX_SONAME([svr4])])
+
+
 # _LT_WITH_PIC([MODE])
 # --------------------
-# implement the --with-pic flag, and support the `pic-only' and `no-pic'
+# implement the --with-pic flag, and support the 'pic-only' and 'no-pic'
 # LT_INIT options.
-# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.
+# MODE is either 'yes' or 'no'.  If omitted, it defaults to 'both'.
 m4_define([_LT_WITH_PIC],
 [AC_ARG_WITH([pic],
     [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],
@@ -8329,19 +8756,17 @@ m4_define([_LT_WITH_PIC],
     *)
       pic_mode=default
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for lt_pkg in $withval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$lt_pkg" = "X$lt_p"; then
 	  pic_mode=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac],
-    [pic_mode=default])
-
-test -z "$pic_mode" && pic_mode=m4_default([$1], [default])
+    [pic_mode=m4_default([$1], [default])])
 
 _LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl
 ])# _LT_WITH_PIC
@@ -8354,7 +8779,7 @@ AU_DEFUN([AC_LIBTOOL_PICMODE],
 [_LT_SET_OPTION([LT_INIT], [pic-only])
 AC_DIAGNOSE([obsolete],
 [$0: Remove this warning and the call to _LT_SET_OPTION when you
-put the `pic-only' option into LT_INIT's first parameter.])
+put the 'pic-only' option into LT_INIT's first parameter.])
 ])
 
 dnl aclocal-1.4 backwards compatibility:
@@ -8377,7 +8802,8 @@ LT_OPTION_DEFINE([LTDL_INIT], [convenience],
 
 # ltsugar.m4 -- libtool m4 base layer.                         -*-Autoconf-*-
 #
-# Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
+# Copyright (C) 2004-2005, 2007-2008, 2011-2015 Free Software
+# Foundation, Inc.
 # Written by Gary V. Vaughan, 2004
 #
 # This file is free software; the Free Software Foundation gives
@@ -8410,7 +8836,7 @@ m4_define([_lt_join],
 # ------------
 # Manipulate m4 lists.
 # These macros are necessary as long as will still need to support
-# Autoconf-2.59 which quotes differently.
+# Autoconf-2.59, which quotes differently.
 m4_define([lt_car], [[$1]])
 m4_define([lt_cdr],
 [m4_if([$#], 0, [m4_fatal([$0: cannot be called without arguments])],
@@ -8421,7 +8847,7 @@ m4_define([lt_unquote], $1)
 
 # lt_append(MACRO-NAME, STRING, [SEPARATOR])
 # ------------------------------------------
-# Redefine MACRO-NAME to hold its former content plus `SEPARATOR'`STRING'.
+# Redefine MACRO-NAME to hold its former content plus 'SEPARATOR''STRING'.
 # Note that neither SEPARATOR nor STRING are expanded; they are appended
 # to MACRO-NAME as is (leaving the expansion for when MACRO-NAME is invoked).
 # No SEPARATOR is output if MACRO-NAME was previously undefined (different
@@ -8501,7 +8927,7 @@ m4_define([lt_dict_filter],
 
 # ltversion.m4 -- version numbers			-*- Autoconf -*-
 #
-#   Copyright (C) 2004 Free Software Foundation, Inc.
+#   Copyright (C) 2004, 2011-2015 Free Software Foundation, Inc.
 #   Written by Scott James Remnant, 2004
 #
 # This file is free software; the Free Software Foundation gives
@@ -8510,22 +8936,23 @@ m4_define([lt_dict_filter],
 
 # @configure_input@
 
-# serial 3337 ltversion.m4
+# serial 4179 ltversion.m4
 # This file is part of GNU Libtool
 
-m4_define([LT_PACKAGE_VERSION], [2.4.2])
-m4_define([LT_PACKAGE_REVISION], [1.3337])
+m4_define([LT_PACKAGE_VERSION], [2.4.6])
+m4_define([LT_PACKAGE_REVISION], [2.4.6])
 
 AC_DEFUN([LTVERSION_VERSION],
-[macro_version='2.4.2'
-macro_revision='1.3337'
+[macro_version='2.4.6'
+macro_revision='2.4.6'
 _LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
 _LT_DECL(, macro_revision, 0)
 ])
 
 # lt~obsolete.m4 -- aclocal satisfying obsolete definitions.    -*-Autoconf-*-
 #
-#   Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.
+#   Copyright (C) 2004-2005, 2007, 2009, 2011-2015 Free Software
+#   Foundation, Inc.
 #   Written by Scott James Remnant, 2004.
 #
 # This file is free software; the Free Software Foundation gives
@@ -8536,7 +8963,7 @@ _LT_DECL(, macro_revision, 0)
 
 # These exist entirely to fool aclocal when bootstrapping libtool.
 #
-# In the past libtool.m4 has provided macros via AC_DEFUN (or AU_DEFUN)
+# In the past libtool.m4 has provided macros via AC_DEFUN (or AU_DEFUN),
 # which have later been changed to m4_define as they aren't part of the
 # exported API, or moved to Autoconf or Automake where they belong.
 #
@@ -8550,7 +8977,7 @@ _LT_DECL(, macro_revision, 0)
 # included after everything else.  This provides aclocal with the
 # AC_DEFUNs it wants, but when m4 processes it, it doesn't do anything
 # because those macros already exist, or will be overwritten later.
-# We use AC_DEFUN over AU_DEFUN for compatibility with aclocal-1.6. 
+# We use AC_DEFUN over AU_DEFUN for compatibility with aclocal-1.6.
 #
 # Anytime we withdraw an AC_DEFUN or AU_DEFUN, remember to add it here.
 # Yes, that means every name once taken will need to remain here until
@@ -8622,7 +9049,7 @@ m4_ifndef([_LT_PROG_F77],		[AC_DEFUN([_LT_PROG_F77])])
 m4_ifndef([_LT_PROG_FC],		[AC_DEFUN([_LT_PROG_FC])])
 m4_ifndef([_LT_PROG_CXX],		[AC_DEFUN([_LT_PROG_CXX])])
 
-# Copyright (C) 2002-2013 Free Software Foundation, Inc.
+# Copyright (C) 2002-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -8634,10 +9061,10 @@ m4_ifndef([_LT_PROG_CXX],		[AC_DEFUN([_LT_PROG_CXX])])
 # generated from the m4 files accompanying Automake X.Y.
 # (This private macro should not be called outside this file.)
 AC_DEFUN([AM_AUTOMAKE_VERSION],
-[am__api_version='1.14'
+[am__api_version='1.15'
 dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
 dnl require some minimum version.  Point them to the right macro.
-m4_if([$1], [1.14.1], [],
+m4_if([$1], [1.15], [],
       [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
 ])
 
@@ -8653,14 +9080,14 @@ m4_define([_AM_AUTOCONF_VERSION], [])
 # Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.
 # This function is AC_REQUIREd by AM_INIT_AUTOMAKE.
 AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
-[AM_AUTOMAKE_VERSION([1.14.1])dnl
+[AM_AUTOMAKE_VERSION([1.15])dnl
 m4_ifndef([AC_AUTOCONF_VERSION],
   [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
 _AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
 
 # AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -8712,7 +9139,7 @@ am_aux_dir=`cd "$ac_aux_dir" && pwd`
 
 # AM_CONDITIONAL                                            -*- Autoconf -*-
 
-# Copyright (C) 1997-2013 Free Software Foundation, Inc.
+# Copyright (C) 1997-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -8743,7 +9170,7 @@ AC_CONFIG_COMMANDS_PRE(
 Usually this means the macro was only invoked conditionally.]])
 fi])])
 
-# Copyright (C) 1999-2013 Free Software Foundation, Inc.
+# Copyright (C) 1999-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -8934,7 +9361,7 @@ _AM_SUBST_NOTMAKE([am__nodep])dnl
 
 # Generate code to set up dependency tracking.              -*- Autoconf -*-
 
-# Copyright (C) 1999-2013 Free Software Foundation, Inc.
+# Copyright (C) 1999-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9010,7 +9437,7 @@ AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],
 
 # Do all the work for Automake.                             -*- Autoconf -*-
 
-# Copyright (C) 1996-2013 Free Software Foundation, Inc.
+# Copyright (C) 1996-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9100,8 +9527,8 @@ AC_REQUIRE([AC_PROG_MKDIR_P])dnl
 # <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
 # <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
 AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
-# We need awk for the "check" target.  The system "awk" is bad on
-# some platforms.
+# We need awk for the "check" target (and possibly the TAP driver).  The
+# system "awk" is bad on some platforms.
 AC_REQUIRE([AC_PROG_AWK])dnl
 AC_REQUIRE([AC_PROG_MAKE_SET])dnl
 AC_REQUIRE([AM_SET_LEADING_DOT])dnl
@@ -9175,6 +9602,9 @@ END
     AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
   fi
 fi
+dnl The trailing newline in this macro's definition is deliberate, for
+dnl backward compatibility and to allow trailing 'dnl'-style comments
+dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
 ])
 
 dnl Hook into '_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not
@@ -9204,7 +9634,7 @@ for _am_header in $config_headers :; do
 done
 echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9215,7 +9645,7 @@ echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_co
 # Define $install_sh.
 AC_DEFUN([AM_PROG_INSTALL_SH],
 [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
-if test x"${install_sh}" != xset; then
+if test x"${install_sh+set}" != xset; then
   case $am_aux_dir in
   *\ * | *\	*)
     install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
@@ -9225,7 +9655,7 @@ if test x"${install_sh}" != xset; then
 fi
 AC_SUBST([install_sh])])
 
-# Copyright (C) 2003-2013 Free Software Foundation, Inc.
+# Copyright (C) 2003-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9247,7 +9677,7 @@ AC_SUBST([am__leading_dot])])
 # Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-
 # From Jim Meyering
 
-# Copyright (C) 1996-2013 Free Software Foundation, Inc.
+# Copyright (C) 1996-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9282,7 +9712,7 @@ AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
 
 # Check to see how 'make' treats includes.	            -*- Autoconf -*-
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9332,7 +9762,7 @@ rm -f confinc confmf
 
 # Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
 
-# Copyright (C) 1997-2013 Free Software Foundation, Inc.
+# Copyright (C) 1997-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9371,7 +9801,7 @@ fi
 
 # Helper functions for option handling.                     -*- Autoconf -*-
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9400,7 +9830,7 @@ AC_DEFUN([_AM_SET_OPTIONS],
 AC_DEFUN([_AM_IF_OPTION],
 [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
 
-# Copyright (C) 1999-2013 Free Software Foundation, Inc.
+# Copyright (C) 1999-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9447,7 +9877,7 @@ AC_LANG_POP([C])])
 # For backward compatibility.
 AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9466,7 +9896,7 @@ AC_DEFUN([AM_RUN_LOG],
 
 # Check to make sure that the build environment is sane.    -*- Autoconf -*-
 
-# Copyright (C) 1996-2013 Free Software Foundation, Inc.
+# Copyright (C) 1996-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9547,7 +9977,7 @@ AC_CONFIG_COMMANDS_PRE(
 rm -f conftest.file
 ])
 
-# Copyright (C) 2009-2013 Free Software Foundation, Inc.
+# Copyright (C) 2009-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9607,7 +10037,7 @@ AC_SUBST([AM_BACKSLASH])dnl
 _AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
 ])
 
-# Copyright (C) 2001-2013 Free Software Foundation, Inc.
+# Copyright (C) 2001-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9635,7 +10065,7 @@ fi
 INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
 AC_SUBST([INSTALL_STRIP_PROGRAM])])
 
-# Copyright (C) 2006-2013 Free Software Foundation, Inc.
+# Copyright (C) 2006-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -9654,7 +10084,7 @@ AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
 
 # Check how to create a tarball.                            -*- Autoconf -*-
 
-# Copyright (C) 2004-2013 Free Software Foundation, Inc.
+# Copyright (C) 2004-2014 Free Software Foundation, Inc.
 #
 # This file is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
diff --git a/ev++.h b/ev++.h
index 4f0a36a..e202adc 100644
--- a/ev++.h
+++ b/ev++.h
@@ -40,17 +40,17 @@
 #ifndef EVPP_H__
 #define EVPP_H__
 
-#ifdef EV_H
-# include EV_H
+#ifdef LIBEV_H
+# include LIBEV_H
 #else
 # include "ev.h"
 #endif
 
-#ifndef EV_USE_STDEXCEPT
-# define EV_USE_STDEXCEPT 1
+#ifndef LIBEV_USE_STDEXCEPT
+# define LIBEV_USE_STDEXCEPT 1
 #endif
 
-#if EV_USE_STDEXCEPT
+#if LIBEV_USE_STDEXCEPT
 # include <stdexcept>
 #endif
 
@@ -59,100 +59,100 @@ namespace ev {
   typedef ev_tstamp tstamp;
 
   enum {
-    UNDEF    = EV_UNDEF,
-    NONE     = EV_NONE,
-    READ     = EV_READ,
-    WRITE    = EV_WRITE,
-#if EV_COMPAT3
-    TIMEOUT  = EV_TIMEOUT,
+    UNDEF    = LIBEV_UNDEF,
+    NONE     = LIBEV_NONE,
+    READ     = LIBEV_READ,
+    WRITE    = LIBEV_WRITE,
+#if LIBEV_COMPAT3
+    TIMEOUT  = LIBEV_TIMEOUT,
 #endif
-    TIMER    = EV_TIMER,
-    PERIODIC = EV_PERIODIC,
-    SIGNAL   = EV_SIGNAL,
-    CHILD    = EV_CHILD,
-    STAT     = EV_STAT,
-    IDLE     = EV_IDLE,
-    CHECK    = EV_CHECK,
-    PREPARE  = EV_PREPARE,
-    FORK     = EV_FORK,
-    ASYNC    = EV_ASYNC,
-    EMBED    = EV_EMBED,
+    TIMER    = LIBEV_TIMER,
+    PERIODIC = LIBEV_PERIODIC,
+    SIGNAL   = LIBEV_SIGNAL,
+    CHILD    = LIBEV_CHILD,
+    STAT     = LIBEV_STAT,
+    IDLE     = LIBEV_IDLE,
+    CHECK    = LIBEV_CHECK,
+    PREPARE  = LIBEV_PREPARE,
+    FORK     = LIBEV_FORK,
+    ASYNC    = LIBEV_ASYNC,
+    EMBED    = LIBEV_EMBED,
 #   undef ERROR // some systems stupidly #define ERROR
-    ERROR    = EV_ERROR
+    ERROR    = LIBEV_ERROR
   };
 
   enum
   {
-    AUTO      = EVFLAG_AUTO,
-    NOENV     = EVFLAG_NOENV,
-    FORKCHECK = EVFLAG_FORKCHECK,
-
-    SELECT    = EVBACKEND_SELECT,
-    POLL      = EVBACKEND_POLL,
-    EPOLL     = EVBACKEND_EPOLL,
-    KQUEUE    = EVBACKEND_KQUEUE,
-    DEVPOLL   = EVBACKEND_DEVPOLL,
-    PORT      = EVBACKEND_PORT
+    AUTO      = LIBEVFLAG_AUTO,
+    NOENV     = LIBEVFLAG_NOENV,
+    FORKCHECK = LIBEVFLAG_FORKCHECK,
+
+    SELECT    = LIBEVBACKEND_SELECT,
+    POLL      = LIBEVBACKEND_POLL,
+    EPOLL     = LIBEVBACKEND_EPOLL,
+    KQUEUE    = LIBEVBACKEND_KQUEUE,
+    DEVPOLL   = LIBEVBACKEND_DEVPOLL,
+    PORT      = LIBEVBACKEND_PORT
   };
 
   enum
   {
-#if EV_COMPAT3
-    NONBLOCK = EVLOOP_NONBLOCK,
-    ONESHOT  = EVLOOP_ONESHOT,
+#if LIBEV_COMPAT3
+    NONBLOCK = LIBEVLOOP_NONBLOCK,
+    ONESHOT  = LIBEVLOOP_ONESHOT,
 #endif
-    NOWAIT   = EVRUN_NOWAIT,
-    ONCE     = EVRUN_ONCE
+    NOWAIT   = LIBEVRUN_NOWAIT,
+    ONCE     = LIBEVRUN_ONCE
   };
 
   enum how_t
   {
-    ONE = EVBREAK_ONE,
-    ALL = EVBREAK_ALL
+    ONE = LIBEVBREAK_ONE,
+    ALL = LIBEVBREAK_ALL
   };
 
   struct bad_loop
-#if EV_USE_STDEXCEPT
+#if LIBEV_USE_STDEXCEPT
   : std::runtime_error
 #endif
   {
-#if EV_USE_STDEXCEPT
+#if LIBEV_USE_STDEXCEPT
     bad_loop ()
-    : std::runtime_error ("libev event loop cannot be initialized, bad value of LIBEV_FLAGS?")
+    : std::runtime_error ("libev event loop cannot be initialized, bad value of LIBLIBEV_FLAGS?")
     {
     }
 #endif
   };
 
-#ifdef EV_AX
-#  undef EV_AX
+#ifdef LIBEV_AX
+#  undef LIBEV_AX
 #endif
 
-#ifdef EV_AX_
-#  undef EV_AX_
+#ifdef LIBEV_AX_
+#  undef LIBEV_AX_
 #endif
 
-#if EV_MULTIPLICITY
-#  define EV_AX  raw_loop
-#  define EV_AX_ raw_loop,
+#if LIBEV_MULTIPLICITY
+#  define LIBEV_AX  raw_loop
+#  define LIBEV_AX_ raw_loop,
 #else
-#  define EV_AX
-#  define EV_AX_
+#  define LIBEV_AX
+#  define LIBEV_AX_
 #endif
 
   struct loop_ref
   {
-    loop_ref (EV_P) throw ()
-#if EV_MULTIPLICITY
-    : EV_AX (EV_A)
+    loop_ref (LIBEV_P) throw ()
+#if LIBEV_MULTIPLICITY
+    : LIBEV_AX (LIBEV_A)
 #endif
     {
     }
 
     bool operator == (const loop_ref &other) const throw ()
     {
-#if EV_MULTIPLICITY
-      return EV_AX == other.EV_AX;
+#if LIBEV_MULTIPLICITY
+      return LIBEV_AX == other.LIBEV_AX;
 #else
       return true;
 #endif
@@ -160,113 +160,113 @@ namespace ev {
 
     bool operator != (const loop_ref &other) const throw ()
     {
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
       return ! (*this == other);
 #else
       return false;
 #endif
     }
 
-#if EV_MULTIPLICITY
-    bool operator == (const EV_P) const throw ()
+#if LIBEV_MULTIPLICITY
+    bool operator == (const LIBEV_P) const throw ()
     {
-      return this->EV_AX == EV_A;
+      return this->LIBEV_AX == LIBEV_A;
     }
 
-    bool operator != (const EV_P) const throw ()
+    bool operator != (const LIBEV_P) const throw ()
     {
-      return (*this == EV_A);
+      return (*this == LIBEV_A);
     }
 
     operator struct ev_loop * () const throw ()
     {
-      return EV_AX;
+      return LIBEV_AX;
     }
 
     operator const struct ev_loop * () const throw ()
     {
-      return EV_AX;
+      return LIBEV_AX;
     }
 
     bool is_default () const throw ()
     {
-      return EV_AX == ev_default_loop (0);
+      return LIBEV_AX == ev_default_loop (0);
     }
 #endif
 
-#if EV_COMPAT3
+#if LIBEV_COMPAT3
     void loop (int flags = 0)
     {
-      ev_run (EV_AX_ flags);
+      ev_run (LIBEV_AX_ flags);
     }
 
     void unloop (how_t how = ONE) throw ()
     {
-      ev_break (EV_AX_ how);
+      ev_break (LIBEV_AX_ how);
     }
 #endif
 
     void run (int flags = 0)
     {
-      ev_run (EV_AX_ flags);
+      ev_run (LIBEV_AX_ flags);
     }
 
     void break_loop (how_t how = ONE) throw ()
     {
-      ev_break (EV_AX_ how);
+      ev_break (LIBEV_AX_ how);
     }
 
     void post_fork () throw ()
     {
-      ev_loop_fork (EV_AX);
+      ev_loop_fork (LIBEV_AX);
     }
 
     unsigned int backend () const throw ()
     {
-      return ev_backend (EV_AX);
+      return ev_backend (LIBEV_AX);
     }
 
     tstamp now () const throw ()
     {
-      return ev_now (EV_AX);
+      return ev_now (LIBEV_AX);
     }
 
     void ref () throw ()
     {
-      ev_ref (EV_AX);
+      ev_ref (LIBEV_AX);
     }
 
     void unref () throw ()
     {
-      ev_unref (EV_AX);
+      ev_unref (LIBEV_AX);
     }
 
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
     unsigned int iteration () const throw ()
     {
-      return ev_iteration (EV_AX);
+      return ev_iteration (LIBEV_AX);
     }
 
     unsigned int depth () const throw ()
     {
-      return ev_depth (EV_AX);
+      return ev_depth (LIBEV_AX);
     }
 
     void set_io_collect_interval (tstamp interval) throw ()
     {
-      ev_set_io_collect_interval (EV_AX_ interval);
+      ev_set_io_collect_interval (LIBEV_AX_ interval);
     }
 
     void set_timeout_collect_interval (tstamp interval) throw ()
     {
-      ev_set_timeout_collect_interval (EV_AX_ interval);
+      ev_set_timeout_collect_interval (LIBEV_AX_ interval);
     }
 #endif
 
     // function callback
     void once (int fd, int events, tstamp timeout, void (*cb)(int, void *), void *arg = 0) throw ()
     {
-      ev_once (EV_AX_ fd, events, timeout, cb, arg);
+      ev_once (LIBEV_AX_ fd, events, timeout, cb, arg);
     }
 
     // method callback
@@ -334,35 +334,35 @@ namespace ev {
 
     void feed_fd_event (int fd, int revents) throw ()
     {
-      ev_feed_fd_event (EV_AX_ fd, revents);
+      ev_feed_fd_event (LIBEV_AX_ fd, revents);
     }
 
     void feed_signal_event (int signum) throw ()
     {
-      ev_feed_signal_event (EV_AX_ signum);
+      ev_feed_signal_event (LIBEV_AX_ signum);
     }
 
-#if EV_MULTIPLICITY
-    struct ev_loop* EV_AX;
+#if LIBEV_MULTIPLICITY
+    struct ev_loop* LIBEV_AX;
 #endif
 
   };
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   struct dynamic_loop : loop_ref
   {
 
     dynamic_loop (unsigned int flags = AUTO) throw (bad_loop)
     : loop_ref (ev_loop_new (flags))
     {
-      if (!EV_AX)
+      if (!LIBEV_AX)
         throw bad_loop ();
     }
 
     ~dynamic_loop () throw ()
     {
-      ev_loop_destroy (EV_AX);
-      EV_AX = 0;
+      ev_loop_destroy (LIBEV_AX);
+      LIBEV_AX = 0;
     }
 
   private:
@@ -377,13 +377,13 @@ namespace ev {
   struct default_loop : loop_ref
   {
     default_loop (unsigned int flags = AUTO) throw (bad_loop)
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
     : loop_ref (ev_default_loop (flags))
 #endif
     {
       if (
-#if EV_MULTIPLICITY
-          !EV_AX
+#if LIBEV_MULTIPLICITY
+          !LIBEV_AX
 #else
           !ev_default_loop (flags)
 #endif
@@ -398,48 +398,48 @@ namespace ev {
 
   inline loop_ref get_default_loop () throw ()
   {
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
     return ev_default_loop (0);
 #else
     return loop_ref ();
 #endif
   }
 
-#undef EV_AX
-#undef EV_AX_
+#undef LIBEV_AX
+#undef LIBEV_AX_
 
-#undef EV_PX
-#undef EV_PX_
-#if EV_MULTIPLICITY
-#  define EV_PX  loop_ref EV_A
-#  define EV_PX_ loop_ref EV_A_
+#undef LIBEV_PX
+#undef LIBEV_PX_
+#if LIBEV_MULTIPLICITY
+#  define LIBEV_PX  loop_ref LIBEV_A
+#  define LIBEV_PX_ loop_ref LIBEV_A_
 #else
-#  define EV_PX
-#  define EV_PX_
+#  define LIBEV_PX
+#  define LIBEV_PX_
 #endif
 
   template<class ev_watcher, class watcher>
   struct base : ev_watcher
   {
-    #if EV_MULTIPLICITY
-      EV_PX;
+    #if LIBEV_MULTIPLICITY
+      LIBEV_PX;
 
       // loop set
-      void set (EV_P) throw ()
+      void set (LIBEV_P) throw ()
       {
-        this->EV_A = EV_A;
+        this->LIBEV_A = LIBEV_A;
       }
     #endif
 
-    base (EV_PX) throw ()
-    #if EV_MULTIPLICITY
-      : EV_A (EV_A)
+    base (LIBEV_PX) throw ()
+    #if LIBEV_MULTIPLICITY
+      : LIBEV_A (LIBEV_A)
     #endif
     {
       ev_init (this, 0);
     }
 
-    void set_ (const void *data, void (*cb)(EV_P_ ev_watcher *w, int revents)) throw ()
+    void set_ (const void *data, void (*cb)(LIBEV_P_ ev_watcher *w, int revents)) throw ()
     {
       this->data = (void *)data;
       ev_set_cb (static_cast<ev_watcher *>(this), cb);
@@ -453,7 +453,7 @@ namespace ev {
     }
 
     template<void (*function)(watcher &w, int)>
-    static void function_thunk (EV_P_ ev_watcher *w, int revents)
+    static void function_thunk (LIBEV_P_ ev_watcher *w, int revents)
     {
       function
         (*static_cast<watcher *>(w), revents);
@@ -474,7 +474,7 @@ namespace ev {
     }
 
     template<class K, void (K::*method)(watcher &w, int)>
-    static void method_thunk (EV_P_ ev_watcher *w, int revents)
+    static void method_thunk (LIBEV_P_ ev_watcher *w, int revents)
     {
       (static_cast<K *>(w->data)->*method)
         (*static_cast<watcher *>(w), revents);
@@ -488,13 +488,13 @@ namespace ev {
     }
 
     template<class K, void (K::*method)()>
-    static void method_noargs_thunk (EV_P_ ev_watcher *w, int revents)
+    static void method_noargs_thunk (LIBEV_P_ ev_watcher *w, int revents)
     {
       (static_cast<K *>(w->data)->*method)
         ();
     }
 
-    void operator ()(int events = EV_UNDEF)
+    void operator ()(int events = LIBEV_UNDEF)
     {
       return
         ev_cb (static_cast<ev_watcher *>(this))
@@ -513,13 +513,13 @@ namespace ev {
 
     void feed_event (int revents) throw ()
     {
-      ev_feed_event (EV_A_ static_cast<ev_watcher *>(this), revents);
+      ev_feed_event (LIBEV_A_ static_cast<ev_watcher *>(this), revents);
     }
   };
 
-  inline tstamp now (EV_P) throw ()
+  inline tstamp now (LIBEV_P) throw ()
   {
-    return ev_now (EV_A);
+    return ev_now (LIBEV_A);
   }
 
   inline void delay (tstamp interval) throw ()
@@ -562,14 +562,14 @@ namespace ev {
     ev_set_syserr_cb (cb);
   }
 
-  #if EV_MULTIPLICITY
-    #define EV_CONSTRUCT(cppstem,cstem)	                                                \
-      (EV_PX = get_default_loop ()) throw ()                                            \
-        : base<ev_ ## cstem, cppstem> (EV_A)                                            \
+  #if LIBEV_MULTIPLICITY
+    #define LIBEV_CONSTRUCT(cppstem,cstem)	                                                \
+      (LIBEV_PX = get_default_loop ()) throw ()                                            \
+        : base<ev_ ## cstem, cppstem> (LIBEV_A)                                            \
       {                                                                                 \
       }
   #else
-    #define EV_CONSTRUCT(cppstem,cstem)                                                 \
+    #define LIBEV_CONSTRUCT(cppstem,cstem)                                                 \
       () throw ()                                                                       \
       {                                                                                 \
       }
@@ -577,21 +577,21 @@ namespace ev {
 
   /* using a template here would require quite a few more lines,
    * so a macro solution was chosen */
-  #define EV_BEGIN_WATCHER(cppstem,cstem)	                                        \
+  #define LIBEV_BEGIN_WATCHER(cppstem,cstem)	                                        \
                                                                                         \
   struct cppstem : base<ev_ ## cstem, cppstem>                                          \
   {                                                                                     \
     void start () throw ()                                                              \
     {                                                                                   \
-      ev_ ## cstem ## _start (EV_A_ static_cast<ev_ ## cstem *>(this));                 \
+      ev_ ## cstem ## _start (LIBEV_A_ static_cast<ev_ ## cstem *>(this));                 \
     }                                                                                   \
                                                                                         \
     void stop () throw ()                                                               \
     {                                                                                   \
-      ev_ ## cstem ## _stop (EV_A_ static_cast<ev_ ## cstem *>(this));                  \
+      ev_ ## cstem ## _stop (LIBEV_A_ static_cast<ev_ ## cstem *>(this));                  \
     }                                                                                   \
                                                                                         \
-    cppstem EV_CONSTRUCT(cppstem,cstem)                                                 \
+    cppstem LIBEV_CONSTRUCT(cppstem,cstem)                                                 \
                                                                                         \
     ~cppstem () throw ()                                                                \
     {                                                                                   \
@@ -608,10 +608,10 @@ namespace ev {
                                                                                         \
   public:
 
-  #define EV_END_WATCHER(cppstem,cstem)	                                                \
+  #define LIBEV_END_WATCHER(cppstem,cstem)	                                                \
   };
 
-  EV_BEGIN_WATCHER (io, io)
+  LIBEV_BEGIN_WATCHER (io, io)
     void set (int fd, int events) throw ()
     {
       int active = is_active ();
@@ -633,9 +633,9 @@ namespace ev {
       set (fd, events);
       start ();
     }
-  EV_END_WATCHER (io, io)
+  LIBEV_END_WATCHER (io, io)
 
-  EV_BEGIN_WATCHER (timer, timer)
+  LIBEV_BEGIN_WATCHER (timer, timer)
     void set (ev_tstamp after, ev_tstamp repeat = 0.) throw ()
     {
       int active = is_active ();
@@ -652,17 +652,17 @@ namespace ev {
 
     void again () throw ()
     {
-      ev_timer_again (EV_A_ static_cast<ev_timer *>(this));
+      ev_timer_again (LIBEV_A_ static_cast<ev_timer *>(this));
     }
 
     ev_tstamp remaining ()
     {
-      return ev_timer_remaining (EV_A_ static_cast<ev_timer *>(this));
+      return ev_timer_remaining (LIBEV_A_ static_cast<ev_timer *>(this));
     }
-  EV_END_WATCHER (timer, timer)
+  LIBEV_END_WATCHER (timer, timer)
 
-  #if EV_PERIODIC_ENABLE
-  EV_BEGIN_WATCHER (periodic, periodic)
+  #if LIBEV_PERIODIC_ENABLE
+  LIBEV_BEGIN_WATCHER (periodic, periodic)
     void set (ev_tstamp at, ev_tstamp interval = 0.) throw ()
     {
       int active = is_active ();
@@ -679,13 +679,13 @@ namespace ev {
 
     void again () throw ()
     {
-      ev_periodic_again (EV_A_ static_cast<ev_periodic *>(this));
+      ev_periodic_again (LIBEV_A_ static_cast<ev_periodic *>(this));
     }
-  EV_END_WATCHER (periodic, periodic)
+  LIBEV_END_WATCHER (periodic, periodic)
   #endif
 
-  #if EV_SIGNAL_ENABLE
-  EV_BEGIN_WATCHER (sig, signal)
+  #if LIBEV_SIGNAL_ENABLE
+  LIBEV_BEGIN_WATCHER (sig, signal)
     void set (int signum) throw ()
     {
       int active = is_active ();
@@ -699,11 +699,11 @@ namespace ev {
       set (signum);
       start ();
     }
-  EV_END_WATCHER (sig, signal)
+  LIBEV_END_WATCHER (sig, signal)
   #endif
 
-  #if EV_CHILD_ENABLE
-  EV_BEGIN_WATCHER (child, child)
+  #if LIBEV_CHILD_ENABLE
+  LIBEV_BEGIN_WATCHER (child, child)
     void set (int pid, int trace = 0) throw ()
     {
       int active = is_active ();
@@ -717,11 +717,11 @@ namespace ev {
       set (pid, trace);
       start ();
     }
-  EV_END_WATCHER (child, child)
+  LIBEV_END_WATCHER (child, child)
   #endif
 
-  #if EV_STAT_ENABLE
-  EV_BEGIN_WATCHER (stat, stat)
+  #if LIBEV_STAT_ENABLE
+  LIBEV_BEGIN_WATCHER (stat, stat)
     void set (const char *path, ev_tstamp interval = 0.) throw ()
     {
       int active = is_active ();
@@ -739,31 +739,31 @@ namespace ev {
 
     void update () throw ()
     {
-      ev_stat_stat (EV_A_ static_cast<ev_stat *>(this));
+      ev_stat_stat (LIBEV_A_ static_cast<ev_stat *>(this));
     }
-  EV_END_WATCHER (stat, stat)
+  LIBEV_END_WATCHER (stat, stat)
   #endif
 
-  #if EV_IDLE_ENABLE
-  EV_BEGIN_WATCHER (idle, idle)
+  #if LIBEV_IDLE_ENABLE
+  LIBEV_BEGIN_WATCHER (idle, idle)
     void set () throw () { }
-  EV_END_WATCHER (idle, idle)
+  LIBEV_END_WATCHER (idle, idle)
   #endif
 
-  #if EV_PREPARE_ENABLE
-  EV_BEGIN_WATCHER (prepare, prepare)
+  #if LIBEV_PREPARE_ENABLE
+  LIBEV_BEGIN_WATCHER (prepare, prepare)
     void set () throw () { }
-  EV_END_WATCHER (prepare, prepare)
+  LIBEV_END_WATCHER (prepare, prepare)
   #endif
 
-  #if EV_CHECK_ENABLE
-  EV_BEGIN_WATCHER (check, check)
+  #if LIBEV_CHECK_ENABLE
+  LIBEV_BEGIN_WATCHER (check, check)
     void set () throw () { }
-  EV_END_WATCHER (check, check)
+  LIBEV_END_WATCHER (check, check)
   #endif
 
-  #if EV_EMBED_ENABLE
-  EV_BEGIN_WATCHER (embed, embed)
+  #if LIBEV_EMBED_ENABLE
+  LIBEV_BEGIN_WATCHER (embed, embed)
     void set_embed (struct ev_loop *embedded_loop) throw ()
     {
       int active = is_active ();
@@ -780,36 +780,36 @@ namespace ev {
 
     void sweep ()
     {
-      ev_embed_sweep (EV_A_ static_cast<ev_embed *>(this));
+      ev_embed_sweep (LIBEV_A_ static_cast<ev_embed *>(this));
     }
-  EV_END_WATCHER (embed, embed)
+  LIBEV_END_WATCHER (embed, embed)
   #endif
 
-  #if EV_FORK_ENABLE
-  EV_BEGIN_WATCHER (fork, fork)
+  #if LIBEV_FORK_ENABLE
+  LIBEV_BEGIN_WATCHER (fork, fork)
     void set () throw () { }
-  EV_END_WATCHER (fork, fork)
+  LIBEV_END_WATCHER (fork, fork)
   #endif
 
-  #if EV_ASYNC_ENABLE
-  EV_BEGIN_WATCHER (async, async)
+  #if LIBEV_ASYNC_ENABLE
+  LIBEV_BEGIN_WATCHER (async, async)
     void send () throw ()
     {
-      ev_async_send (EV_A_ static_cast<ev_async *>(this));
+      ev_async_send (LIBEV_A_ static_cast<ev_async *>(this));
     }
 
     bool async_pending () throw ()
     {
       return ev_async_pending (static_cast<ev_async *>(this));
     }
-  EV_END_WATCHER (async, async)
+  LIBEV_END_WATCHER (async, async)
   #endif
 
-  #undef EV_PX
-  #undef EV_PX_
-  #undef EV_CONSTRUCT
-  #undef EV_BEGIN_WATCHER
-  #undef EV_END_WATCHER
+  #undef LIBEV_PX
+  #undef LIBEV_PX_
+  #undef LIBEV_CONSTRUCT
+  #undef LIBEV_BEGIN_WATCHER
+  #undef LIBEV_END_WATCHER
 }
 
 #endif
diff --git a/ev.c b/ev.c
index cf55835..fb86540 100644
--- a/ev.c
+++ b/ev.c
@@ -38,128 +38,128 @@
  */
 
 /* this big block deduces configuration from config.h */
-#ifndef EV_STANDALONE
-# ifdef EV_CONFIG_H
-#  include EV_CONFIG_H
+#ifndef LIBEV_STANDALONE
+# ifdef LIBEV_CONFIG_H
+#  include LIBEV_CONFIG_H
 # else
 #  include "config.h"
 # endif
 
 # if HAVE_FLOOR
-#  ifndef EV_USE_FLOOR
-#   define EV_USE_FLOOR 1
+#  ifndef LIBEV_USE_FLOOR
+#   define LIBEV_USE_FLOOR 1
 #  endif
 # endif
 
 # if HAVE_CLOCK_SYSCALL
-#  ifndef EV_USE_CLOCK_SYSCALL
-#   define EV_USE_CLOCK_SYSCALL 1
-#   ifndef EV_USE_REALTIME
-#    define EV_USE_REALTIME  0
+#  ifndef LIBEV_USE_CLOCK_SYSCALL
+#   define LIBEV_USE_CLOCK_SYSCALL 1
+#   ifndef LIBEV_USE_REALTIME
+#    define LIBEV_USE_REALTIME  0
 #   endif
-#   ifndef EV_USE_MONOTONIC
-#    define EV_USE_MONOTONIC 1
+#   ifndef LIBEV_USE_MONOTONIC
+#    define LIBEV_USE_MONOTONIC 1
 #   endif
 #  endif
-# elif !defined EV_USE_CLOCK_SYSCALL
-#  define EV_USE_CLOCK_SYSCALL 0
+# elif !defined LIBEV_USE_CLOCK_SYSCALL
+#  define LIBEV_USE_CLOCK_SYSCALL 0
 # endif
 
 # if HAVE_CLOCK_GETTIME
-#  ifndef EV_USE_MONOTONIC
-#   define EV_USE_MONOTONIC 1
+#  ifndef LIBEV_USE_MONOTONIC
+#   define LIBEV_USE_MONOTONIC 1
 #  endif
-#  ifndef EV_USE_REALTIME
-#   define EV_USE_REALTIME  0
+#  ifndef LIBEV_USE_REALTIME
+#   define LIBEV_USE_REALTIME  0
 #  endif
 # else
-#  ifndef EV_USE_MONOTONIC
-#   define EV_USE_MONOTONIC 0
+#  ifndef LIBEV_USE_MONOTONIC
+#   define LIBEV_USE_MONOTONIC 0
 #  endif
-#  ifndef EV_USE_REALTIME
-#   define EV_USE_REALTIME  0
+#  ifndef LIBEV_USE_REALTIME
+#   define LIBEV_USE_REALTIME  0
 #  endif
 # endif
 
 # if HAVE_NANOSLEEP
-#  ifndef EV_USE_NANOSLEEP
-#    define EV_USE_NANOSLEEP EV_FEATURE_OS
+#  ifndef LIBEV_USE_NANOSLEEP
+#    define LIBEV_USE_NANOSLEEP LIBEV_FEATURE_OS
 #  endif
 # else
-#   undef EV_USE_NANOSLEEP
-#   define EV_USE_NANOSLEEP 0
+#   undef LIBEV_USE_NANOSLEEP
+#   define LIBEV_USE_NANOSLEEP 0
 # endif
 
 # if HAVE_SELECT && HAVE_SYS_SELECT_H
-#  ifndef EV_USE_SELECT
-#   define EV_USE_SELECT EV_FEATURE_BACKENDS
+#  ifndef LIBEV_USE_SELECT
+#   define LIBEV_USE_SELECT LIBEV_FEATURE_BACKENDS
 #  endif
 # else
-#  undef EV_USE_SELECT
-#  define EV_USE_SELECT 0
+#  undef LIBEV_USE_SELECT
+#  define LIBEV_USE_SELECT 0
 # endif
 
 # if HAVE_POLL && HAVE_POLL_H
-#  ifndef EV_USE_POLL
-#   define EV_USE_POLL EV_FEATURE_BACKENDS
+#  ifndef LIBEV_USE_POLL
+#   define LIBEV_USE_POLL LIBEV_FEATURE_BACKENDS
 #  endif
 # else
-#  undef EV_USE_POLL
-#  define EV_USE_POLL 0
+#  undef LIBEV_USE_POLL
+#  define LIBEV_USE_POLL 0
 # endif
    
 # if HAVE_EPOLL_CTL && HAVE_SYS_EPOLL_H
-#  ifndef EV_USE_EPOLL
-#   define EV_USE_EPOLL EV_FEATURE_BACKENDS
+#  ifndef LIBEV_USE_EPOLL
+#   define LIBEV_USE_EPOLL LIBEV_FEATURE_BACKENDS
 #  endif
 # else
-#  undef EV_USE_EPOLL
-#  define EV_USE_EPOLL 0
+#  undef LIBEV_USE_EPOLL
+#  define LIBEV_USE_EPOLL 0
 # endif
    
 # if HAVE_KQUEUE && HAVE_SYS_EVENT_H
-#  ifndef EV_USE_KQUEUE
-#   define EV_USE_KQUEUE EV_FEATURE_BACKENDS
+#  ifndef LIBEV_USE_KQUEUE
+#   define LIBEV_USE_KQUEUE LIBEV_FEATURE_BACKENDS
 #  endif
 # else
-#  undef EV_USE_KQUEUE
-#  define EV_USE_KQUEUE 0
+#  undef LIBEV_USE_KQUEUE
+#  define LIBEV_USE_KQUEUE 0
 # endif
    
 # if HAVE_PORT_H && HAVE_PORT_CREATE
-#  ifndef EV_USE_PORT
-#   define EV_USE_PORT EV_FEATURE_BACKENDS
+#  ifndef LIBEV_USE_PORT
+#   define LIBEV_USE_PORT LIBEV_FEATURE_BACKENDS
 #  endif
 # else
-#  undef EV_USE_PORT
-#  define EV_USE_PORT 0
+#  undef LIBEV_USE_PORT
+#  define LIBEV_USE_PORT 0
 # endif
 
 # if HAVE_INOTIFY_INIT && HAVE_SYS_INOTIFY_H
-#  ifndef EV_USE_INOTIFY
-#   define EV_USE_INOTIFY EV_FEATURE_OS
+#  ifndef LIBEV_USE_INOTIFY
+#   define LIBEV_USE_INOTIFY LIBEV_FEATURE_OS
 #  endif
 # else
-#  undef EV_USE_INOTIFY
-#  define EV_USE_INOTIFY 0
+#  undef LIBEV_USE_INOTIFY
+#  define LIBEV_USE_INOTIFY 0
 # endif
 
 # if HAVE_SIGNALFD && HAVE_SYS_SIGNALFD_H
-#  ifndef EV_USE_SIGNALFD
-#   define EV_USE_SIGNALFD EV_FEATURE_OS
+#  ifndef LIBEV_USE_SIGNALFD
+#   define LIBEV_USE_SIGNALFD LIBEV_FEATURE_OS
 #  endif
 # else
-#  undef EV_USE_SIGNALFD
-#  define EV_USE_SIGNALFD 0
+#  undef LIBEV_USE_SIGNALFD
+#  define LIBEV_USE_SIGNALFD 0
 # endif
 
 # if HAVE_EVENTFD
-#  ifndef EV_USE_EVENTFD
-#   define EV_USE_EVENTFD EV_FEATURE_OS
+#  ifndef LIBEV_USE_EVENTFD
+#   define LIBEV_USE_EVENTFD LIBEV_FEATURE_OS
 #  endif
 # else
-#  undef EV_USE_EVENTFD
-#  define EV_USE_EVENTFD 0
+#  undef LIBEV_USE_EVENTFD
+#  define LIBEV_USE_EVENTFD 0
 # endif
  
 #endif
@@ -179,20 +179,20 @@
 
 #include <signal.h>
 
-#ifdef EV_H
-# include EV_H
+#ifdef LIBEV_H
+# include LIBEV_H
 #else
 # include "ev.h"
 #endif
 
-#if EV_NO_THREADS
-# undef EV_NO_SMP
-# define EV_NO_SMP 1
+#if LIBEV_NO_THREADS
+# undef LIBEV_NO_SMP
+# define LIBEV_NO_SMP 1
 # undef ECB_NO_THREADS
 # define ECB_NO_THREADS 1
 #endif
-#if EV_NO_SMP
-# undef EV_NO_SMP
+#if LIBEV_NO_SMP
+# undef LIBEV_NO_SMP
 # define ECB_NO_SMP 1
 #endif
 
@@ -205,10 +205,10 @@
 # define WIN32_LEAN_AND_MEAN
 # include <winsock2.h>
 # include <windows.h>
-# ifndef EV_SELECT_IS_WINSOCKET
-#  define EV_SELECT_IS_WINSOCKET 1
+# ifndef LIBEV_SELECT_IS_WINSOCKET
+#  define LIBEV_SELECT_IS_WINSOCKET 1
 # endif
-# undef EV_AVOID_STDIO
+# undef LIBEV_AVOID_STDIO
 #endif
 
 /* OS X, in its infinite idiocy, actually HARDCODES
@@ -222,214 +222,214 @@
 /* this block tries to deduce configuration from header-defined symbols and defaults */
 
 /* try to deduce the maximum number of signals on this platform */
-#if defined EV_NSIG
+#if defined LIBEV_NSIG
 /* use what's provided */
 #elif defined NSIG
-# define EV_NSIG (NSIG)
+# define LIBEV_NSIG (NSIG)
 #elif defined _NSIG
-# define EV_NSIG (_NSIG)
+# define LIBEV_NSIG (_NSIG)
 #elif defined SIGMAX
-# define EV_NSIG (SIGMAX+1)
+# define LIBEV_NSIG (SIGMAX+1)
 #elif defined SIG_MAX
-# define EV_NSIG (SIG_MAX+1)
+# define LIBEV_NSIG (SIG_MAX+1)
 #elif defined _SIG_MAX
-# define EV_NSIG (_SIG_MAX+1)
+# define LIBEV_NSIG (_SIG_MAX+1)
 #elif defined MAXSIG
-# define EV_NSIG (MAXSIG+1)
+# define LIBEV_NSIG (MAXSIG+1)
 #elif defined MAX_SIG
-# define EV_NSIG (MAX_SIG+1)
+# define LIBEV_NSIG (MAX_SIG+1)
 #elif defined SIGARRAYSIZE
-# define EV_NSIG (SIGARRAYSIZE) /* Assume ary[SIGARRAYSIZE] */
+# define LIBEV_NSIG (SIGARRAYSIZE) /* Assume ary[SIGARRAYSIZE] */
 #elif defined _sys_nsig
-# define EV_NSIG (_sys_nsig) /* Solaris 2.5 */
+# define LIBEV_NSIG (_sys_nsig) /* Solaris 2.5 */
 #else
-# define EV_NSIG (8 * sizeof (sigset_t) + 1)
+# define LIBEV_NSIG (8 * sizeof (sigset_t) + 1)
 #endif
 
-#ifndef EV_USE_FLOOR
-# define EV_USE_FLOOR 0
+#ifndef LIBEV_USE_FLOOR
+# define LIBEV_USE_FLOOR 0
 #endif
 
-#ifndef EV_USE_CLOCK_SYSCALL
+#ifndef LIBEV_USE_CLOCK_SYSCALL
 # if __linux && __GLIBC__ == 2 && __GLIBC_MINOR__ < 17
-#  define EV_USE_CLOCK_SYSCALL EV_FEATURE_OS
+#  define LIBEV_USE_CLOCK_SYSCALL LIBEV_FEATURE_OS
 # else
-#  define EV_USE_CLOCK_SYSCALL 0
+#  define LIBEV_USE_CLOCK_SYSCALL 0
 # endif
 #endif
 
 #if !(_POSIX_TIMERS > 0)
-# ifndef EV_USE_MONOTONIC
-#  define EV_USE_MONOTONIC 0
+# ifndef LIBEV_USE_MONOTONIC
+#  define LIBEV_USE_MONOTONIC 0
 # endif
-# ifndef EV_USE_REALTIME
-#  define EV_USE_REALTIME 0
+# ifndef LIBEV_USE_REALTIME
+#  define LIBEV_USE_REALTIME 0
 # endif
 #endif
 
-#ifndef EV_USE_MONOTONIC
+#ifndef LIBEV_USE_MONOTONIC
 # if defined _POSIX_MONOTONIC_CLOCK && _POSIX_MONOTONIC_CLOCK >= 0
-#  define EV_USE_MONOTONIC EV_FEATURE_OS
+#  define LIBEV_USE_MONOTONIC LIBEV_FEATURE_OS
 # else
-#  define EV_USE_MONOTONIC 0
+#  define LIBEV_USE_MONOTONIC 0
 # endif
 #endif
 
-#ifndef EV_USE_REALTIME
-# define EV_USE_REALTIME !EV_USE_CLOCK_SYSCALL
+#ifndef LIBEV_USE_REALTIME
+# define LIBEV_USE_REALTIME !LIBEV_USE_CLOCK_SYSCALL
 #endif
 
-#ifndef EV_USE_NANOSLEEP
+#ifndef LIBEV_USE_NANOSLEEP
 # if _POSIX_C_SOURCE >= 199309L
-#  define EV_USE_NANOSLEEP EV_FEATURE_OS
+#  define LIBEV_USE_NANOSLEEP LIBEV_FEATURE_OS
 # else
-#  define EV_USE_NANOSLEEP 0
+#  define LIBEV_USE_NANOSLEEP 0
 # endif
 #endif
 
-#ifndef EV_USE_SELECT
-# define EV_USE_SELECT EV_FEATURE_BACKENDS
+#ifndef LIBEV_USE_SELECT
+# define LIBEV_USE_SELECT LIBEV_FEATURE_BACKENDS
 #endif
 
-#ifndef EV_USE_POLL
+#ifndef LIBEV_USE_POLL
 # ifdef _WIN32
-#  define EV_USE_POLL 0
+#  define LIBEV_USE_POLL 0
 # else
-#  define EV_USE_POLL EV_FEATURE_BACKENDS
+#  define LIBEV_USE_POLL LIBEV_FEATURE_BACKENDS
 # endif
 #endif
 
-#ifndef EV_USE_EPOLL
+#ifndef LIBEV_USE_EPOLL
 # if __linux && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 4))
-#  define EV_USE_EPOLL EV_FEATURE_BACKENDS
+#  define LIBEV_USE_EPOLL LIBEV_FEATURE_BACKENDS
 # else
-#  define EV_USE_EPOLL 0
+#  define LIBEV_USE_EPOLL 0
 # endif
 #endif
 
-#ifndef EV_USE_KQUEUE
-# define EV_USE_KQUEUE 0
+#ifndef LIBEV_USE_KQUEUE
+# define LIBEV_USE_KQUEUE 0
 #endif
 
-#ifndef EV_USE_PORT
-# define EV_USE_PORT 0
+#ifndef LIBEV_USE_PORT
+# define LIBEV_USE_PORT 0
 #endif
 
-#ifndef EV_USE_INOTIFY
+#ifndef LIBEV_USE_INOTIFY
 # if __linux && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 4))
-#  define EV_USE_INOTIFY EV_FEATURE_OS
+#  define LIBEV_USE_INOTIFY LIBEV_FEATURE_OS
 # else
-#  define EV_USE_INOTIFY 0
+#  define LIBEV_USE_INOTIFY 0
 # endif
 #endif
 
-#ifndef EV_PID_HASHSIZE
-# define EV_PID_HASHSIZE EV_FEATURE_DATA ? 16 : 1
+#ifndef LIBEV_PID_HASHSIZE
+# define LIBEV_PID_HASHSIZE LIBEV_FEATURE_DATA ? 16 : 1
 #endif
 
-#ifndef EV_INOTIFY_HASHSIZE
-# define EV_INOTIFY_HASHSIZE EV_FEATURE_DATA ? 16 : 1
+#ifndef LIBEV_INOTIFY_HASHSIZE
+# define LIBEV_INOTIFY_HASHSIZE LIBEV_FEATURE_DATA ? 16 : 1
 #endif
 
-#ifndef EV_USE_EVENTFD
+#ifndef LIBEV_USE_EVENTFD
 # if __linux && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 7))
-#  define EV_USE_EVENTFD EV_FEATURE_OS
+#  define LIBEV_USE_EVENTFD LIBEV_FEATURE_OS
 # else
-#  define EV_USE_EVENTFD 0
+#  define LIBEV_USE_EVENTFD 0
 # endif
 #endif
 
-#ifndef EV_USE_SIGNALFD
+#ifndef LIBEV_USE_SIGNALFD
 # if __linux && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 7))
-#  define EV_USE_SIGNALFD EV_FEATURE_OS
+#  define LIBEV_USE_SIGNALFD LIBEV_FEATURE_OS
 # else
-#  define EV_USE_SIGNALFD 0
+#  define LIBEV_USE_SIGNALFD 0
 # endif
 #endif
 
 #if 0 /* debugging */
-# define EV_VERIFY 3
-# define EV_USE_4HEAP 1
-# define EV_HEAP_CACHE_AT 1
+# define LIBEV_VERIFY 3
+# define LIBEV_USE_4HEAP 1
+# define LIBEV_HEAP_CACHE_AT 1
 #endif
 
-#ifndef EV_VERIFY
-# define EV_VERIFY (EV_FEATURE_API ? 1 : 0)
+#ifndef LIBEV_VERIFY
+# define LIBEV_VERIFY (LIBEV_FEATURE_API ? 1 : 0)
 #endif
 
-#ifndef EV_USE_4HEAP
-# define EV_USE_4HEAP EV_FEATURE_DATA
+#ifndef LIBEV_USE_4HEAP
+# define LIBEV_USE_4HEAP LIBEV_FEATURE_DATA
 #endif
 
-#ifndef EV_HEAP_CACHE_AT
-# define EV_HEAP_CACHE_AT EV_FEATURE_DATA
+#ifndef LIBEV_HEAP_CACHE_AT
+# define LIBEV_HEAP_CACHE_AT LIBEV_FEATURE_DATA
 #endif
 
 #ifdef ANDROID
 /* supposedly, android doesn't typedef fd_mask */
-# undef EV_USE_SELECT
-# define EV_USE_SELECT 0
+# undef LIBEV_USE_SELECT
+# define LIBEV_USE_SELECT 0
 /* supposedly, we need to include syscall.h, not sys/syscall.h, so just disable */
-# undef EV_USE_CLOCK_SYSCALL
-# define EV_USE_CLOCK_SYSCALL 0
+# undef LIBEV_USE_CLOCK_SYSCALL
+# define LIBEV_USE_CLOCK_SYSCALL 0
 #endif
 
 /* aix's poll.h seems to cause lots of trouble */
 #ifdef _AIX
 /* AIX has a completely broken poll.h header */
-# undef EV_USE_POLL
-# define EV_USE_POLL 0
+# undef LIBEV_USE_POLL
+# define LIBEV_USE_POLL 0
 #endif
 
 /* on linux, we can use a (slow) syscall to avoid a dependency on pthread, */
 /* which makes programs even slower. might work on other unices, too. */
-#if EV_USE_CLOCK_SYSCALL
+#if LIBEV_USE_CLOCK_SYSCALL
 # include <sys/syscall.h>
 # ifdef SYS_clock_gettime
 #  define clock_gettime(id, ts) syscall (SYS_clock_gettime, (id), (ts))
-#  undef EV_USE_MONOTONIC
-#  define EV_USE_MONOTONIC 1
+#  undef LIBEV_USE_MONOTONIC
+#  define LIBEV_USE_MONOTONIC 1
 # else
-#  undef EV_USE_CLOCK_SYSCALL
-#  define EV_USE_CLOCK_SYSCALL 0
+#  undef LIBEV_USE_CLOCK_SYSCALL
+#  define LIBEV_USE_CLOCK_SYSCALL 0
 # endif
 #endif
 
 /* this block fixes any misconfiguration where we know we run into trouble otherwise */
 
 #ifndef CLOCK_MONOTONIC
-# undef EV_USE_MONOTONIC
-# define EV_USE_MONOTONIC 0
+# undef LIBEV_USE_MONOTONIC
+# define LIBEV_USE_MONOTONIC 0
 #endif
 
 #ifndef CLOCK_REALTIME
-# undef EV_USE_REALTIME
-# define EV_USE_REALTIME 0
+# undef LIBEV_USE_REALTIME
+# define LIBEV_USE_REALTIME 0
 #endif
 
-#if !EV_STAT_ENABLE
-# undef EV_USE_INOTIFY
-# define EV_USE_INOTIFY 0
+#if !LIBEV_STAT_ENABLE
+# undef LIBEV_USE_INOTIFY
+# define LIBEV_USE_INOTIFY 0
 #endif
 
-#if !EV_USE_NANOSLEEP
+#if !LIBEV_USE_NANOSLEEP
 /* hp-ux has it in sys/time.h, which we unconditionally include above */
 # if !defined _WIN32 && !defined __hpux
 #  include <sys/select.h>
 # endif
 #endif
 
-#if EV_USE_INOTIFY
+#if LIBEV_USE_INOTIFY
 # include <sys/statfs.h>
 # include <sys/inotify.h>
 /* some very old inotify.h headers don't have IN_DONT_FOLLOW */
 # ifndef IN_DONT_FOLLOW
-#  undef EV_USE_INOTIFY
-#  define EV_USE_INOTIFY 0
+#  undef LIBEV_USE_INOTIFY
+#  define LIBEV_USE_INOTIFY 0
 # endif
 #endif
 
-#if EV_USE_EVENTFD
+#if LIBEV_USE_EVENTFD
 /* our minimum requirement is glibc 2.7 which has the stub, but not the header */
 # include <stdint.h>
 # ifndef EFD_NONBLOCK
@@ -442,10 +442,10 @@
 #   define EFD_CLOEXEC 02000000
 #  endif
 # endif
-EV_CPP(extern "C") int (eventfd) (unsigned int initval, int flags);
+LIBEV_CPP(extern "C") int (eventfd) (unsigned int initval, int flags);
 #endif
 
-#if EV_USE_SIGNALFD
+#if LIBEV_USE_SIGNALFD
 /* our minimum requirement is glibc 2.7 which has the stub, but not the header */
 # include <stdint.h>
 # ifndef SFD_NONBLOCK
@@ -458,7 +458,7 @@ EV_CPP(extern "C") int (eventfd) (unsigned int initval, int flags);
 #   define SFD_CLOEXEC 02000000
 #  endif
 # endif
-EV_CPP (extern "C") int signalfd (int fd, const sigset_t *mask, int flags);
+LIBEV_CPP (extern "C") int signalfd (int fd, const sigset_t *mask, int flags);
 
 struct signalfd_siginfo
 {
@@ -469,10 +469,10 @@ struct signalfd_siginfo
 
 /**/
 
-#if EV_VERIFY >= 3
-# define EV_FREQUENT_CHECK ev_verify (EV_A)
+#if LIBEV_VERIFY >= 3
+# define LIBEV_FREQUENT_CHECK ev_verify (LIBEV_A)
 #else
-# define EV_FREQUENT_CHECK do { } while (0)
+# define LIBEV_FREQUENT_CHECK do { } while (0)
 #endif
 
 /*
@@ -485,8 +485,8 @@ struct signalfd_siginfo
 #define MIN_TIMEJUMP  1. /* minimum timejump that gets detected (if monotonic clock available) */
 #define MAX_BLOCKTIME 59.743 /* never wait longer than this time (to detect time jumps) */
 
-#define EV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
-#define EV_TS_SET(ts,t) do { ts.tv_sec = (long)t; ts.tv_nsec = (long)((t - ts.tv_sec) * 1e9); } while (0)
+#define LIBEV_TV_SET(tv,t) do { tv.tv_sec = (long)t; tv.tv_usec = (long)((t - tv.tv_sec) * 1e6); } while (0)
+#define LIBEV_TS_SET(ts,t) do { ts.tv_sec = (long)t; ts.tv_nsec = (long)((t - ts.tv_sec) * 1e9); } while (0)
 
 /* the following is ecb.h embedded into libev - use update_ev_c to update from an external copy */
 /* ECB.H BEGIN */
@@ -1526,18 +1526,18 @@ ecb_binary32_to_binary16 (uint32_t x)
 
 #define inline_size        ecb_inline
 
-#if EV_FEATURE_CODE
+#if LIBEV_FEATURE_CODE
 # define inline_speed      ecb_inline
 #else
-# define inline_speed      static noinline
+# define inline_speed      noinline static
 #endif
 
-#define NUMPRI (EV_MAXPRI - EV_MINPRI + 1)
+#define NUMPRI (LIBEV_MAXPRI - LIBEV_MINPRI + 1)
 
-#if EV_MINPRI == EV_MAXPRI
+#if LIBEV_MINPRI == LIBEV_MAXPRI
 # define ABSPRI(w) (((W)w), 0)
 #else
-# define ABSPRI(w) (((W)w)->priority - EV_MINPRI)
+# define ABSPRI(w) (((W)w)->priority - LIBEV_MINPRI)
 #endif
 
 #define EMPTY       /* required for microsofts broken pseudo-c compiler */
@@ -1550,24 +1550,24 @@ typedef ev_watcher_time *WT;
 #define ev_active(w) ((W)(w))->active
 #define ev_at(w) ((WT)(w))->at
 
-#if EV_USE_REALTIME
+#if LIBEV_USE_REALTIME
 /* sig_atomic_t is used to avoid per-thread variables or locking but still */
 /* giving it a reasonably high chance of working on typical architectures */
-static EV_ATOMIC_T have_realtime; /* did clock_gettime (CLOCK_REALTIME) work? */
+static LIBEV_ATOMIC_T have_realtime; /* did clock_gettime (CLOCK_REALTIME) work? */
 #endif
 
-#if EV_USE_MONOTONIC
-static EV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work? */
+#if LIBEV_USE_MONOTONIC
+static LIBEV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work? */
 #endif
 
-#ifndef EV_FD_TO_WIN32_HANDLE
-# define EV_FD_TO_WIN32_HANDLE(fd) _get_osfhandle (fd)
+#ifndef LIBEV_FD_TO_WIN32_HANDLE
+# define LIBEV_FD_TO_WIN32_HANDLE(fd) _get_osfhandle (fd)
 #endif
-#ifndef EV_WIN32_HANDLE_TO_FD
-# define EV_WIN32_HANDLE_TO_FD(handle) _open_osfhandle (handle, 0)
+#ifndef LIBEV_WIN32_HANDLE_TO_FD
+# define LIBEV_WIN32_HANDLE_TO_FD(handle) _open_osfhandle (handle, 0)
 #endif
-#ifndef EV_WIN32_CLOSE_FD
-# define EV_WIN32_CLOSE_FD(fd) close (fd)
+#ifndef LIBEV_WIN32_CLOSE_FD
+# define LIBEV_WIN32_CLOSE_FD(fd) close (fd)
 #endif
 
 #ifdef _WIN32
@@ -1578,7 +1578,7 @@ static EV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work?
 
 /* define a suitable floor function (only used by periodics atm) */
 
-#if EV_USE_FLOOR
+#if LIBEV_USE_FLOOR
 # include <math.h>
 # define ev_floor(v) floor (v)
 #else
@@ -1586,7 +1586,8 @@ static EV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work?
 #include <float.h>
 
 /* a floor() replacement function, should be independent of ev_tstamp type */
-static ev_tstamp noinline
+noinline
+static ev_tstamp
 ev_floor (ev_tstamp v)
 {
   /* the choice of shift factor is not terribly important */
@@ -1628,7 +1629,8 @@ ev_floor (ev_tstamp v)
 # include <sys/utsname.h>
 #endif
 
-static unsigned int noinline ecb_cold
+noinline ecb_cold
+static unsigned int
 ev_linux_version (void)
 {
 #ifdef __linux
@@ -1666,23 +1668,26 @@ ev_linux_version (void)
 
 /*****************************************************************************/
 
-#if EV_AVOID_STDIO
-static void noinline ecb_cold
+#if LIBEV_AVOID_STDIO
+noinline ecb_cold
+static void
 ev_printerr (const char *msg)
 {
   write (STDERR_FILENO, msg, strlen (msg));
 }
 #endif
 
-static void (*syserr_cb)(const char *msg) EV_THROW;
+static void (*syserr_cb)(const char *msg) LIBEV_THROW;
 
-void ecb_cold
-ev_set_syserr_cb (void (*cb)(const char *msg) EV_THROW) EV_THROW
+ecb_cold
+void
+ev_set_syserr_cb (void (*cb)(const char *msg) LIBEV_THROW) LIBEV_THROW
 {
   syserr_cb = cb;
 }
 
-static void noinline ecb_cold
+noinline ecb_cold
+static void
 ev_syserr (const char *msg)
 {
   if (!msg)
@@ -1692,7 +1697,7 @@ ev_syserr (const char *msg)
     syserr_cb (msg);
   else
     {
-#if EV_AVOID_STDIO
+#if LIBEV_AVOID_STDIO
       ev_printerr (msg);
       ev_printerr (": ");
       ev_printerr (strerror (errno));
@@ -1705,7 +1710,7 @@ ev_syserr (const char *msg)
 }
 
 static void *
-ev_realloc_emul (void *ptr, long size) EV_THROW
+ev_realloc_emul (void *ptr, long size) LIBEV_THROW
 {
   /* some systems, notably openbsd and darwin, fail to properly
    * implement realloc (x, 0) (as required by both ansi c-89 and
@@ -1721,10 +1726,11 @@ ev_realloc_emul (void *ptr, long size) EV_THROW
   return 0;
 }
 
-static void *(*alloc)(void *ptr, long size) EV_THROW = ev_realloc_emul;
+static void *(*alloc)(void *ptr, long size) LIBEV_THROW = ev_realloc_emul;
 
-void ecb_cold
-ev_set_allocator (void *(*cb)(void *ptr, long size) EV_THROW) EV_THROW
+ecb_cold
+void
+ev_set_allocator (void *(*cb)(void *ptr, long size) LIBEV_THROW) LIBEV_THROW
 {
   alloc = cb;
 }
@@ -1736,7 +1742,7 @@ ev_realloc (void *ptr, long size)
 
   if (!ptr && size)
     {
-#if EV_AVOID_STDIO
+#if LIBEV_AVOID_STDIO
       ev_printerr ("(libev) memory allocation failed, aborting.\n");
 #else
       fprintf (stderr, "(libev) cannot allocate %ld bytes, aborting.", size);
@@ -1753,23 +1759,23 @@ ev_realloc (void *ptr, long size)
 /*****************************************************************************/
 
 /* set in reify when reification needed */
-#define EV_ANFD_REIFY 1
+#define LIBEV_ANFD_REIFY 1
 
 /* file descriptor info structure */
 typedef struct
 {
   WL head;
   unsigned char events; /* the events watched for */
-  unsigned char reify;  /* flag set when this ANFD needs reification (EV_ANFD_REIFY, EV__IOFDSET) */
+  unsigned char reify;  /* flag set when this ANFD needs reification (LIBEV_ANFD_REIFY, LIBEV__IOFDSET) */
   unsigned char emask;  /* the epoll backend stores the actual kernel mask in here */
   unsigned char unused;
-#if EV_USE_EPOLL
+#if LIBEV_USE_EPOLL
   unsigned int egen;    /* generation counter to counter epoll bugs */
 #endif
-#if EV_SELECT_IS_WINSOCKET || EV_USE_IOCP
+#if LIBEV_SELECT_IS_WINSOCKET || LIBEV_USE_IOCP
   SOCKET handle;
 #endif
-#if EV_USE_IOCP
+#if LIBEV_USE_IOCP
   OVERLAPPED or, ow;
 #endif
 } ANFD;
@@ -1781,7 +1787,7 @@ typedef struct
   int events; /* the pending event set for the given watcher */
 } ANPENDING;
 
-#if EV_USE_INOTIFY
+#if LIBEV_USE_INOTIFY
 /* hash table entry per inotify-id */
 typedef struct
 {
@@ -1790,7 +1796,7 @@ typedef struct
 #endif
 
 /* Heap Entry */
-#if EV_HEAP_CACHE_AT
+#if LIBEV_HEAP_CACHE_AT
   /* a heap element */
   typedef struct {
     ev_tstamp at;
@@ -1809,7 +1815,7 @@ typedef struct
   #define ANHE_at_cache(he)
 #endif
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
 
   struct ev_loop
   {
@@ -1822,11 +1828,11 @@ typedef struct
   #include "ev_wrap.h"
 
   static struct ev_loop default_loop_struct;
-  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a definition despite extern */
+  LIBEV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a definition despite extern */
 
 #else
 
-  EV_API_DECL ev_tstamp ev_rt_now = 0; /* needs to be initialised to make it a definition despite extern */
+  LIBEV_API_DECL ev_tstamp ev_rt_now = 0; /* needs to be initialised to make it a definition despite extern */
   #define VAR(name,decl) static decl;
     #include "ev_vars.h"
   #undef VAR
@@ -1835,25 +1841,25 @@ typedef struct
 
 #endif
 
-#if EV_FEATURE_API
-# define EV_RELEASE_CB if (expect_false (release_cb)) release_cb (EV_A)
-# define EV_ACQUIRE_CB if (expect_false (acquire_cb)) acquire_cb (EV_A)
-# define EV_INVOKE_PENDING invoke_cb (EV_A)
+#if LIBEV_FEATURE_API
+# define LIBEV_RELEASE_CB if (expect_false (release_cb)) release_cb (LIBEV_A)
+# define LIBEV_ACQUIRE_CB if (expect_false (acquire_cb)) acquire_cb (LIBEV_A)
+# define LIBEV_INVOKE_PENDING invoke_cb (LIBEV_A)
 #else
-# define EV_RELEASE_CB (void)0
-# define EV_ACQUIRE_CB (void)0
-# define EV_INVOKE_PENDING ev_invoke_pending (EV_A)
+# define LIBEV_RELEASE_CB (void)0
+# define LIBEV_ACQUIRE_CB (void)0
+# define LIBEV_INVOKE_PENDING ev_invoke_pending (LIBEV_A)
 #endif
 
-#define EVBREAK_RECURSE 0x80
+#define LIBEVBREAK_RECURSE 0x80
 
 /*****************************************************************************/
 
-#ifndef EV_HAVE_EV_TIME
+#ifndef LIBEV_HAVE_LIBEV_TIME
 ev_tstamp
-ev_time (void) EV_THROW
+ev_time (void) LIBEV_THROW
 {
-#if EV_USE_REALTIME
+#if LIBEV_USE_REALTIME
   if (expect_true (have_realtime))
     {
       struct timespec ts;
@@ -1871,7 +1877,7 @@ ev_time (void) EV_THROW
 inline_size ev_tstamp
 get_clock (void)
 {
-#if EV_USE_MONOTONIC
+#if LIBEV_USE_MONOTONIC
   if (expect_true (have_monotonic))
     {
       struct timespec ts;
@@ -1883,23 +1889,23 @@ get_clock (void)
   return ev_time ();
 }
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
 ev_tstamp
-ev_now (EV_P) EV_THROW
+ev_now (LIBEV_P) LIBEV_THROW
 {
   return ev_rt_now;
 }
 #endif
 
 void
-ev_sleep (ev_tstamp delay) EV_THROW
+ev_sleep (ev_tstamp delay) LIBEV_THROW
 {
   if (delay > 0.)
     {
-#if EV_USE_NANOSLEEP
+#if LIBEV_USE_NANOSLEEP
       struct timespec ts;
 
-      EV_TS_SET (ts, delay);
+      LIBEV_TS_SET (ts, delay);
       nanosleep (&ts, 0);
 #elif defined _WIN32
       Sleep ((unsigned long)(delay * 1e3));
@@ -1909,7 +1915,7 @@ ev_sleep (ev_tstamp delay) EV_THROW
       /* here we rely on sys/time.h + sys/types.h + unistd.h providing select */
       /* something not guaranteed by newer posix versions, but guaranteed */
       /* by older ones */
-      EV_TV_SET (tv, delay);
+      LIBEV_TV_SET (tv, delay);
       select (0, 0, 0, 0, &tv);
 #endif
     }
@@ -1942,7 +1948,8 @@ array_nextsize (int elem, int cur, int cnt)
   return ncur;
 }
 
-static void * noinline ecb_cold
+noinline ecb_cold
+static void *
 array_realloc (int elem, void *base, int *cur, int cnt)
 {
   *cur = array_nextsize (elem, *cur, cnt);
@@ -1955,7 +1962,7 @@ array_realloc (int elem, void *base, int *cur, int cnt)
 #define array_needsize(type,base,cur,cnt,init)			\
   if (expect_false ((cnt) > (cur)))				\
     {								\
-      int ecb_unused ocur_ = (cur);					\
+      ecb_unused int ocur_ = (cur);				\
       (base) = (type *)array_realloc				\
          (sizeof (type), (base), &(cur), (cnt));		\
       init ((base) + (ocur_), (cur) - ocur_);			\
@@ -1977,13 +1984,15 @@ array_realloc (int elem, void *base, int *cur, int cnt)
 /*****************************************************************************/
 
 /* dummy callback for pending events */
-static void noinline
-pendingcb (EV_P_ ev_prepare *w, int revents)
+noinline
+static void
+pendingcb (LIBEV_P_ ev_prepare *w, int revents)
 {
 }
 
-void noinline
-ev_feed_event (EV_P_ void *w, int revents) EV_THROW
+noinline
+void
+ev_feed_event (LIBEV_P_ void *w, int revents) LIBEV_THROW
 {
   W w_ = (W)w;
   int pri = ABSPRI (w_);
@@ -2002,33 +2011,33 @@ ev_feed_event (EV_P_ void *w, int revents) EV_THROW
 }
 
 inline_speed void
-feed_reverse (EV_P_ W w)
+feed_reverse (LIBEV_P_ W w)
 {
   array_needsize (W, rfeeds, rfeedmax, rfeedcnt + 1, EMPTY2);
   rfeeds [rfeedcnt++] = w;
 }
 
 inline_size void
-feed_reverse_done (EV_P_ int revents)
+feed_reverse_done (LIBEV_P_ int revents)
 {
   do
-    ev_feed_event (EV_A_ rfeeds [--rfeedcnt], revents);
+    ev_feed_event (LIBEV_A_ rfeeds [--rfeedcnt], revents);
   while (rfeedcnt);
 }
 
 inline_speed void
-queue_events (EV_P_ W *events, int eventcnt, int type)
+queue_events (LIBEV_P_ W *events, int eventcnt, int type)
 {
   int i;
 
   for (i = 0; i < eventcnt; ++i)
-    ev_feed_event (EV_A_ events [i], type);
+    ev_feed_event (LIBEV_A_ events [i], type);
 }
 
 /*****************************************************************************/
 
 inline_speed void
-fd_event_nocheck (EV_P_ int fd, int revents)
+fd_event_nocheck (LIBEV_P_ int fd, int revents)
 {
   ANFD *anfd = anfds + fd;
   ev_io *w;
@@ -2038,44 +2047,44 @@ fd_event_nocheck (EV_P_ int fd, int revents)
       int ev = w->events & revents;
 
       if (ev)
-        ev_feed_event (EV_A_ (W)w, ev);
+        ev_feed_event (LIBEV_A_ (W)w, ev);
     }
 }
 
 /* do not submit kernel events for fds that have reify set */
 /* because that means they changed while we were polling for new events */
 inline_speed void
-fd_event (EV_P_ int fd, int revents)
+fd_event (LIBEV_P_ int fd, int revents)
 {
   ANFD *anfd = anfds + fd;
 
   if (expect_true (!anfd->reify))
-    fd_event_nocheck (EV_A_ fd, revents);
+    fd_event_nocheck (LIBEV_A_ fd, revents);
 }
 
 void
-ev_feed_fd_event (EV_P_ int fd, int revents) EV_THROW
+ev_feed_fd_event (LIBEV_P_ int fd, int revents) LIBEV_THROW
 {
   if (fd >= 0 && fd < anfdmax)
-    fd_event_nocheck (EV_A_ fd, revents);
+    fd_event_nocheck (LIBEV_A_ fd, revents);
 }
 
 /* make sure the external fd watch events are in-sync */
 /* with the kernel/libev internal state */
 inline_size void
-fd_reify (EV_P)
+fd_reify (LIBEV_P)
 {
   int i;
 
-#if EV_SELECT_IS_WINSOCKET || EV_USE_IOCP
+#if LIBEV_SELECT_IS_WINSOCKET || LIBEV_USE_IOCP
   for (i = 0; i < fdchangecnt; ++i)
     {
       int fd = fdchanges [i];
       ANFD *anfd = anfds + fd;
 
-      if (anfd->reify & EV__IOFDSET && anfd->head)
+      if (anfd->reify & LIBEV__IOFDSET && anfd->head)
         {
-          SOCKET handle = EV_FD_TO_WIN32_HANDLE (fd);
+          SOCKET handle = LIBEV_FD_TO_WIN32_HANDLE (fd);
 
           if (handle != anfd->handle)
             {
@@ -2084,7 +2093,7 @@ fd_reify (EV_P)
               assert (("libev: only socket fds supported in this configuration", ioctlsocket (handle, FIONREAD, &arg) == 0));
 
               /* handle changed, but fd didn't - we need to do it in two steps */
-              backend_modify (EV_A_ fd, anfd->events, 0);
+              backend_modify (LIBEV_A_ fd, anfd->events, 0);
               anfd->events = 0;
               anfd->handle = handle;
             }
@@ -2103,7 +2112,7 @@ fd_reify (EV_P)
 
       anfd->reify  = 0;
 
-      /*if (expect_true (o_reify & EV_ANFD_REIFY)) probably a deoptimisation */
+      /*if (expect_true (o_reify & LIBEV_ANFD_REIFY)) probably a deoptimisation */
         {
           anfd->events = 0;
 
@@ -2111,19 +2120,20 @@ fd_reify (EV_P)
             anfd->events |= (unsigned char)w->events;
 
           if (o_events != anfd->events)
-            o_reify = EV__IOFDSET; /* actually |= */
+            o_reify = LIBEV__IOFDSET; /* actually |= */
         }
 
-      if (o_reify & EV__IOFDSET)
-        backend_modify (EV_A_ fd, o_events, anfd->events);
+      if (o_reify & LIBEV__IOFDSET)
+        backend_modify (LIBEV_A_ fd, o_events, anfd->events);
     }
 
   fdchangecnt = 0;
 }
 
 /* something about the given fd changed */
-inline_size void
-fd_change (EV_P_ int fd, int flags)
+inline_size
+void
+fd_change (LIBEV_P_ int fd, int flags)
 {
   unsigned char reify = anfds [fd].reify;
   anfds [fd].reify |= flags;
@@ -2137,58 +2147,61 @@ fd_change (EV_P_ int fd, int flags)
 }
 
 /* the given fd is invalid/unusable, so make sure it doesn't hurt us anymore */
-inline_speed void ecb_cold
-fd_kill (EV_P_ int fd)
+inline_speed ecb_cold void
+fd_kill (LIBEV_P_ int fd)
 {
   ev_io *w;
 
   while ((w = (ev_io *)anfds [fd].head))
     {
-      ev_io_stop (EV_A_ w);
-      ev_feed_event (EV_A_ (W)w, EV_ERROR | EV_READ | EV_WRITE);
+      ev_io_stop (LIBEV_A_ w);
+      ev_feed_event (LIBEV_A_ (W)w, LIBEV_ERROR | LIBEV_READ | LIBEV_WRITE);
     }
 }
 
 /* check whether the given fd is actually valid, for error recovery */
-inline_size int ecb_cold
+inline_size ecb_cold int
 fd_valid (int fd)
 {
 #ifdef _WIN32
-  return EV_FD_TO_WIN32_HANDLE (fd) != -1;
+  return LIBEV_FD_TO_WIN32_HANDLE (fd) != -1;
 #else
   return fcntl (fd, F_GETFD) != -1;
 #endif
 }
 
 /* called on EBADF to verify fds */
-static void noinline ecb_cold
-fd_ebadf (EV_P)
+noinline ecb_cold
+static void
+fd_ebadf (LIBEV_P)
 {
   int fd;
 
   for (fd = 0; fd < anfdmax; ++fd)
     if (anfds [fd].events)
       if (!fd_valid (fd) && errno == EBADF)
-        fd_kill (EV_A_ fd);
+        fd_kill (LIBEV_A_ fd);
 }
 
 /* called on ENOMEM in select/poll to kill some fds and retry */
-static void noinline ecb_cold
-fd_enomem (EV_P)
+noinline ecb_cold
+static void
+fd_enomem (LIBEV_P)
 {
   int fd;
 
   for (fd = anfdmax; fd--; )
     if (anfds [fd].events)
       {
-        fd_kill (EV_A_ fd);
+        fd_kill (LIBEV_A_ fd);
         break;
       }
 }
 
 /* usually called after fork if backend needs to re-arm all fds from scratch */
-static void noinline
-fd_rearm_all (EV_P)
+noinline
+static void
+fd_rearm_all (LIBEV_P)
 {
   int fd;
 
@@ -2197,7 +2210,7 @@ fd_rearm_all (EV_P)
       {
         anfds [fd].events = 0;
         anfds [fd].emask  = 0;
-        fd_change (EV_A_ fd, EV__IOFDSET | EV_ANFD_REIFY);
+        fd_change (LIBEV_A_ fd, LIBEV__IOFDSET | LIBEV_ANFD_REIFY);
       }
 }
 
@@ -2208,7 +2221,7 @@ fd_intern (int fd)
 {
 #ifdef _WIN32
   unsigned long arg = 1;
-  ioctlsocket (EV_FD_TO_WIN32_HANDLE (fd), FIONBIO, &arg);
+  ioctlsocket (LIBEV_FD_TO_WIN32_HANDLE (fd), FIONBIO, &arg);
 #else
   fcntl (fd, F_SETFD, FD_CLOEXEC);
   fcntl (fd, F_SETFL, O_NONBLOCK);
@@ -2229,7 +2242,7 @@ fd_intern (int fd)
  * which is more cache-efficient.
  * the difference is about 5% with 50000+ watchers.
  */
-#if EV_USE_4HEAP
+#if LIBEV_USE_4HEAP
 
 #define DHEAP 4
 #define HEAP0 (DHEAP - 1) /* index of first element in heap */
@@ -2365,27 +2378,28 @@ reheap (ANHE *heap, int N)
 /* associate signal watchers to a signal signal */
 typedef struct
 {
-  EV_ATOMIC_T pending;
-#if EV_MULTIPLICITY
-  EV_P;
+  LIBEV_ATOMIC_T pending;
+#if LIBEV_MULTIPLICITY
+  LIBEV_P;
 #endif
   WL head;
 } ANSIG;
 
-static ANSIG signals [EV_NSIG - 1];
+static ANSIG signals [LIBEV_NSIG - 1];
 
 /*****************************************************************************/
 
-#if EV_SIGNAL_ENABLE || EV_ASYNC_ENABLE
+#if LIBEV_SIGNAL_ENABLE || LIBEV_ASYNC_ENABLE
 
-static void noinline ecb_cold
-evpipe_init (EV_P)
+noinline ecb_cold
+static void
+evpipe_init (LIBEV_P)
 {
   if (!ev_is_active (&pipe_w))
     {
       int fds [2];
 
-# if EV_USE_EVENTFD
+# if LIBEV_USE_EVENTFD
       fds [0] = -1;
       fds [1] = eventfd (0, EFD_NONBLOCK | EFD_CLOEXEC);
       if (fds [1] < 0 && errno == EINVAL)
@@ -2417,14 +2431,14 @@ evpipe_init (EV_P)
 
       fd_intern (evpipe [1]);
 
-      ev_io_set (&pipe_w, evpipe [0] < 0 ? evpipe [1] : evpipe [0], EV_READ);
-      ev_io_start (EV_A_ &pipe_w);
-      ev_unref (EV_A); /* watcher should not keep loop alive */
+      ev_io_set (&pipe_w, evpipe [0] < 0 ? evpipe [1] : evpipe [0], LIBEV_READ);
+      ev_io_start (LIBEV_A_ &pipe_w);
+      ev_unref (LIBEV_A); /* watcher should not keep loop alive */
     }
 }
 
 inline_speed void
-evpipe_write (EV_P_ EV_ATOMIC_T *flag)
+evpipe_write (LIBEV_P_ LIBEV_ATOMIC_T *flag)
 {
   ECB_MEMORY_FENCE; /* push out the write before this function was called, acquire flag */
 
@@ -2447,7 +2461,7 @@ evpipe_write (EV_P_ EV_ATOMIC_T *flag)
 
       old_errno = errno; /* save errno because write will clobber it */
 
-#if EV_USE_EVENTFD
+#if LIBEV_USE_EVENTFD
       if (evpipe [0] < 0)
         {
           uint64_t counter = 1;
@@ -2461,7 +2475,7 @@ evpipe_write (EV_P_ EV_ATOMIC_T *flag)
           DWORD sent;
           buf.buf = &buf;
           buf.len = 1;
-          WSASend (EV_FD_TO_WIN32_HANDLE (evpipe [1]), &buf, 1, &sent, 0, 0, 0);
+          WSASend (LIBEV_FD_TO_WIN32_HANDLE (evpipe [1]), &buf, 1, &sent, 0, 0, 0);
 #else
           write (evpipe [1], &(evpipe [1]), 1);
 #endif
@@ -2474,13 +2488,13 @@ evpipe_write (EV_P_ EV_ATOMIC_T *flag)
 /* called whenever the libev signal pipe */
 /* got some events (signal, async) */
 static void
-pipecb (EV_P_ ev_io *iow, int revents)
+pipecb (LIBEV_P_ ev_io *iow, int revents)
 {
   int i;
 
-  if (revents & EV_READ)
+  if (revents & LIBEV_READ)
     {
-#if EV_USE_EVENTFD
+#if LIBEV_USE_EVENTFD
       if (evpipe [0] < 0)
         {
           uint64_t counter;
@@ -2496,7 +2510,7 @@ pipecb (EV_P_ ev_io *iow, int revents)
           DWORD flags = 0;
           buf.buf = dummy;
           buf.len = sizeof (dummy);
-          WSARecv (EV_FD_TO_WIN32_HANDLE (evpipe [0]), &buf, 1, &recvd, &flags, 0, 0);
+          WSARecv (LIBEV_FD_TO_WIN32_HANDLE (evpipe [0]), &buf, 1, &recvd, &flags, 0, 0);
 #else
           read (evpipe [0], &dummy, sizeof (dummy));
 #endif
@@ -2507,20 +2521,20 @@ pipecb (EV_P_ ev_io *iow, int revents)
 
   ECB_MEMORY_FENCE; /* push out skipped, acquire flags */
 
-#if EV_SIGNAL_ENABLE
+#if LIBEV_SIGNAL_ENABLE
   if (sig_pending)
     {
       sig_pending = 0;
 
       ECB_MEMORY_FENCE;
 
-      for (i = EV_NSIG - 1; i--; )
+      for (i = LIBEV_NSIG - 1; i--; )
         if (expect_false (signals [i].pending))
-          ev_feed_signal_event (EV_A_ i + 1);
+          ev_feed_signal_event (LIBEV_A_ i + 1);
     }
 #endif
 
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
   if (async_pending)
     {
       async_pending = 0;
@@ -2532,7 +2546,7 @@ pipecb (EV_P_ ev_io *iow, int revents)
           {
             asyncs [i]->sent = 0;
             ECB_MEMORY_FENCE_RELEASE;
-            ev_feed_event (EV_A_ asyncs [i], EV_ASYNC);
+            ev_feed_event (LIBEV_A_ asyncs [i], LIBEV_ASYNC);
           }
     }
 #endif
@@ -2541,19 +2555,19 @@ pipecb (EV_P_ ev_io *iow, int revents)
 /*****************************************************************************/
 
 void
-ev_feed_signal (int signum) EV_THROW
+ev_feed_signal (int signum) LIBEV_THROW
 {
-#if EV_MULTIPLICITY
-  EV_P;
+#if LIBEV_MULTIPLICITY
+  LIBEV_P;
   ECB_MEMORY_FENCE_ACQUIRE;
-  EV_A = signals [signum - 1].loop;
+  LIBEV_A = signals [signum - 1].loop;
 
-  if (!EV_A)
+  if (!LIBEV_A)
     return;
 #endif
 
   signals [signum - 1].pending = 1;
-  evpipe_write (EV_A_ &sig_pending);
+  evpipe_write (LIBEV_A_ &sig_pending);
 }
 
 static void
@@ -2566,21 +2580,22 @@ ev_sighandler (int signum)
   ev_feed_signal (signum);
 }
 
-void noinline
-ev_feed_signal_event (EV_P_ int signum) EV_THROW
+noinline
+void
+ev_feed_signal_event (LIBEV_P_ int signum) LIBEV_THROW
 {
   WL w;
 
-  if (expect_false (signum <= 0 || signum >= EV_NSIG))
+  if (expect_false (signum <= 0 || signum >= LIBEV_NSIG))
     return;
 
   --signum;
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   /* it is permissible to try to feed a signal to the wrong loop */
   /* or, likely more useful, feeding a signal nobody is waiting for */
 
-  if (expect_false (signals [signum].loop != EV_A))
+  if (expect_false (signals [signum].loop != LIBEV_A))
     return;
 #endif
 
@@ -2588,12 +2603,12 @@ ev_feed_signal_event (EV_P_ int signum) EV_THROW
   ECB_MEMORY_FENCE_RELEASE;
 
   for (w = signals [signum].head; w; w = w->next)
-    ev_feed_event (EV_A_ (W)w, EV_SIGNAL);
+    ev_feed_event (LIBEV_A_ (W)w, LIBEV_SIGNAL);
 }
 
-#if EV_USE_SIGNALFD
+#if LIBEV_USE_SIGNALFD
 static void
-sigfdcb (EV_P_ ev_io *iow, int revents)
+sigfdcb (LIBEV_P_ ev_io *iow, int revents)
 {
   struct signalfd_siginfo si[2], *sip; /* these structs are big */
 
@@ -2603,7 +2618,7 @@ sigfdcb (EV_P_ ev_io *iow, int revents)
 
       /* not ISO-C, as res might be -1, but works with SuS */
       for (sip = si; (char *)sip < (char *)si + res; ++sip)
-        ev_feed_signal_event (EV_A_ sip->ssi_signo);
+        ev_feed_signal_event (LIBEV_A_ sip->ssi_signo);
 
       if (res < (ssize_t)sizeof (si))
         break;
@@ -2615,8 +2630,8 @@ sigfdcb (EV_P_ ev_io *iow, int revents)
 
 /*****************************************************************************/
 
-#if EV_CHILD_ENABLE
-static WL childs [EV_PID_HASHSIZE];
+#if LIBEV_CHILD_ENABLE
+static WL childs [LIBEV_PID_HASHSIZE];
 
 static ev_signal childev;
 
@@ -2626,20 +2641,20 @@ static ev_signal childev;
 
 /* handle a single child status event */
 inline_speed void
-child_reap (EV_P_ int chain, int pid, int status)
+child_reap (LIBEV_P_ int chain, int pid, int status)
 {
   ev_child *w;
   int traced = WIFSTOPPED (status) || WIFCONTINUED (status);
 
-  for (w = (ev_child *)childs [chain & ((EV_PID_HASHSIZE) - 1)]; w; w = (ev_child *)((WL)w)->next)
+  for (w = (ev_child *)childs [chain & ((LIBEV_PID_HASHSIZE) - 1)]; w; w = (ev_child *)((WL)w)->next)
     {
       if ((w->pid == pid || !w->pid)
           && (!traced || (w->flags & 1)))
         {
-          ev_set_priority (w, EV_MAXPRI); /* need to do it *now*, this *must* be the same prio as the signal watcher itself */
+          ev_set_priority (w, LIBEV_MAXPRI); /* need to do it *now*, this *must* be the same prio as the signal watcher itself */
           w->rpid    = pid;
           w->rstatus = status;
-          ev_feed_event (EV_A_ (W)w, EV_CHILD);
+          ev_feed_event (LIBEV_A_ (W)w, LIBEV_CHILD);
         }
     }
 }
@@ -2650,7 +2665,7 @@ child_reap (EV_P_ int chain, int pid, int status)
 
 /* called on sigchld etc., calls waitpid */
 static void
-childcb (EV_P_ ev_signal *sw, int revents)
+childcb (LIBEV_P_ ev_signal *sw, int revents)
 {
   int pid, status;
 
@@ -2663,50 +2678,50 @@ childcb (EV_P_ ev_signal *sw, int revents)
 
   /* make sure we are called again until all children have been reaped */
   /* we need to do it this way so that the callback gets called before we continue */
-  ev_feed_event (EV_A_ (W)sw, EV_SIGNAL);
+  ev_feed_event (LIBEV_A_ (W)sw, LIBEV_SIGNAL);
 
-  child_reap (EV_A_ pid, pid, status);
-  if ((EV_PID_HASHSIZE) > 1)
-    child_reap (EV_A_ 0, pid, status); /* this might trigger a watcher twice, but feed_event catches that */
+  child_reap (LIBEV_A_ pid, pid, status);
+  if ((LIBEV_PID_HASHSIZE) > 1)
+    child_reap (LIBEV_A_ 0, pid, status); /* this might trigger a watcher twice, but feed_event catches that */
 }
 
 #endif
 
 /*****************************************************************************/
 
-#if EV_USE_IOCP
+#if LIBEV_USE_IOCP
 # include "ev_iocp.c"
 #endif
-#if EV_USE_PORT
+#if LIBEV_USE_PORT
 # include "ev_port.c"
 #endif
-#if EV_USE_KQUEUE
+#if LIBEV_USE_KQUEUE
 # include "ev_kqueue.c"
 #endif
-#if EV_USE_EPOLL
+#if LIBEV_USE_EPOLL
 # include "ev_epoll.c"
 #endif
-#if EV_USE_POLL
+#if LIBEV_USE_POLL
 # include "ev_poll.c"
 #endif
-#if EV_USE_SELECT
+#if LIBEV_USE_SELECT
 # include "ev_select.c"
 #endif
 
-int ecb_cold
-ev_version_major (void) EV_THROW
+ecb_cold int
+ev_version_major (void) LIBEV_THROW
 {
-  return EV_VERSION_MAJOR;
+  return LIBEV_VERSION_MAJOR;
 }
 
-int ecb_cold
-ev_version_minor (void) EV_THROW
+ecb_cold int
+ev_version_minor (void) LIBEV_THROW
 {
-  return EV_VERSION_MINOR;
+  return LIBEV_VERSION_MINOR;
 }
 
 /* return true if we are running with elevated privileges and should ignore env variables */
-int inline_size ecb_cold
+inline_size ecb_cold int
 enable_secure (void)
 {
 #ifdef _WIN32
@@ -2717,105 +2732,108 @@ enable_secure (void)
 #endif
 }
 
-unsigned int ecb_cold
-ev_supported_backends (void) EV_THROW
+ecb_cold
+unsigned int
+ev_supported_backends (void) LIBEV_THROW
 {
   unsigned int flags = 0;
 
-  if (EV_USE_PORT  ) flags |= EVBACKEND_PORT;
-  if (EV_USE_KQUEUE) flags |= EVBACKEND_KQUEUE;
-  if (EV_USE_EPOLL ) flags |= EVBACKEND_EPOLL;
-  if (EV_USE_POLL  ) flags |= EVBACKEND_POLL;
-  if (EV_USE_SELECT) flags |= EVBACKEND_SELECT;
+  if (LIBEV_USE_PORT  ) flags |= LIBEVBACKEND_PORT;
+  if (LIBEV_USE_KQUEUE) flags |= LIBEVBACKEND_KQUEUE;
+  if (LIBEV_USE_EPOLL ) flags |= LIBEVBACKEND_EPOLL;
+  if (LIBEV_USE_POLL  ) flags |= LIBEVBACKEND_POLL;
+  if (LIBEV_USE_SELECT) flags |= LIBEVBACKEND_SELECT;
   
   return flags;
 }
 
-unsigned int ecb_cold
-ev_recommended_backends (void) EV_THROW
+ecb_cold
+unsigned int
+ev_recommended_backends (void) LIBEV_THROW
 {
   unsigned int flags = ev_supported_backends ();
 
 #ifndef __NetBSD__
   /* kqueue is borked on everything but netbsd apparently */
   /* it usually doesn't work correctly on anything but sockets and pipes */
-  flags &= ~EVBACKEND_KQUEUE;
+  flags &= ~LIBEVBACKEND_KQUEUE;
 #endif
 #ifdef __APPLE__
   /* only select works correctly on that "unix-certified" platform */
-  flags &= ~EVBACKEND_KQUEUE; /* horribly broken, even for sockets */
-  flags &= ~EVBACKEND_POLL;   /* poll is based on kqueue from 10.5 onwards */
+  flags &= ~LIBEVBACKEND_KQUEUE; /* horribly broken, even for sockets */
+  flags &= ~LIBEVBACKEND_POLL;   /* poll is based on kqueue from 10.5 onwards */
 #endif
 #ifdef __FreeBSD__
-  flags &= ~EVBACKEND_POLL;   /* poll return value is unusable (http://forums.freebsd.org/archive/index.php/t-10270.html) */
+  flags &= ~LIBEVBACKEND_POLL;   /* poll return value is unusable (http://forums.freebsd.org/archive/index.php/t-10270.html) */
 #endif
 
   return flags;
 }
 
-unsigned int ecb_cold
-ev_embeddable_backends (void) EV_THROW
+ecb_cold
+unsigned int
+ev_embeddable_backends (void) LIBEV_THROW
 {
-  int flags = EVBACKEND_EPOLL | EVBACKEND_KQUEUE | EVBACKEND_PORT;
+  int flags = LIBEVBACKEND_EPOLL | LIBEVBACKEND_KQUEUE | LIBEVBACKEND_PORT;
 
   /* epoll embeddability broken on all linux versions up to at least 2.6.23 */
   if (ev_linux_version () < 0x020620) /* disable it on linux < 2.6.32 */
-    flags &= ~EVBACKEND_EPOLL;
+    flags &= ~LIBEVBACKEND_EPOLL;
 
   return flags;
 }
 
 unsigned int
-ev_backend (EV_P) EV_THROW
+ev_backend (LIBEV_P) LIBEV_THROW
 {
   return backend;
 }
 
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
 unsigned int
-ev_iteration (EV_P) EV_THROW
+ev_iteration (LIBEV_P) LIBEV_THROW
 {
   return loop_count;
 }
 
 unsigned int
-ev_depth (EV_P) EV_THROW
+ev_depth (LIBEV_P) LIBEV_THROW
 {
   return loop_depth;
 }
 
 void
-ev_set_io_collect_interval (EV_P_ ev_tstamp interval) EV_THROW
+ev_set_io_collect_interval (LIBEV_P_ ev_tstamp interval) LIBEV_THROW
 {
   io_blocktime = interval;
 }
 
 void
-ev_set_timeout_collect_interval (EV_P_ ev_tstamp interval) EV_THROW
+ev_set_timeout_collect_interval (LIBEV_P_ ev_tstamp interval) LIBEV_THROW
 {
   timeout_blocktime = interval;
 }
 
 void
-ev_set_userdata (EV_P_ void *data) EV_THROW
+ev_set_userdata (LIBEV_P_ void *data) LIBEV_THROW
 {
   userdata = data;
 }
 
 void *
-ev_userdata (EV_P) EV_THROW
+ev_userdata (LIBEV_P) LIBEV_THROW
 {
   return userdata;
 }
 
 void
-ev_set_invoke_pending_cb (EV_P_ ev_loop_callback invoke_pending_cb) EV_THROW
+ev_set_invoke_pending_cb (LIBEV_P_ ev_loop_callback invoke_pending_cb) LIBEV_THROW
 {
   invoke_cb = invoke_pending_cb;
 }
 
 void
-ev_set_loop_release_cb (EV_P_ void (*release)(EV_P) EV_THROW, void (*acquire)(EV_P) EV_THROW) EV_THROW
+ev_set_loop_release_cb (LIBEV_P_ void (*release)(LIBEV_P) LIBEV_THROW, void (*acquire)(LIBEV_P) LIBEV_THROW) LIBEV_THROW
 {
   release_cb = release;
   acquire_cb = acquire;
@@ -2823,14 +2841,15 @@ ev_set_loop_release_cb (EV_P_ void (*release)(EV_P) EV_THROW, void (*acquire)(EV
 #endif
 
 /* initialise a loop structure, must be zero-initialised */
-static void noinline ecb_cold
-loop_init (EV_P_ unsigned int flags) EV_THROW
+noinline ecb_cold
+static void
+loop_init (LIBEV_P_ unsigned int flags) LIBEV_THROW
 {
   if (!backend)
     {
       origflags = flags;
 
-#if EV_USE_REALTIME
+#if LIBEV_USE_REALTIME
       if (!have_realtime)
         {
           struct timespec ts;
@@ -2840,7 +2859,7 @@ loop_init (EV_P_ unsigned int flags) EV_THROW
         }
 #endif
 
-#if EV_USE_MONOTONIC
+#if LIBEV_USE_MONOTONIC
       if (!have_monotonic)
         {
           struct timespec ts;
@@ -2852,20 +2871,20 @@ loop_init (EV_P_ unsigned int flags) EV_THROW
 
       /* pid check not overridable via env */
 #ifndef _WIN32
-      if (flags & EVFLAG_FORKCHECK)
+      if (flags & LIBEVFLAG_FORKCHECK)
         curpid = getpid ();
 #endif
 
-      if (!(flags & EVFLAG_NOENV)
+      if (!(flags & LIBEVFLAG_NOENV)
           && !enable_secure ()
-          && getenv ("LIBEV_FLAGS"))
-        flags = atoi (getenv ("LIBEV_FLAGS"));
+          && getenv ("LIBLIBEV_FLAGS"))
+        flags = atoi (getenv ("LIBLIBEV_FLAGS"));
 
       ev_rt_now          = ev_time ();
       mn_now             = get_clock ();
       now_floor          = mn_now;
       rtmn_diff          = ev_rt_now - mn_now;
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
       invoke_cb          = ev_invoke_pending;
 #endif
 
@@ -2874,95 +2893,96 @@ loop_init (EV_P_ unsigned int flags) EV_THROW
       backend            = 0;
       backend_fd         = -1;
       sig_pending        = 0;
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
       async_pending      = 0;
 #endif
       pipe_write_skipped = 0;
       pipe_write_wanted  = 0;
       evpipe [0]         = -1;
       evpipe [1]         = -1;
-#if EV_USE_INOTIFY
-      fs_fd              = flags & EVFLAG_NOINOTIFY ? -1 : -2;
+#if LIBEV_USE_INOTIFY
+      fs_fd              = flags & LIBEVFLAG_NOINOTIFY ? -1 : -2;
 #endif
-#if EV_USE_SIGNALFD
-      sigfd              = flags & EVFLAG_SIGNALFD  ? -2 : -1;
+#if LIBEV_USE_SIGNALFD
+      sigfd              = flags & LIBEVFLAG_SIGNALFD  ? -2 : -1;
 #endif
 
-      if (!(flags & EVBACKEND_MASK))
+      if (!(flags & LIBEVBACKEND_MASK))
         flags |= ev_recommended_backends ();
 
-#if EV_USE_IOCP
-      if (!backend && (flags & EVBACKEND_IOCP  )) backend = iocp_init   (EV_A_ flags);
+#if LIBEV_USE_IOCP
+      if (!backend && (flags & LIBEVBACKEND_IOCP  )) backend = iocp_init   (LIBEV_A_ flags);
 #endif
-#if EV_USE_PORT
-      if (!backend && (flags & EVBACKEND_PORT  )) backend = port_init   (EV_A_ flags);
+#if LIBEV_USE_PORT
+      if (!backend && (flags & LIBEVBACKEND_PORT  )) backend = port_init   (LIBEV_A_ flags);
 #endif
-#if EV_USE_KQUEUE
-      if (!backend && (flags & EVBACKEND_KQUEUE)) backend = kqueue_init (EV_A_ flags);
+#if LIBEV_USE_KQUEUE
+      if (!backend && (flags & LIBEVBACKEND_KQUEUE)) backend = kqueue_init (LIBEV_A_ flags);
 #endif
-#if EV_USE_EPOLL
-      if (!backend && (flags & EVBACKEND_EPOLL )) backend = epoll_init  (EV_A_ flags);
+#if LIBEV_USE_EPOLL
+      if (!backend && (flags & LIBEVBACKEND_EPOLL )) backend = epoll_init  (LIBEV_A_ flags);
 #endif
-#if EV_USE_POLL
-      if (!backend && (flags & EVBACKEND_POLL  )) backend = poll_init   (EV_A_ flags);
+#if LIBEV_USE_POLL
+      if (!backend && (flags & LIBEVBACKEND_POLL  )) backend = poll_init   (LIBEV_A_ flags);
 #endif
-#if EV_USE_SELECT
-      if (!backend && (flags & EVBACKEND_SELECT)) backend = select_init (EV_A_ flags);
+#if LIBEV_USE_SELECT
+      if (!backend && (flags & LIBEVBACKEND_SELECT)) backend = select_init (LIBEV_A_ flags);
 #endif
 
       ev_prepare_init (&pending_w, pendingcb);
 
-#if EV_SIGNAL_ENABLE || EV_ASYNC_ENABLE
+#if LIBEV_SIGNAL_ENABLE || LIBEV_ASYNC_ENABLE
       ev_init (&pipe_w, pipecb);
-      ev_set_priority (&pipe_w, EV_MAXPRI);
+      ev_set_priority (&pipe_w, LIBEV_MAXPRI);
 #endif
     }
 }
 
 /* free up a loop structure */
-void ecb_cold
-ev_loop_destroy (EV_P)
+ecb_cold
+void
+ev_loop_destroy (LIBEV_P)
 {
   int i;
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   /* mimic free (0) */
-  if (!EV_A)
+  if (!LIBEV_A)
     return;
 #endif
 
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
   /* queue cleanup watchers (and execute them) */
   if (expect_false (cleanupcnt))
     {
-      queue_events (EV_A_ (W *)cleanups, cleanupcnt, EV_CLEANUP);
-      EV_INVOKE_PENDING;
+      queue_events (LIBEV_A_ (W *)cleanups, cleanupcnt, LIBEV_CLEANUP);
+      LIBEV_INVOKE_PENDING;
     }
 #endif
 
-#if EV_CHILD_ENABLE
-  if (ev_is_default_loop (EV_A) && ev_is_active (&childev))
+#if LIBEV_CHILD_ENABLE
+  if (ev_is_default_loop (LIBEV_A) && ev_is_active (&childev))
     {
-      ev_ref (EV_A); /* child watcher */
-      ev_signal_stop (EV_A_ &childev);
+      ev_ref (LIBEV_A); /* child watcher */
+      ev_signal_stop (LIBEV_A_ &childev);
     }
 #endif
 
   if (ev_is_active (&pipe_w))
     {
-      /*ev_ref (EV_A);*/
-      /*ev_io_stop (EV_A_ &pipe_w);*/
+      /*ev_ref (LIBEV_A);*/
+      /*ev_io_stop (LIBEV_A_ &pipe_w);*/
 
-      if (evpipe [0] >= 0) EV_WIN32_CLOSE_FD (evpipe [0]);
-      if (evpipe [1] >= 0) EV_WIN32_CLOSE_FD (evpipe [1]);
+      if (evpipe [0] >= 0) LIBEV_WIN32_CLOSE_FD (evpipe [0]);
+      if (evpipe [1] >= 0) LIBEV_WIN32_CLOSE_FD (evpipe [1]);
     }
 
-#if EV_USE_SIGNALFD
+#if LIBEV_USE_SIGNALFD
   if (ev_is_active (&sigfd_w))
     close (sigfd);
 #endif
 
-#if EV_USE_INOTIFY
+#if LIBEV_USE_INOTIFY
   if (fs_fd >= 0)
     close (fs_fd);
 #endif
@@ -2970,29 +2990,29 @@ ev_loop_destroy (EV_P)
   if (backend_fd >= 0)
     close (backend_fd);
 
-#if EV_USE_IOCP
-  if (backend == EVBACKEND_IOCP  ) iocp_destroy   (EV_A);
+#if LIBEV_USE_IOCP
+  if (backend == LIBEVBACKEND_IOCP  ) iocp_destroy   (LIBEV_A);
 #endif
-#if EV_USE_PORT
-  if (backend == EVBACKEND_PORT  ) port_destroy   (EV_A);
+#if LIBEV_USE_PORT
+  if (backend == LIBEVBACKEND_PORT  ) port_destroy   (LIBEV_A);
 #endif
-#if EV_USE_KQUEUE
-  if (backend == EVBACKEND_KQUEUE) kqueue_destroy (EV_A);
+#if LIBEV_USE_KQUEUE
+  if (backend == LIBEVBACKEND_KQUEUE) kqueue_destroy (LIBEV_A);
 #endif
-#if EV_USE_EPOLL
-  if (backend == EVBACKEND_EPOLL ) epoll_destroy  (EV_A);
+#if LIBEV_USE_EPOLL
+  if (backend == LIBEVBACKEND_EPOLL ) epoll_destroy  (LIBEV_A);
 #endif
-#if EV_USE_POLL
-  if (backend == EVBACKEND_POLL  ) poll_destroy   (EV_A);
+#if LIBEV_USE_POLL
+  if (backend == LIBEVBACKEND_POLL  ) poll_destroy   (LIBEV_A);
 #endif
-#if EV_USE_SELECT
-  if (backend == EVBACKEND_SELECT) select_destroy (EV_A);
+#if LIBEV_USE_SELECT
+  if (backend == LIBEVBACKEND_SELECT) select_destroy (LIBEV_A);
 #endif
 
   for (i = NUMPRI; i--; )
     {
       array_free (pending, [i]);
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
       array_free (idle, [i]);
 #endif
     }
@@ -3003,95 +3023,97 @@ ev_loop_destroy (EV_P)
   array_free (rfeed, EMPTY);
   array_free (fdchange, EMPTY);
   array_free (timer, EMPTY);
-#if EV_PERIODIC_ENABLE
+#if LIBEV_PERIODIC_ENABLE
   array_free (periodic, EMPTY);
 #endif
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
   array_free (fork, EMPTY);
 #endif
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
   array_free (cleanup, EMPTY);
 #endif
   array_free (prepare, EMPTY);
   array_free (check, EMPTY);
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
   array_free (async, EMPTY);
 #endif
 
   backend = 0;
 
-#if EV_MULTIPLICITY
-  if (ev_is_default_loop (EV_A))
+#if LIBEV_MULTIPLICITY
+  if (ev_is_default_loop (LIBEV_A))
 #endif
     ev_default_loop_ptr = 0;
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   else
-    ev_free (EV_A);
+    ev_free (LIBEV_A);
 #endif
 }
 
-#if EV_USE_INOTIFY
-inline_size void infy_fork (EV_P);
+#if LIBEV_USE_INOTIFY
+inline_size void infy_fork (LIBEV_P);
 #endif
 
 inline_size void
-loop_fork (EV_P)
+loop_fork (LIBEV_P)
 {
-#if EV_USE_PORT
-  if (backend == EVBACKEND_PORT  ) port_fork   (EV_A);
+#if LIBEV_USE_PORT
+  if (backend == LIBEVBACKEND_PORT  ) port_fork   (LIBEV_A);
 #endif
-#if EV_USE_KQUEUE
-  if (backend == EVBACKEND_KQUEUE) kqueue_fork (EV_A);
+#if LIBEV_USE_KQUEUE
+  if (backend == LIBEVBACKEND_KQUEUE) kqueue_fork (LIBEV_A);
 #endif
-#if EV_USE_EPOLL
-  if (backend == EVBACKEND_EPOLL ) epoll_fork  (EV_A);
+#if LIBEV_USE_EPOLL
+  if (backend == LIBEVBACKEND_EPOLL ) epoll_fork  (LIBEV_A);
 #endif
-#if EV_USE_INOTIFY
-  infy_fork (EV_A);
+#if LIBEV_USE_INOTIFY
+  infy_fork (LIBEV_A);
 #endif
 
-#if EV_SIGNAL_ENABLE || EV_ASYNC_ENABLE
+#if LIBEV_SIGNAL_ENABLE || LIBEV_ASYNC_ENABLE
   if (ev_is_active (&pipe_w) && postfork != 2)
     {
       /* pipe_write_wanted must be false now, so modifying fd vars should be safe */
 
-      ev_ref (EV_A);
-      ev_io_stop (EV_A_ &pipe_w);
+      ev_ref (LIBEV_A);
+      ev_io_stop (LIBEV_A_ &pipe_w);
 
       if (evpipe [0] >= 0)
-        EV_WIN32_CLOSE_FD (evpipe [0]);
+        LIBEV_WIN32_CLOSE_FD (evpipe [0]);
 
-      evpipe_init (EV_A);
+      evpipe_init (LIBEV_A);
       /* iterate over everything, in case we missed something before */
-      ev_feed_event (EV_A_ &pipe_w, EV_CUSTOM);
+      ev_feed_event (LIBEV_A_ &pipe_w, LIBEV_CUSTOM);
     }
 #endif
 
   postfork = 0;
 }
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
 
-struct ev_loop * ecb_cold
-ev_loop_new (unsigned int flags) EV_THROW
+ecb_cold
+struct ev_loop *
+ev_loop_new (unsigned int flags) LIBEV_THROW
 {
-  EV_P = (struct ev_loop *)ev_malloc (sizeof (struct ev_loop));
+  LIBEV_P = (struct ev_loop *)ev_malloc (sizeof (struct ev_loop));
 
-  memset (EV_A, 0, sizeof (struct ev_loop));
-  loop_init (EV_A_ flags);
+  memset (LIBEV_A, 0, sizeof (struct ev_loop));
+  loop_init (LIBEV_A_ flags);
 
-  if (ev_backend (EV_A))
-    return EV_A;
+  if (ev_backend (LIBEV_A))
+    return LIBEV_A;
 
-  ev_free (EV_A);
+  ev_free (LIBEV_A);
   return 0;
 }
 
 #endif /* multiplicity */
 
-#if EV_VERIFY
-static void noinline ecb_cold
-verify_watcher (EV_P_ W w)
+#if LIBEV_VERIFY
+noinline ecb_cold
+static void
+verify_watcher (LIBEV_P_ W w)
 {
   assert (("libev: watcher has invalid priority", ABSPRI (w) >= 0 && ABSPRI (w) < NUMPRI));
 
@@ -3099,8 +3121,9 @@ verify_watcher (EV_P_ W w)
     assert (("libev: pending watcher not on pending queue", pendings [ABSPRI (w)][w->pending - 1].w == w));
 }
 
-static void noinline ecb_cold
-verify_heap (EV_P_ ANHE *heap, int N)
+noinline ecb_cold
+static void
+verify_heap (LIBEV_P_ ANHE *heap, int N)
 {
   int i;
 
@@ -3110,26 +3133,27 @@ verify_heap (EV_P_ ANHE *heap, int N)
       assert (("libev: heap condition violated", i == HEAP0 || ANHE_at (heap [HPARENT (i)]) <= ANHE_at (heap [i])));
       assert (("libev: heap at cache mismatch", ANHE_at (heap [i]) == ev_at (ANHE_w (heap [i]))));
 
-      verify_watcher (EV_A_ (W)ANHE_w (heap [i]));
+      verify_watcher (LIBEV_A_ (W)ANHE_w (heap [i]));
     }
 }
 
-static void noinline ecb_cold
-array_verify (EV_P_ W *ws, int cnt)
+noinline ecb_cold
+static void
+array_verify (LIBEV_P_ W *ws, int cnt)
 {
   while (cnt--)
     {
       assert (("libev: active index mismatch", ev_active (ws [cnt]) == cnt + 1));
-      verify_watcher (EV_A_ ws [cnt]);
+      verify_watcher (LIBEV_A_ ws [cnt]);
     }
 }
 #endif
 
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
 void ecb_cold
-ev_verify (EV_P) EV_THROW
+ev_verify (LIBEV_P) LIBEV_THROW
 {
-#if EV_VERIFY
+#if LIBEV_VERIFY
   int i;
   WL w, w2;
 
@@ -3146,7 +3170,7 @@ ev_verify (EV_P) EV_THROW
 
       for (w = w2 = anfds [i].head; w; w = w->next)
         {
-          verify_watcher (EV_A_ (W)w);
+          verify_watcher (LIBEV_A_ (W)w);
 
           if (j++ & 1)
             {
@@ -3160,82 +3184,83 @@ ev_verify (EV_P) EV_THROW
     }
 
   assert (timermax >= timercnt);
-  verify_heap (EV_A_ timers, timercnt);
+  verify_heap (LIBEV_A_ timers, timercnt);
 
-#if EV_PERIODIC_ENABLE
+#if LIBEV_PERIODIC_ENABLE
   assert (periodicmax >= periodiccnt);
-  verify_heap (EV_A_ periodics, periodiccnt);
+  verify_heap (LIBEV_A_ periodics, periodiccnt);
 #endif
 
   for (i = NUMPRI; i--; )
     {
       assert (pendingmax [i] >= pendingcnt [i]);
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
       assert (idleall >= 0);
       assert (idlemax [i] >= idlecnt [i]);
-      array_verify (EV_A_ (W *)idles [i], idlecnt [i]);
+      array_verify (LIBEV_A_ (W *)idles [i], idlecnt [i]);
 #endif
     }
 
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
   assert (forkmax >= forkcnt);
-  array_verify (EV_A_ (W *)forks, forkcnt);
+  array_verify (LIBEV_A_ (W *)forks, forkcnt);
 #endif
 
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
   assert (cleanupmax >= cleanupcnt);
-  array_verify (EV_A_ (W *)cleanups, cleanupcnt);
+  array_verify (LIBEV_A_ (W *)cleanups, cleanupcnt);
 #endif
 
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
   assert (asyncmax >= asynccnt);
-  array_verify (EV_A_ (W *)asyncs, asynccnt);
+  array_verify (LIBEV_A_ (W *)asyncs, asynccnt);
 #endif
 
-#if EV_PREPARE_ENABLE
+#if LIBEV_PREPARE_ENABLE
   assert (preparemax >= preparecnt);
-  array_verify (EV_A_ (W *)prepares, preparecnt);
+  array_verify (LIBEV_A_ (W *)prepares, preparecnt);
 #endif
 
-#if EV_CHECK_ENABLE
+#if LIBEV_CHECK_ENABLE
   assert (checkmax >= checkcnt);
-  array_verify (EV_A_ (W *)checks, checkcnt);
+  array_verify (LIBEV_A_ (W *)checks, checkcnt);
 #endif
 
 # if 0
-#if EV_CHILD_ENABLE
-  for (w = (ev_child *)childs [chain & ((EV_PID_HASHSIZE) - 1)]; w; w = (ev_child *)((WL)w)->next)
-  for (signum = EV_NSIG; signum--; ) if (signals [signum].pending)
+#if LIBEV_CHILD_ENABLE
+  for (w = (ev_child *)childs [chain & ((LIBEV_PID_HASHSIZE) - 1)]; w; w = (ev_child *)((WL)w)->next)
+  for (signum = LIBEV_NSIG; signum--; ) if (signals [signum].pending)
 #endif
 # endif
 #endif
 }
 #endif
 
-#if EV_MULTIPLICITY
-struct ev_loop * ecb_cold
+#if LIBEV_MULTIPLICITY
+ecb_cold
+struct ev_loop *
 #else
 int
 #endif
-ev_default_loop (unsigned int flags) EV_THROW
+ev_default_loop (unsigned int flags) LIBEV_THROW
 {
   if (!ev_default_loop_ptr)
     {
-#if EV_MULTIPLICITY
-      EV_P = ev_default_loop_ptr = &default_loop_struct;
+#if LIBEV_MULTIPLICITY
+      LIBEV_P = ev_default_loop_ptr = &default_loop_struct;
 #else
       ev_default_loop_ptr = 1;
 #endif
 
-      loop_init (EV_A_ flags);
+      loop_init (LIBEV_A_ flags);
 
-      if (ev_backend (EV_A))
+      if (ev_backend (LIBEV_A))
         {
-#if EV_CHILD_ENABLE
+#if LIBEV_CHILD_ENABLE
           ev_signal_init (&childev, childcb, SIGCHLD);
-          ev_set_priority (&childev, EV_MAXPRI);
-          ev_signal_start (EV_A_ &childev);
-          ev_unref (EV_A); /* child watcher should not keep loop alive */
+          ev_set_priority (&childev, LIBEV_MAXPRI);
+          ev_signal_start (LIBEV_A_ &childev);
+          ev_unref (LIBEV_A); /* child watcher should not keep loop alive */
 #endif
         }
       else
@@ -3246,7 +3271,7 @@ ev_default_loop (unsigned int flags) EV_THROW
 }
 
 void
-ev_loop_fork (EV_P) EV_THROW
+ev_loop_fork (LIBEV_P) LIBEV_THROW
 {
   postfork = 1;
 }
@@ -3254,13 +3279,13 @@ ev_loop_fork (EV_P) EV_THROW
 /*****************************************************************************/
 
 void
-ev_invoke (EV_P_ void *w, int revents)
+ev_invoke (LIBEV_P_ void *w, int revents)
 {
-  EV_CB_INVOKE ((W)w, revents);
+  LIBEV_CB_INVOKE ((W)w, revents);
 }
 
 unsigned int
-ev_pending_count (EV_P) EV_THROW
+ev_pending_count (LIBEV_P) LIBEV_THROW
 {
   int pri;
   unsigned int count = 0;
@@ -3271,8 +3296,9 @@ ev_pending_count (EV_P) EV_THROW
   return count;
 }
 
-void noinline
-ev_invoke_pending (EV_P)
+noinline
+void
+ev_invoke_pending (LIBEV_P)
 {
   pendingpri = NUMPRI;
 
@@ -3285,17 +3311,17 @@ ev_invoke_pending (EV_P)
           ANPENDING *p = pendings [pendingpri] + --pendingcnt [pendingpri];
 
           p->w->pending = 0;
-          EV_CB_INVOKE (p->w, p->events);
-          EV_FREQUENT_CHECK;
+          LIBEV_CB_INVOKE (p->w, p->events);
+          LIBEV_FREQUENT_CHECK;
         }
     }
 }
 
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
 /* make idle watchers pending. this handles the "call-idle */
 /* only when higher priorities are idle" logic */
 inline_size void
-idle_reify (EV_P)
+idle_reify (LIBEV_P)
 {
   if (expect_false (idleall))
     {
@@ -3308,7 +3334,7 @@ idle_reify (EV_P)
 
           if (idlecnt [pri])
             {
-              queue_events (EV_A_ (W *)idles [pri], idlecnt [pri], EV_IDLE);
+              queue_events (LIBEV_A_ (W *)idles [pri], idlecnt [pri], LIBEV_IDLE);
               break;
             }
         }
@@ -3318,9 +3344,9 @@ idle_reify (EV_P)
 
 /* make timers pending */
 inline_size void
-timers_reify (EV_P)
+timers_reify (LIBEV_P)
 {
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   if (timercnt && ANHE_at (timers [HEAP0]) < mn_now)
     {
@@ -3343,21 +3369,22 @@ timers_reify (EV_P)
               downheap (timers, timercnt, HEAP0);
             }
           else
-            ev_timer_stop (EV_A_ w); /* nonrepeating: stop timer */
+            ev_timer_stop (LIBEV_A_ w); /* nonrepeating: stop timer */
 
-          EV_FREQUENT_CHECK;
-          feed_reverse (EV_A_ (W)w);
+          LIBEV_FREQUENT_CHECK;
+          feed_reverse (LIBEV_A_ (W)w);
         }
       while (timercnt && ANHE_at (timers [HEAP0]) < mn_now);
 
-      feed_reverse_done (EV_A_ EV_TIMER);
+      feed_reverse_done (LIBEV_A_ LIBEV_TIMER);
     }
 }
 
-#if EV_PERIODIC_ENABLE
+#if LIBEV_PERIODIC_ENABLE
 
-static void noinline
-periodic_recalc (EV_P_ ev_periodic *w)
+noinline
+static void
+periodic_recalc (LIBEV_P_ ev_periodic *w)
 {
   ev_tstamp interval = w->interval > MIN_INTERVAL ? w->interval : MIN_INTERVAL;
   ev_tstamp at = w->offset + interval * ev_floor ((ev_rt_now - w->offset) / interval);
@@ -3382,9 +3409,9 @@ periodic_recalc (EV_P_ ev_periodic *w)
 
 /* make periodics pending */
 inline_size void
-periodics_reify (EV_P)
+periodics_reify (LIBEV_P)
 {
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   while (periodiccnt && ANHE_at (periodics [HEAP0]) < ev_rt_now)
     {
@@ -3406,26 +3433,27 @@ periodics_reify (EV_P)
             }
           else if (w->interval)
             {
-              periodic_recalc (EV_A_ w);
+              periodic_recalc (LIBEV_A_ w);
               ANHE_at_cache (periodics [HEAP0]);
               downheap (periodics, periodiccnt, HEAP0);
             }
           else
-            ev_periodic_stop (EV_A_ w); /* nonrepeating: stop timer */
+            ev_periodic_stop (LIBEV_A_ w); /* nonrepeating: stop timer */
 
-          EV_FREQUENT_CHECK;
-          feed_reverse (EV_A_ (W)w);
+          LIBEV_FREQUENT_CHECK;
+          feed_reverse (LIBEV_A_ (W)w);
         }
       while (periodiccnt && ANHE_at (periodics [HEAP0]) < ev_rt_now);
 
-      feed_reverse_done (EV_A_ EV_PERIODIC);
+      feed_reverse_done (LIBEV_A_ LIBEV_PERIODIC);
     }
 }
 
 /* simply recalculate all periodics */
 /* TODO: maybe ensure that at least one event happens when jumping forward? */
-static void noinline ecb_cold
-periodics_reschedule (EV_P)
+noinline ecb_cold
+static void
+periodics_reschedule (LIBEV_P)
 {
   int i;
 
@@ -3437,7 +3465,7 @@ periodics_reschedule (EV_P)
       if (w->reschedule_cb)
         ev_at (w) = w->reschedule_cb (w, ev_rt_now);
       else if (w->interval)
-        periodic_recalc (EV_A_ w);
+        periodic_recalc (LIBEV_A_ w);
 
       ANHE_at_cache (periodics [i]);
     }
@@ -3447,8 +3475,9 @@ periodics_reschedule (EV_P)
 #endif
 
 /* adjust all timers by a given offset */
-static void noinline ecb_cold
-timers_reschedule (EV_P_ ev_tstamp adjust)
+noinline ecb_cold
+static void
+timers_reschedule (LIBEV_P_ ev_tstamp adjust)
 {
   int i;
 
@@ -3463,9 +3492,9 @@ timers_reschedule (EV_P_ ev_tstamp adjust)
 /* fetch new monotonic and realtime times from the kernel */
 /* also detect if there was a timejump, and act accordingly */
 inline_speed void
-time_update (EV_P_ ev_tstamp max_block)
+time_update (LIBEV_P_ ev_tstamp max_block)
 {
-#if EV_USE_MONOTONIC
+#if LIBEV_USE_MONOTONIC
   if (expect_true (have_monotonic))
     {
       int i;
@@ -3508,9 +3537,9 @@ time_update (EV_P_ ev_tstamp max_block)
         }
 
       /* no timer adjustment, as the monotonic clock doesn't jump */
-      /* timers_reschedule (EV_A_ rtmn_diff - odiff) */
-# if EV_PERIODIC_ENABLE
-      periodics_reschedule (EV_A);
+      /* timers_reschedule (LIBEV_A_ rtmn_diff - odiff) */
+# if LIBEV_PERIODIC_ENABLE
+      periodics_reschedule (LIBEV_A);
 # endif
     }
   else
@@ -3521,9 +3550,9 @@ time_update (EV_P_ ev_tstamp max_block)
       if (expect_false (mn_now > ev_rt_now || ev_rt_now > mn_now + max_block + MIN_TIMEJUMP))
         {
           /* adjust timers. this is easy, as the offset is the same for all of them */
-          timers_reschedule (EV_A_ ev_rt_now - mn_now);
-#if EV_PERIODIC_ENABLE
-          periodics_reschedule (EV_A);
+          timers_reschedule (LIBEV_A_ ev_rt_now - mn_now);
+#if LIBEV_PERIODIC_ENABLE
+          periodics_reschedule (LIBEV_A);
 #endif
         }
 
@@ -3532,22 +3561,22 @@ time_update (EV_P_ ev_tstamp max_block)
 }
 
 int
-ev_run (EV_P_ int flags)
+ev_run (LIBEV_P_ int flags)
 {
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
   ++loop_depth;
 #endif
 
-  assert (("libev: ev_loop recursion during release detected", loop_done != EVBREAK_RECURSE));
+  assert (("libev: ev_loop recursion during release detected", loop_done != LIBEVBREAK_RECURSE));
 
-  loop_done = EVBREAK_CANCEL;
+  loop_done = LIBEVBREAK_CANCEL;
 
-  EV_INVOKE_PENDING; /* in case we recurse, ensure ordering stays nice and clean */
+  LIBEV_INVOKE_PENDING; /* in case we recurse, ensure ordering stays nice and clean */
 
   do
     {
-#if EV_VERIFY >= 2
-      ev_verify (EV_A);
+#if LIBEV_VERIFY >= 2
+      ev_verify (LIBEV_A);
 #endif
 
 #ifndef _WIN32
@@ -3559,22 +3588,22 @@ ev_run (EV_P_ int flags)
           }
 #endif
 
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
       /* we might have forked, so queue fork handlers */
       if (expect_false (postfork))
         if (forkcnt)
           {
-            queue_events (EV_A_ (W *)forks, forkcnt, EV_FORK);
-            EV_INVOKE_PENDING;
+            queue_events (LIBEV_A_ (W *)forks, forkcnt, LIBEV_FORK);
+            LIBEV_INVOKE_PENDING;
           }
 #endif
 
-#if EV_PREPARE_ENABLE
+#if LIBEV_PREPARE_ENABLE
       /* queue prepare watchers (and execute them) */
       if (expect_false (preparecnt))
         {
-          queue_events (EV_A_ (W *)prepares, preparecnt, EV_PREPARE);
-          EV_INVOKE_PENDING;
+          queue_events (LIBEV_A_ (W *)prepares, preparecnt, LIBEV_PREPARE);
+          LIBEV_INVOKE_PENDING;
         }
 #endif
 
@@ -3583,10 +3612,10 @@ ev_run (EV_P_ int flags)
 
       /* we might have forked, so reify kernel state if necessary */
       if (expect_false (postfork))
-        loop_fork (EV_A);
+        loop_fork (LIBEV_A);
 
       /* update fd-related kernel structures */
-      fd_reify (EV_A);
+      fd_reify (LIBEV_A);
 
       /* calculate blocking time */
       {
@@ -3597,14 +3626,14 @@ ev_run (EV_P_ int flags)
         ev_tstamp prev_mn_now = mn_now;
 
         /* update time to cancel out callback processing overhead */
-        time_update (EV_A_ 1e100);
+        time_update (LIBEV_A_ 1e100);
 
         /* from now on, we want a pipe-wake-up */
         pipe_write_wanted = 1;
 
         ECB_MEMORY_FENCE; /* make sure pipe_write_wanted is visible before we check for potential skips */
 
-        if (expect_true (!(flags & EVRUN_NOWAIT || idleall || !activecnt || pipe_write_skipped)))
+        if (expect_true (!(flags & LIBEVRUN_NOWAIT || idleall || !activecnt || pipe_write_skipped)))
           {
             waittime = MAX_BLOCKTIME;
 
@@ -3614,7 +3643,7 @@ ev_run (EV_P_ int flags)
                 if (waittime > to) waittime = to;
               }
 
-#if EV_PERIODIC_ENABLE
+#if LIBEV_PERIODIC_ENABLE
             if (periodiccnt)
               {
                 ev_tstamp to = ANHE_at (periodics [HEAP0]) - ev_rt_now;
@@ -3647,12 +3676,12 @@ ev_run (EV_P_ int flags)
               }
           }
 
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
         ++loop_count;
 #endif
-        assert ((loop_done = EVBREAK_RECURSE, 1)); /* assert for side effect */
-        backend_poll (EV_A_ waittime);
-        assert ((loop_done = EVBREAK_CANCEL, 1)); /* assert for side effect */
+        assert ((loop_done = LIBEVBREAK_RECURSE, 1)); /* assert for side effect */
+        backend_poll (LIBEV_A_ waittime);
+        assert ((loop_done = LIBEVBREAK_CANCEL, 1)); /* assert for side effect */
 
         pipe_write_wanted = 0; /* just an optimisation, no fence needed */
 
@@ -3660,43 +3689,43 @@ ev_run (EV_P_ int flags)
         if (pipe_write_skipped)
           {
             assert (("libev: pipe_w not active, but pipe not written", ev_is_active (&pipe_w)));
-            ev_feed_event (EV_A_ &pipe_w, EV_CUSTOM);
+            ev_feed_event (LIBEV_A_ &pipe_w, LIBEV_CUSTOM);
           }
 
 
         /* update ev_rt_now, do magic */
-        time_update (EV_A_ waittime + sleeptime);
+        time_update (LIBEV_A_ waittime + sleeptime);
       }
 
       /* queue pending timers and reschedule them */
-      timers_reify (EV_A); /* relative timers called last */
-#if EV_PERIODIC_ENABLE
-      periodics_reify (EV_A); /* absolute timers called first */
+      timers_reify (LIBEV_A); /* relative timers called last */
+#if LIBEV_PERIODIC_ENABLE
+      periodics_reify (LIBEV_A); /* absolute timers called first */
 #endif
 
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
       /* queue idle watchers unless other events are pending */
-      idle_reify (EV_A);
+      idle_reify (LIBEV_A);
 #endif
 
-#if EV_CHECK_ENABLE
+#if LIBEV_CHECK_ENABLE
       /* queue check watchers, to be executed first */
       if (expect_false (checkcnt))
-        queue_events (EV_A_ (W *)checks, checkcnt, EV_CHECK);
+        queue_events (LIBEV_A_ (W *)checks, checkcnt, LIBEV_CHECK);
 #endif
 
-      EV_INVOKE_PENDING;
+      LIBEV_INVOKE_PENDING;
     }
   while (expect_true (
     activecnt
     && !loop_done
-    && !(flags & (EVRUN_ONCE | EVRUN_NOWAIT))
+    && !(flags & (LIBEVRUN_ONCE | LIBEVRUN_NOWAIT))
   ));
 
-  if (loop_done == EVBREAK_ONE)
-    loop_done = EVBREAK_CANCEL;
+  if (loop_done == LIBEVBREAK_ONE)
+    loop_done = LIBEVBREAK_CANCEL;
 
-#if EV_FEATURE_API
+#if LIBEV_FEATURE_API
   --loop_depth;
 #endif
 
@@ -3704,45 +3733,45 @@ ev_run (EV_P_ int flags)
 }
 
 void
-ev_break (EV_P_ int how) EV_THROW
+ev_break (LIBEV_P_ int how) LIBEV_THROW
 {
   loop_done = how;
 }
 
 void
-ev_ref (EV_P) EV_THROW
+ev_ref (LIBEV_P) LIBEV_THROW
 {
   ++activecnt;
 }
 
 void
-ev_unref (EV_P) EV_THROW
+ev_unref (LIBEV_P) LIBEV_THROW
 {
   --activecnt;
 }
 
 void
-ev_now_update (EV_P) EV_THROW
+ev_now_update (LIBEV_P) LIBEV_THROW
 {
-  time_update (EV_A_ 1e100);
+  time_update (LIBEV_A_ 1e100);
 }
 
 void
-ev_suspend (EV_P) EV_THROW
+ev_suspend (LIBEV_P) LIBEV_THROW
 {
-  ev_now_update (EV_A);
+  ev_now_update (LIBEV_A);
 }
 
 void
-ev_resume (EV_P) EV_THROW
+ev_resume (LIBEV_P) LIBEV_THROW
 {
   ev_tstamp mn_prev = mn_now;
 
-  ev_now_update (EV_A);
-  timers_reschedule (EV_A_ mn_now - mn_prev);
-#if EV_PERIODIC_ENABLE
+  ev_now_update (LIBEV_A);
+  timers_reschedule (LIBEV_A_ mn_now - mn_prev);
+#if LIBEV_PERIODIC_ENABLE
   /* TODO: really do this? */
-  periodics_reschedule (EV_A);
+  periodics_reschedule (LIBEV_A);
 #endif
 }
 
@@ -3773,7 +3802,7 @@ wlist_del (WL *head, WL elem)
 
 /* internal, faster, version of ev_clear_pending */
 inline_speed void
-clear_pending (EV_P_ W w)
+clear_pending (LIBEV_P_ W w)
 {
   if (w->pending)
     {
@@ -3783,7 +3812,7 @@ clear_pending (EV_P_ W w)
 }
 
 int
-ev_clear_pending (EV_P_ void *w) EV_THROW
+ev_clear_pending (LIBEV_P_ void *w) LIBEV_THROW
 {
   W w_ = (W)w;
   int pending = w_->pending;
@@ -3800,33 +3829,34 @@ ev_clear_pending (EV_P_ void *w) EV_THROW
 }
 
 inline_size void
-pri_adjust (EV_P_ W w)
+pri_adjust (LIBEV_P_ W w)
 {
   int pri = ev_priority (w);
-  pri = pri < EV_MINPRI ? EV_MINPRI : pri;
-  pri = pri > EV_MAXPRI ? EV_MAXPRI : pri;
+  pri = pri < LIBEV_MINPRI ? LIBEV_MINPRI : pri;
+  pri = pri > LIBEV_MAXPRI ? LIBEV_MAXPRI : pri;
   ev_set_priority (w, pri);
 }
 
 inline_speed void
-ev_start (EV_P_ W w, int active)
+ev_start (LIBEV_P_ W w, int active)
 {
-  pri_adjust (EV_A_ w);
+  pri_adjust (LIBEV_A_ w);
   w->active = active;
-  ev_ref (EV_A);
+  ev_ref (LIBEV_A);
 }
 
 inline_size void
-ev_stop (EV_P_ W w)
+ev_stop (LIBEV_P_ W w)
 {
-  ev_unref (EV_A);
+  ev_unref (LIBEV_A);
   w->active = 0;
 }
 
 /*****************************************************************************/
 
-void noinline
-ev_io_start (EV_P_ ev_io *w) EV_THROW
+noinline
+void
+ev_io_start (LIBEV_P_ ev_io *w) LIBEV_THROW
 {
   int fd = w->fd;
 
@@ -3834,44 +3864,46 @@ ev_io_start (EV_P_ ev_io *w) EV_THROW
     return;
 
   assert (("libev: ev_io_start called with negative fd", fd >= 0));
-  assert (("libev: ev_io_start called with illegal event mask", !(w->events & ~(EV__IOFDSET | EV_READ | EV_WRITE))));
+  assert (("libev: ev_io_start called with illegal event mask", !(w->events & ~(LIBEV__IOFDSET | LIBEV_READ | LIBEV_WRITE))));
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, 1);
+  ev_start (LIBEV_A_ (W)w, 1);
   array_needsize (ANFD, anfds, anfdmax, fd + 1, array_init_zero);
   wlist_add (&anfds[fd].head, (WL)w);
 
   /* common bug, apparently */
   assert (("libev: ev_io_start called with corrupted watcher", ((WL)w)->next != (WL)w));
 
-  fd_change (EV_A_ fd, w->events & EV__IOFDSET | EV_ANFD_REIFY);
-  w->events &= ~EV__IOFDSET;
+  fd_change (LIBEV_A_ fd, w->events & LIBEV__IOFDSET | LIBEV_ANFD_REIFY);
+  w->events &= ~LIBEV__IOFDSET;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
-void noinline
-ev_io_stop (EV_P_ ev_io *w) EV_THROW
+noinline
+void
+ev_io_stop (LIBEV_P_ ev_io *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
   assert (("libev: ev_io_stop called with illegal fd (must stay constant after start!)", w->fd >= 0 && w->fd < anfdmax));
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   wlist_del (&anfds[w->fd].head, (WL)w);
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  fd_change (EV_A_ w->fd, EV_ANFD_REIFY);
+  fd_change (LIBEV_A_ w->fd, LIBEV_ANFD_REIFY);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
-void noinline
-ev_timer_start (EV_P_ ev_timer *w) EV_THROW
+noinline
+void
+ev_timer_start (LIBEV_P_ ev_timer *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
@@ -3880,28 +3912,29 @@ ev_timer_start (EV_P_ ev_timer *w) EV_THROW
 
   assert (("libev: ev_timer_start called with negative timer repeat value", w->repeat >= 0.));
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   ++timercnt;
-  ev_start (EV_A_ (W)w, timercnt + HEAP0 - 1);
+  ev_start (LIBEV_A_ (W)w, timercnt + HEAP0 - 1);
   array_needsize (ANHE, timers, timermax, ev_active (w) + 1, EMPTY2);
   ANHE_w (timers [ev_active (w)]) = (WT)w;
   ANHE_at_cache (timers [ev_active (w)]);
   upheap (timers, ev_active (w));
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   /*assert (("libev: internal timer heap corruption", timers [ev_active (w)] == (WT)w));*/
 }
 
-void noinline
-ev_timer_stop (EV_P_ ev_timer *w) EV_THROW
+noinline
+void
+ev_timer_stop (LIBEV_P_ ev_timer *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -3919,17 +3952,18 @@ ev_timer_stop (EV_P_ ev_timer *w) EV_THROW
 
   ev_at (w) -= mn_now;
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
-void noinline
-ev_timer_again (EV_P_ ev_timer *w) EV_THROW
+noinline
+void
+ev_timer_again (LIBEV_P_ ev_timer *w) LIBEV_THROW
 {
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
 
   if (ev_is_active (w))
     {
@@ -3940,26 +3974,27 @@ ev_timer_again (EV_P_ ev_timer *w) EV_THROW
           adjustheap (timers, timercnt, ev_active (w));
         }
       else
-        ev_timer_stop (EV_A_ w);
+        ev_timer_stop (LIBEV_A_ w);
     }
   else if (w->repeat)
     {
       ev_at (w) = w->repeat;
-      ev_timer_start (EV_A_ w);
+      ev_timer_start (LIBEV_A_ w);
     }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 ev_tstamp
-ev_timer_remaining (EV_P_ ev_timer *w) EV_THROW
+ev_timer_remaining (LIBEV_P_ ev_timer *w) LIBEV_THROW
 {
   return ev_at (w) - (ev_is_active (w) ? mn_now : 0.);
 }
 
-#if EV_PERIODIC_ENABLE
-void noinline
-ev_periodic_start (EV_P_ ev_periodic *w) EV_THROW
+#if LIBEV_PERIODIC_ENABLE
+noinline
+void
+ev_periodic_start (LIBEV_P_ ev_periodic *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
@@ -3969,33 +4004,34 @@ ev_periodic_start (EV_P_ ev_periodic *w) EV_THROW
   else if (w->interval)
     {
       assert (("libev: ev_periodic_start called with negative interval value", w->interval >= 0.));
-      periodic_recalc (EV_A_ w);
+      periodic_recalc (LIBEV_A_ w);
     }
   else
     ev_at (w) = w->offset;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   ++periodiccnt;
-  ev_start (EV_A_ (W)w, periodiccnt + HEAP0 - 1);
+  ev_start (LIBEV_A_ (W)w, periodiccnt + HEAP0 - 1);
   array_needsize (ANHE, periodics, periodicmax, ev_active (w) + 1, EMPTY2);
   ANHE_w (periodics [ev_active (w)]) = (WT)w;
   ANHE_at_cache (periodics [ev_active (w)]);
   upheap (periodics, ev_active (w));
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   /*assert (("libev: internal periodic heap corruption", ANHE_w (periodics [ev_active (w)]) == (WT)w));*/
 }
 
-void noinline
-ev_periodic_stop (EV_P_ ev_periodic *w) EV_THROW
+noinline
+void
+ev_periodic_stop (LIBEV_P_ ev_periodic *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4011,17 +4047,18 @@ ev_periodic_stop (EV_P_ ev_periodic *w) EV_THROW
       }
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
-void noinline
-ev_periodic_again (EV_P_ ev_periodic *w) EV_THROW
+noinline
+void
+ev_periodic_again (LIBEV_P_ ev_periodic *w) LIBEV_THROW
 {
   /* TODO: use adjustheap and recalculation */
-  ev_periodic_stop (EV_A_ w);
-  ev_periodic_start (EV_A_ w);
+  ev_periodic_stop (LIBEV_A_ w);
+  ev_periodic_start (LIBEV_A_ w);
 }
 #endif
 
@@ -4029,27 +4066,28 @@ ev_periodic_again (EV_P_ ev_periodic *w) EV_THROW
 # define SA_RESTART 0
 #endif
 
-#if EV_SIGNAL_ENABLE
+#if LIBEV_SIGNAL_ENABLE
 
-void noinline
-ev_signal_start (EV_P_ ev_signal *w) EV_THROW
+noinline
+void
+ev_signal_start (LIBEV_P_ ev_signal *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  assert (("libev: ev_signal_start called with illegal signal number", w->signum > 0 && w->signum < EV_NSIG));
+  assert (("libev: ev_signal_start called with illegal signal number", w->signum > 0 && w->signum < LIBEV_NSIG));
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   assert (("libev: a signal must not be attached to two different loops",
            !signals [w->signum - 1].loop || signals [w->signum - 1].loop == loop));
 
-  signals [w->signum - 1].loop = EV_A;
+  signals [w->signum - 1].loop = LIBEV_A;
   ECB_MEMORY_FENCE_RELEASE;
 #endif
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-#if EV_USE_SIGNALFD
+#if LIBEV_USE_SIGNALFD
   if (sigfd == -2)
     {
       sigfd = signalfd (-1, &sigfd_set, SFD_NONBLOCK | SFD_CLOEXEC);
@@ -4062,10 +4100,10 @@ ev_signal_start (EV_P_ ev_signal *w) EV_THROW
 
           sigemptyset (&sigfd_set);
 
-          ev_io_init (&sigfd_w, sigfdcb, sigfd, EV_READ);
-          ev_set_priority (&sigfd_w, EV_MAXPRI);
-          ev_io_start (EV_A_ &sigfd_w);
-          ev_unref (EV_A); /* signalfd watcher should not keep loop alive */
+          ev_io_init (&sigfd_w, sigfdcb, sigfd, LIBEV_READ);
+          ev_set_priority (&sigfd_w, LIBEV_MAXPRI);
+          ev_io_start (LIBEV_A_ &sigfd_w);
+          ev_unref (LIBEV_A); /* signalfd watcher should not keep loop alive */
         }
     }
 
@@ -4079,29 +4117,29 @@ ev_signal_start (EV_P_ ev_signal *w) EV_THROW
     }
 #endif
 
-  ev_start (EV_A_ (W)w, 1);
+  ev_start (LIBEV_A_ (W)w, 1);
   wlist_add (&signals [w->signum - 1].head, (WL)w);
 
   if (!((WL)w)->next)
-# if EV_USE_SIGNALFD
+# if LIBEV_USE_SIGNALFD
     if (sigfd < 0) /*TODO*/
 # endif
       {
 # ifdef _WIN32
-        evpipe_init (EV_A);
+        evpipe_init (LIBEV_A);
 
         signal (w->signum, ev_sighandler);
 # else
         struct sigaction sa;
 
-        evpipe_init (EV_A);
+        evpipe_init (LIBEV_A);
 
         sa.sa_handler = ev_sighandler;
         sigfillset (&sa.sa_mask);
         sa.sa_flags = SA_RESTART; /* if restarting works we save one iteration */
         sigaction (w->signum, &sa, 0);
 
-        if (origflags & EVFLAG_NOSIGMASK)
+        if (origflags & LIBEVFLAG_NOSIGMASK)
           {
             sigemptyset (&sa.sa_mask);
             sigaddset (&sa.sa_mask, w->signum);
@@ -4110,27 +4148,28 @@ ev_signal_start (EV_P_ ev_signal *w) EV_THROW
 #endif
       }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
-void noinline
-ev_signal_stop (EV_P_ ev_signal *w) EV_THROW
+noinline
+void
+ev_signal_stop (LIBEV_P_ ev_signal *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   wlist_del (&signals [w->signum - 1].head, (WL)w);
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
   if (!signals [w->signum - 1].head)
     {
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
       signals [w->signum - 1].loop = 0; /* unattach from signal */
 #endif
-#if EV_USE_SIGNALFD
+#if LIBEV_USE_SIGNALFD
       if (sigfd >= 0)
         {
           sigset_t ss;
@@ -4147,48 +4186,48 @@ ev_signal_stop (EV_P_ ev_signal *w) EV_THROW
         signal (w->signum, SIG_DFL);
     }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 #endif
 
-#if EV_CHILD_ENABLE
+#if LIBEV_CHILD_ENABLE
 
 void
-ev_child_start (EV_P_ ev_child *w) EV_THROW
+ev_child_start (LIBEV_P_ ev_child *w) LIBEV_THROW
 {
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   assert (("libev: child watchers are only supported in the default loop", loop == ev_default_loop_ptr));
 #endif
   if (expect_false (ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, 1);
-  wlist_add (&childs [w->pid & ((EV_PID_HASHSIZE) - 1)], (WL)w);
+  ev_start (LIBEV_A_ (W)w, 1);
+  wlist_add (&childs [w->pid & ((LIBEV_PID_HASHSIZE) - 1)], (WL)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_child_stop (EV_P_ ev_child *w) EV_THROW
+ev_child_stop (LIBEV_P_ ev_child *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  wlist_del (&childs [w->pid & ((EV_PID_HASHSIZE) - 1)], (WL)w);
-  ev_stop (EV_A_ (W)w);
+  wlist_del (&childs [w->pid & ((LIBEV_PID_HASHSIZE) - 1)], (WL)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 #endif
 
-#if EV_STAT_ENABLE
+#if LIBEV_STAT_ENABLE
 
 # ifdef _WIN32
 #  undef lstat
@@ -4199,15 +4238,16 @@ ev_child_stop (EV_P_ ev_child *w) EV_THROW
 #define NFS_STAT_INTERVAL 30.1074891 /* for filesystems potentially failing inotify */
 #define MIN_STAT_INTERVAL  0.1074891
 
-static void noinline stat_timer_cb (EV_P_ ev_timer *w_, int revents);
+noinline static void stat_timer_cb (LIBEV_P_ ev_timer *w_, int revents);
 
-#if EV_USE_INOTIFY
+#if LIBEV_USE_INOTIFY
 
 /* the * 2 is to allow for alignment padding, which for some reason is >> 8 */
-# define EV_INOTIFY_BUFSIZE (sizeof (struct inotify_event) * 2 + NAME_MAX)
+# define LIBEV_INOTIFY_BUFSIZE (sizeof (struct inotify_event) * 2 + NAME_MAX)
 
-static void noinline
-infy_add (EV_P_ ev_stat *w)
+noinline
+static void
+infy_add (LIBEV_P_ ev_stat *w)
 {
   w->wd = inotify_add_watch (fs_fd, w->path,
                              IN_ATTRIB | IN_DELETE_SELF | IN_MOVE_SELF | IN_MODIFY
@@ -4272,16 +4312,17 @@ infy_add (EV_P_ ev_stat *w)
     }
 
   if (w->wd >= 0)
-    wlist_add (&fs_hash [w->wd & ((EV_INOTIFY_HASHSIZE) - 1)].head, (WL)w);
+    wlist_add (&fs_hash [w->wd & ((LIBEV_INOTIFY_HASHSIZE) - 1)].head, (WL)w);
 
   /* now re-arm timer, if required */
-  if (ev_is_active (&w->timer)) ev_ref (EV_A);
-  ev_timer_again (EV_A_ &w->timer);
-  if (ev_is_active (&w->timer)) ev_unref (EV_A);
+  if (ev_is_active (&w->timer)) ev_ref (LIBEV_A);
+  ev_timer_again (LIBEV_A_ &w->timer);
+  if (ev_is_active (&w->timer)) ev_unref (LIBEV_A);
 }
 
-static void noinline
-infy_del (EV_P_ ev_stat *w)
+noinline
+static void
+infy_del (LIBEV_P_ ev_stat *w)
 {
   int slot;
   int wd = w->wd;
@@ -4290,25 +4331,26 @@ infy_del (EV_P_ ev_stat *w)
     return;
 
   w->wd = -2;
-  slot = wd & ((EV_INOTIFY_HASHSIZE) - 1);
+  slot = wd & ((LIBEV_INOTIFY_HASHSIZE) - 1);
   wlist_del (&fs_hash [slot].head, (WL)w);
 
   /* remove this watcher, if others are watching it, they will rearm */
   inotify_rm_watch (fs_fd, wd);
 }
 
-static void noinline
-infy_wd (EV_P_ int slot, int wd, struct inotify_event *ev)
+noinline
+static void
+infy_wd (LIBEV_P_ int slot, int wd, struct inotify_event *ev)
 {
   if (slot < 0)
     /* overflow, need to check for all hash slots */
-    for (slot = 0; slot < (EV_INOTIFY_HASHSIZE); ++slot)
-      infy_wd (EV_A_ slot, wd, ev);
+    for (slot = 0; slot < (LIBEV_INOTIFY_HASHSIZE); ++slot)
+      infy_wd (LIBEV_A_ slot, wd, ev);
   else
     {
       WL w_;
 
-      for (w_ = fs_hash [slot & ((EV_INOTIFY_HASHSIZE) - 1)].head; w_; )
+      for (w_ = fs_hash [slot & ((LIBEV_INOTIFY_HASHSIZE) - 1)].head; w_; )
         {
           ev_stat *w = (ev_stat *)w_;
           w_ = w_->next; /* lets us remove this watcher and all before it */
@@ -4317,34 +4359,35 @@ infy_wd (EV_P_ int slot, int wd, struct inotify_event *ev)
             {
               if (ev->mask & (IN_IGNORED | IN_UNMOUNT | IN_DELETE_SELF))
                 {
-                  wlist_del (&fs_hash [slot & ((EV_INOTIFY_HASHSIZE) - 1)].head, (WL)w);
+                  wlist_del (&fs_hash [slot & ((LIBEV_INOTIFY_HASHSIZE) - 1)].head, (WL)w);
                   w->wd = -1;
-                  infy_add (EV_A_ w); /* re-add, no matter what */
+                  infy_add (LIBEV_A_ w); /* re-add, no matter what */
                 }
 
-              stat_timer_cb (EV_A_ &w->timer, 0);
+              stat_timer_cb (LIBEV_A_ &w->timer, 0);
             }
         }
     }
 }
 
 static void
-infy_cb (EV_P_ ev_io *w, int revents)
+infy_cb (LIBEV_P_ ev_io *w, int revents)
 {
-  char buf [EV_INOTIFY_BUFSIZE];
+  char buf [LIBEV_INOTIFY_BUFSIZE];
   int ofs;
   int len = read (fs_fd, buf, sizeof (buf));
 
   for (ofs = 0; ofs < len; )
     {
       struct inotify_event *ev = (struct inotify_event *)(buf + ofs);
-      infy_wd (EV_A_ ev->wd, ev->wd, ev);
+      infy_wd (LIBEV_A_ ev->wd, ev->wd, ev);
       ofs += sizeof (struct inotify_event) + ev->len;
     }
 }
 
-inline_size void ecb_cold
-ev_check_2625 (EV_P)
+inline_size ecb_cold
+void
+ev_check_2625 (LIBEV_P)
 {
   /* kernels < 2.6.25 are borked
    * http://www.ussg.indiana.edu/hypermail/linux/kernel/0711.3/1208.html
@@ -4367,49 +4410,49 @@ infy_newfd (void)
 }
 
 inline_size void
-infy_init (EV_P)
+infy_init (LIBEV_P)
 {
   if (fs_fd != -2)
     return;
 
   fs_fd = -1;
 
-  ev_check_2625 (EV_A);
+  ev_check_2625 (LIBEV_A);
 
   fs_fd = infy_newfd ();
 
   if (fs_fd >= 0)
     {
       fd_intern (fs_fd);
-      ev_io_init (&fs_w, infy_cb, fs_fd, EV_READ);
-      ev_set_priority (&fs_w, EV_MAXPRI);
-      ev_io_start (EV_A_ &fs_w);
-      ev_unref (EV_A);
+      ev_io_init (&fs_w, infy_cb, fs_fd, LIBEV_READ);
+      ev_set_priority (&fs_w, LIBEV_MAXPRI);
+      ev_io_start (LIBEV_A_ &fs_w);
+      ev_unref (LIBEV_A);
     }
 }
 
 inline_size void
-infy_fork (EV_P)
+infy_fork (LIBEV_P)
 {
   int slot;
 
   if (fs_fd < 0)
     return;
 
-  ev_ref (EV_A);
-  ev_io_stop (EV_A_ &fs_w);
+  ev_ref (LIBEV_A);
+  ev_io_stop (LIBEV_A_ &fs_w);
   close (fs_fd);
   fs_fd = infy_newfd ();
 
   if (fs_fd >= 0)
     {
       fd_intern (fs_fd);
-      ev_io_set (&fs_w, fs_fd, EV_READ);
-      ev_io_start (EV_A_ &fs_w);
-      ev_unref (EV_A);
+      ev_io_set (&fs_w, fs_fd, LIBEV_READ);
+      ev_io_start (LIBEV_A_ &fs_w);
+      ev_unref (LIBEV_A);
     }
 
-  for (slot = 0; slot < (EV_INOTIFY_HASHSIZE); ++slot)
+  for (slot = 0; slot < (LIBEV_INOTIFY_HASHSIZE); ++slot)
     {
       WL w_ = fs_hash [slot].head;
       fs_hash [slot].head = 0;
@@ -4422,13 +4465,13 @@ infy_fork (EV_P)
           w->wd = -1;
 
           if (fs_fd >= 0)
-            infy_add (EV_A_ w); /* re-add, no matter what */
+            infy_add (LIBEV_A_ w); /* re-add, no matter what */
           else
             {
               w->timer.repeat = w->interval ? w->interval : DEF_STAT_INTERVAL;
-              if (ev_is_active (&w->timer)) ev_ref (EV_A);
-              ev_timer_again (EV_A_ &w->timer);
-              if (ev_is_active (&w->timer)) ev_unref (EV_A);
+              if (ev_is_active (&w->timer)) ev_ref (LIBEV_A);
+              ev_timer_again (LIBEV_A_ &w->timer);
+              if (ev_is_active (&w->timer)) ev_unref (LIBEV_A);
             }
         }
     }
@@ -4437,13 +4480,13 @@ infy_fork (EV_P)
 #endif
 
 #ifdef _WIN32
-# define EV_LSTAT(p,b) _stati64 (p, b)
+# define LIBEV_LSTAT(p,b) _stati64 (p, b)
 #else
-# define EV_LSTAT(p,b) lstat (p, b)
+# define LIBEV_LSTAT(p,b) lstat (p, b)
 #endif
 
 void
-ev_stat_stat (EV_P_ ev_stat *w) EV_THROW
+ev_stat_stat (LIBEV_P_ ev_stat *w) LIBEV_THROW
 {
   if (lstat (w->path, &w->attr) < 0)
     w->attr.st_nlink = 0;
@@ -4451,13 +4494,14 @@ ev_stat_stat (EV_P_ ev_stat *w) EV_THROW
     w->attr.st_nlink = 1;
 }
 
-static void noinline
-stat_timer_cb (EV_P_ ev_timer *w_, int revents)
+noinline
+static void
+stat_timer_cb (LIBEV_P_ ev_timer *w_, int revents)
 {
   ev_stat *w = (ev_stat *)(((char *)w_) - offsetof (ev_stat, timer));
 
   ev_statdata prev = w->attr;
-  ev_stat_stat (EV_A_ w);
+  ev_stat_stat (LIBEV_A_ w);
 
   /* memcmp doesn't work on netbsd, they.... do stuff to their struct stat */
   if (
@@ -4478,26 +4522,26 @@ stat_timer_cb (EV_P_ ev_timer *w_, int revents)
       /* to ensure that prev is always different to attr */
       w->prev = prev;
 
-      #if EV_USE_INOTIFY
+      #if LIBEV_USE_INOTIFY
         if (fs_fd >= 0)
           {
-            infy_del (EV_A_ w);
-            infy_add (EV_A_ w);
-            ev_stat_stat (EV_A_ w); /* avoid race... */
+            infy_del (LIBEV_A_ w);
+            infy_add (LIBEV_A_ w);
+            ev_stat_stat (LIBEV_A_ w); /* avoid race... */
           }
       #endif
 
-      ev_feed_event (EV_A_ w, EV_STAT);
+      ev_feed_event (LIBEV_A_ w, LIBEV_STAT);
     }
 }
 
 void
-ev_stat_start (EV_P_ ev_stat *w) EV_THROW
+ev_stat_start (LIBEV_P_ ev_stat *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  ev_stat_stat (EV_A_ w);
+  ev_stat_stat (LIBEV_A_ w);
 
   if (w->interval < MIN_STAT_INTERVAL && w->interval)
     w->interval = MIN_STAT_INTERVAL;
@@ -4505,80 +4549,80 @@ ev_stat_start (EV_P_ ev_stat *w) EV_THROW
   ev_timer_init (&w->timer, stat_timer_cb, 0., w->interval ? w->interval : DEF_STAT_INTERVAL);
   ev_set_priority (&w->timer, ev_priority (w));
 
-#if EV_USE_INOTIFY
-  infy_init (EV_A);
+#if LIBEV_USE_INOTIFY
+  infy_init (LIBEV_A);
 
   if (fs_fd >= 0)
-    infy_add (EV_A_ w);
+    infy_add (LIBEV_A_ w);
   else
 #endif
     {
-      ev_timer_again (EV_A_ &w->timer);
-      ev_unref (EV_A);
+      ev_timer_again (LIBEV_A_ &w->timer);
+      ev_unref (LIBEV_A);
     }
 
-  ev_start (EV_A_ (W)w, 1);
+  ev_start (LIBEV_A_ (W)w, 1);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_stat_stop (EV_P_ ev_stat *w) EV_THROW
+ev_stat_stop (LIBEV_P_ ev_stat *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-#if EV_USE_INOTIFY
-  infy_del (EV_A_ w);
+#if LIBEV_USE_INOTIFY
+  infy_del (LIBEV_A_ w);
 #endif
 
   if (ev_is_active (&w->timer))
     {
-      ev_ref (EV_A);
-      ev_timer_stop (EV_A_ &w->timer);
+      ev_ref (LIBEV_A);
+      ev_timer_stop (LIBEV_A_ &w->timer);
     }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
 void
-ev_idle_start (EV_P_ ev_idle *w) EV_THROW
+ev_idle_start (LIBEV_P_ ev_idle *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  pri_adjust (EV_A_ (W)w);
+  pri_adjust (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ++idlecnt [ABSPRI (w)];
 
     ++idleall;
-    ev_start (EV_A_ (W)w, active);
+    ev_start (LIBEV_A_ (W)w, active);
 
     array_needsize (ev_idle *, idles [ABSPRI (w)], idlemax [ABSPRI (w)], active, EMPTY2);
     idles [ABSPRI (w)][active - 1] = w;
   }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_idle_stop (EV_P_ ev_idle *w) EV_THROW
+ev_idle_stop (LIBEV_P_ ev_idle *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4586,38 +4630,38 @@ ev_idle_stop (EV_P_ ev_idle *w) EV_THROW
     idles [ABSPRI (w)][active - 1] = idles [ABSPRI (w)][--idlecnt [ABSPRI (w)]];
     ev_active (idles [ABSPRI (w)][active - 1]) = active;
 
-    ev_stop (EV_A_ (W)w);
+    ev_stop (LIBEV_A_ (W)w);
     --idleall;
   }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_PREPARE_ENABLE
+#if LIBEV_PREPARE_ENABLE
 void
-ev_prepare_start (EV_P_ ev_prepare *w) EV_THROW
+ev_prepare_start (LIBEV_P_ ev_prepare *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, ++preparecnt);
+  ev_start (LIBEV_A_ (W)w, ++preparecnt);
   array_needsize (ev_prepare *, prepares, preparemax, preparecnt, EMPTY2);
   prepares [preparecnt - 1] = w;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_prepare_stop (EV_P_ ev_prepare *w) EV_THROW
+ev_prepare_stop (LIBEV_P_ ev_prepare *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4626,36 +4670,36 @@ ev_prepare_stop (EV_P_ ev_prepare *w) EV_THROW
     ev_active (prepares [active - 1]) = active;
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_CHECK_ENABLE
+#if LIBEV_CHECK_ENABLE
 void
-ev_check_start (EV_P_ ev_check *w) EV_THROW
+ev_check_start (LIBEV_P_ ev_check *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, ++checkcnt);
+  ev_start (LIBEV_A_ (W)w, ++checkcnt);
   array_needsize (ev_check *, checks, checkmax, checkcnt, EMPTY2);
   checks [checkcnt - 1] = w;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_check_stop (EV_P_ ev_check *w) EV_THROW
+ev_check_stop (LIBEV_P_ ev_check *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4664,145 +4708,146 @@ ev_check_stop (EV_P_ ev_check *w) EV_THROW
     ev_active (checks [active - 1]) = active;
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_EMBED_ENABLE
-void noinline
-ev_embed_sweep (EV_P_ ev_embed *w) EV_THROW
+#if LIBEV_EMBED_ENABLE
+noinline
+void
+ev_embed_sweep (LIBEV_P_ ev_embed *w) LIBEV_THROW
 {
-  ev_run (w->other, EVRUN_NOWAIT);
+  ev_run (w->other, LIBEVRUN_NOWAIT);
 }
 
 static void
-embed_io_cb (EV_P_ ev_io *io, int revents)
+embed_io_cb (LIBEV_P_ ev_io *io, int revents)
 {
   ev_embed *w = (ev_embed *)(((char *)io) - offsetof (ev_embed, io));
 
   if (ev_cb (w))
-    ev_feed_event (EV_A_ (W)w, EV_EMBED);
+    ev_feed_event (LIBEV_A_ (W)w, LIBEV_EMBED);
   else
-    ev_run (w->other, EVRUN_NOWAIT);
+    ev_run (w->other, LIBEVRUN_NOWAIT);
 }
 
 static void
-embed_prepare_cb (EV_P_ ev_prepare *prepare, int revents)
+embed_prepare_cb (LIBEV_P_ ev_prepare *prepare, int revents)
 {
   ev_embed *w = (ev_embed *)(((char *)prepare) - offsetof (ev_embed, prepare));
 
   {
-    EV_P = w->other;
+    LIBEV_P = w->other;
 
     while (fdchangecnt)
       {
-        fd_reify (EV_A);
-        ev_run (EV_A_ EVRUN_NOWAIT);
+        fd_reify (LIBEV_A);
+        ev_run (LIBEV_A_ LIBEVRUN_NOWAIT);
       }
   }
 }
 
 static void
-embed_fork_cb (EV_P_ ev_fork *fork_w, int revents)
+embed_fork_cb (LIBEV_P_ ev_fork *fork_w, int revents)
 {
   ev_embed *w = (ev_embed *)(((char *)fork_w) - offsetof (ev_embed, fork));
 
-  ev_embed_stop (EV_A_ w);
+  ev_embed_stop (LIBEV_A_ w);
 
   {
-    EV_P = w->other;
+    LIBEV_P = w->other;
 
-    ev_loop_fork (EV_A);
-    ev_run (EV_A_ EVRUN_NOWAIT);
+    ev_loop_fork (LIBEV_A);
+    ev_run (LIBEV_A_ LIBEVRUN_NOWAIT);
   }
 
-  ev_embed_start (EV_A_ w);
+  ev_embed_start (LIBEV_A_ w);
 }
 
 #if 0
 static void
-embed_idle_cb (EV_P_ ev_idle *idle, int revents)
+embed_idle_cb (LIBEV_P_ ev_idle *idle, int revents)
 {
-  ev_idle_stop (EV_A_ idle);
+  ev_idle_stop (LIBEV_A_ idle);
 }
 #endif
 
 void
-ev_embed_start (EV_P_ ev_embed *w) EV_THROW
+ev_embed_start (LIBEV_P_ ev_embed *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
   {
-    EV_P = w->other;
+    LIBEV_P = w->other;
     assert (("libev: loop to be embedded is not embeddable", backend & ev_embeddable_backends ()));
-    ev_io_init (&w->io, embed_io_cb, backend_fd, EV_READ);
+    ev_io_init (&w->io, embed_io_cb, backend_fd, LIBEV_READ);
   }
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   ev_set_priority (&w->io, ev_priority (w));
-  ev_io_start (EV_A_ &w->io);
+  ev_io_start (LIBEV_A_ &w->io);
 
   ev_prepare_init (&w->prepare, embed_prepare_cb);
-  ev_set_priority (&w->prepare, EV_MINPRI);
-  ev_prepare_start (EV_A_ &w->prepare);
+  ev_set_priority (&w->prepare, LIBEV_MINPRI);
+  ev_prepare_start (LIBEV_A_ &w->prepare);
 
   ev_fork_init (&w->fork, embed_fork_cb);
-  ev_fork_start (EV_A_ &w->fork);
+  ev_fork_start (LIBEV_A_ &w->fork);
 
   /*ev_idle_init (&w->idle, e,bed_idle_cb);*/
 
-  ev_start (EV_A_ (W)w, 1);
+  ev_start (LIBEV_A_ (W)w, 1);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_embed_stop (EV_P_ ev_embed *w) EV_THROW
+ev_embed_stop (LIBEV_P_ ev_embed *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_io_stop      (EV_A_ &w->io);
-  ev_prepare_stop (EV_A_ &w->prepare);
-  ev_fork_stop    (EV_A_ &w->fork);
+  ev_io_stop      (LIBEV_A_ &w->io);
+  ev_prepare_stop (LIBEV_A_ &w->prepare);
+  ev_fork_stop    (LIBEV_A_ &w->fork);
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
 void
-ev_fork_start (EV_P_ ev_fork *w) EV_THROW
+ev_fork_start (LIBEV_P_ ev_fork *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, ++forkcnt);
+  ev_start (LIBEV_A_ (W)w, ++forkcnt);
   array_needsize (ev_fork *, forks, forkmax, forkcnt, EMPTY2);
   forks [forkcnt - 1] = w;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_fork_stop (EV_P_ ev_fork *w) EV_THROW
+ev_fork_stop (LIBEV_P_ ev_fork *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4811,39 +4856,39 @@ ev_fork_stop (EV_P_ ev_fork *w) EV_THROW
     ev_active (forks [active - 1]) = active;
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
 void
-ev_cleanup_start (EV_P_ ev_cleanup *w) EV_THROW
+ev_cleanup_start (LIBEV_P_ ev_cleanup *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, ++cleanupcnt);
+  ev_start (LIBEV_A_ (W)w, ++cleanupcnt);
   array_needsize (ev_cleanup *, cleanups, cleanupmax, cleanupcnt, EMPTY2);
   cleanups [cleanupcnt - 1] = w;
 
   /* cleanup watchers should never keep a refcount on the loop */
-  ev_unref (EV_A);
-  EV_FREQUENT_CHECK;
+  ev_unref (LIBEV_A);
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_cleanup_stop (EV_P_ ev_cleanup *w) EV_THROW
+ev_cleanup_stop (LIBEV_P_ ev_cleanup *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
-  ev_ref (EV_A);
+  LIBEV_FREQUENT_CHECK;
+  ev_ref (LIBEV_A);
 
   {
     int active = ev_active (w);
@@ -4852,40 +4897,40 @@ ev_cleanup_stop (EV_P_ ev_cleanup *w) EV_THROW
     ev_active (cleanups [active - 1]) = active;
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 #endif
 
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
 void
-ev_async_start (EV_P_ ev_async *w) EV_THROW
+ev_async_start (LIBEV_P_ ev_async *w) LIBEV_THROW
 {
   if (expect_false (ev_is_active (w)))
     return;
 
   w->sent = 0;
 
-  evpipe_init (EV_A);
+  evpipe_init (LIBEV_A);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
-  ev_start (EV_A_ (W)w, ++asynccnt);
+  ev_start (LIBEV_A_ (W)w, ++asynccnt);
   array_needsize (ev_async *, asyncs, asyncmax, asynccnt, EMPTY2);
   asyncs [asynccnt - 1] = w;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_async_stop (EV_P_ ev_async *w) EV_THROW
+ev_async_stop (LIBEV_P_ ev_async *w) LIBEV_THROW
 {
-  clear_pending (EV_A_ (W)w);
+  clear_pending (LIBEV_A_ (W)w);
   if (expect_false (!ev_is_active (w)))
     return;
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 
   {
     int active = ev_active (w);
@@ -4894,16 +4939,16 @@ ev_async_stop (EV_P_ ev_async *w) EV_THROW
     ev_active (asyncs [active - 1]) = active;
   }
 
-  ev_stop (EV_A_ (W)w);
+  ev_stop (LIBEV_A_ (W)w);
 
-  EV_FREQUENT_CHECK;
+  LIBEV_FREQUENT_CHECK;
 }
 
 void
-ev_async_send (EV_P_ ev_async *w) EV_THROW
+ev_async_send (LIBEV_P_ ev_async *w) LIBEV_THROW
 {
   w->sent = 1;
-  evpipe_write (EV_A_ &async_pending);
+  evpipe_write (LIBEV_A_ &async_pending);
 }
 #endif
 
@@ -4918,42 +4963,42 @@ struct ev_once
 };
 
 static void
-once_cb (EV_P_ struct ev_once *once, int revents)
+once_cb (LIBEV_P_ struct ev_once *once, int revents)
 {
   void (*cb)(int revents, void *arg) = once->cb;
   void *arg = once->arg;
 
-  ev_io_stop    (EV_A_ &once->io);
-  ev_timer_stop (EV_A_ &once->to);
+  ev_io_stop    (LIBEV_A_ &once->io);
+  ev_timer_stop (LIBEV_A_ &once->to);
   ev_free (once);
 
   cb (revents, arg);
 }
 
 static void
-once_cb_io (EV_P_ ev_io *w, int revents)
+once_cb_io (LIBEV_P_ ev_io *w, int revents)
 {
   struct ev_once *once = (struct ev_once *)(((char *)w) - offsetof (struct ev_once, io));
 
-  once_cb (EV_A_ once, revents | ev_clear_pending (EV_A_ &once->to));
+  once_cb (LIBEV_A_ once, revents | ev_clear_pending (LIBEV_A_ &once->to));
 }
 
 static void
-once_cb_to (EV_P_ ev_timer *w, int revents)
+once_cb_to (LIBEV_P_ ev_timer *w, int revents)
 {
   struct ev_once *once = (struct ev_once *)(((char *)w) - offsetof (struct ev_once, to));
 
-  once_cb (EV_A_ once, revents | ev_clear_pending (EV_A_ &once->io));
+  once_cb (LIBEV_A_ once, revents | ev_clear_pending (LIBEV_A_ &once->io));
 }
 
 void
-ev_once (EV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *arg) EV_THROW
+ev_once (LIBEV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *arg) LIBEV_THROW
 {
   struct ev_once *once = (struct ev_once *)ev_malloc (sizeof (struct ev_once));
 
   if (expect_false (!once))
     {
-      cb (EV_ERROR | EV_READ | EV_WRITE | EV_TIMER, arg);
+      cb (LIBEV_ERROR | LIBEV_READ | LIBEV_WRITE | LIBEV_TIMER, arg);
       return;
     }
 
@@ -4964,134 +5009,135 @@ ev_once (EV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, vo
   if (fd >= 0)
     {
       ev_io_set (&once->io, fd, events);
-      ev_io_start (EV_A_ &once->io);
+      ev_io_start (LIBEV_A_ &once->io);
     }
 
   ev_init (&once->to, once_cb_to);
   if (timeout >= 0.)
     {
       ev_timer_set (&once->to, timeout, 0.);
-      ev_timer_start (EV_A_ &once->to);
+      ev_timer_start (LIBEV_A_ &once->to);
     }
 }
 
 /*****************************************************************************/
 
-#if EV_WALK_ENABLE
-void ecb_cold
-ev_walk (EV_P_ int types, void (*cb)(EV_P_ int type, void *w)) EV_THROW
+#if LIBEV_WALK_ENABLE
+ecb_cold
+void
+ev_walk (LIBEV_P_ int types, void (*cb)(LIBEV_P_ int type, void *w)) LIBEV_THROW
 {
   int i, j;
   ev_watcher_list *wl, *wn;
 
-  if (types & (EV_IO | EV_EMBED))
+  if (types & (LIBEV_IO | LIBEV_EMBED))
     for (i = 0; i < anfdmax; ++i)
       for (wl = anfds [i].head; wl; )
         {
           wn = wl->next;
 
-#if EV_EMBED_ENABLE
+#if LIBEV_EMBED_ENABLE
           if (ev_cb ((ev_io *)wl) == embed_io_cb)
             {
-              if (types & EV_EMBED)
-                cb (EV_A_ EV_EMBED, ((char *)wl) - offsetof (struct ev_embed, io));
+              if (types & LIBEV_EMBED)
+                cb (LIBEV_A_ LIBEV_EMBED, ((char *)wl) - offsetof (struct ev_embed, io));
             }
           else
 #endif
-#if EV_USE_INOTIFY
+#if LIBEV_USE_INOTIFY
           if (ev_cb ((ev_io *)wl) == infy_cb)
             ;
           else
 #endif
           if ((ev_io *)wl != &pipe_w)
-            if (types & EV_IO)
-              cb (EV_A_ EV_IO, wl);
+            if (types & LIBEV_IO)
+              cb (LIBEV_A_ LIBEV_IO, wl);
 
           wl = wn;
         }
 
-  if (types & (EV_TIMER | EV_STAT))
+  if (types & (LIBEV_TIMER | LIBEV_STAT))
     for (i = timercnt + HEAP0; i-- > HEAP0; )
-#if EV_STAT_ENABLE
+#if LIBEV_STAT_ENABLE
       /*TODO: timer is not always active*/
       if (ev_cb ((ev_timer *)ANHE_w (timers [i])) == stat_timer_cb)
         {
-          if (types & EV_STAT)
-            cb (EV_A_ EV_STAT, ((char *)ANHE_w (timers [i])) - offsetof (struct ev_stat, timer));
+          if (types & LIBEV_STAT)
+            cb (LIBEV_A_ LIBEV_STAT, ((char *)ANHE_w (timers [i])) - offsetof (struct ev_stat, timer));
         }
       else
 #endif
-      if (types & EV_TIMER)
-        cb (EV_A_ EV_TIMER, ANHE_w (timers [i]));
+      if (types & LIBEV_TIMER)
+        cb (LIBEV_A_ LIBEV_TIMER, ANHE_w (timers [i]));
 
-#if EV_PERIODIC_ENABLE
-  if (types & EV_PERIODIC)
+#if LIBEV_PERIODIC_ENABLE
+  if (types & LIBEV_PERIODIC)
     for (i = periodiccnt + HEAP0; i-- > HEAP0; )
-      cb (EV_A_ EV_PERIODIC, ANHE_w (periodics [i]));
+      cb (LIBEV_A_ LIBEV_PERIODIC, ANHE_w (periodics [i]));
 #endif
 
-#if EV_IDLE_ENABLE
-  if (types & EV_IDLE)
+#if LIBEV_IDLE_ENABLE
+  if (types & LIBEV_IDLE)
     for (j = NUMPRI; j--; )
       for (i = idlecnt [j]; i--; )
-        cb (EV_A_ EV_IDLE, idles [j][i]);
+        cb (LIBEV_A_ LIBEV_IDLE, idles [j][i]);
 #endif
 
-#if EV_FORK_ENABLE
-  if (types & EV_FORK)
+#if LIBEV_FORK_ENABLE
+  if (types & LIBEV_FORK)
     for (i = forkcnt; i--; )
       if (ev_cb (forks [i]) != embed_fork_cb)
-        cb (EV_A_ EV_FORK, forks [i]);
+        cb (LIBEV_A_ LIBEV_FORK, forks [i]);
 #endif
 
-#if EV_ASYNC_ENABLE
-  if (types & EV_ASYNC)
+#if LIBEV_ASYNC_ENABLE
+  if (types & LIBEV_ASYNC)
     for (i = asynccnt; i--; )
-      cb (EV_A_ EV_ASYNC, asyncs [i]);
+      cb (LIBEV_A_ LIBEV_ASYNC, asyncs [i]);
 #endif
 
-#if EV_PREPARE_ENABLE
-  if (types & EV_PREPARE)
+#if LIBEV_PREPARE_ENABLE
+  if (types & LIBEV_PREPARE)
     for (i = preparecnt; i--; )
-# if EV_EMBED_ENABLE
+# if LIBEV_EMBED_ENABLE
       if (ev_cb (prepares [i]) != embed_prepare_cb)
 # endif
-        cb (EV_A_ EV_PREPARE, prepares [i]);
+        cb (LIBEV_A_ LIBEV_PREPARE, prepares [i]);
 #endif
 
-#if EV_CHECK_ENABLE
-  if (types & EV_CHECK)
+#if LIBEV_CHECK_ENABLE
+  if (types & LIBEV_CHECK)
     for (i = checkcnt; i--; )
-      cb (EV_A_ EV_CHECK, checks [i]);
+      cb (LIBEV_A_ LIBEV_CHECK, checks [i]);
 #endif
 
-#if EV_SIGNAL_ENABLE
-  if (types & EV_SIGNAL)
-    for (i = 0; i < EV_NSIG - 1; ++i)
+#if LIBEV_SIGNAL_ENABLE
+  if (types & LIBEV_SIGNAL)
+    for (i = 0; i < LIBEV_NSIG - 1; ++i)
       for (wl = signals [i].head; wl; )
         {
           wn = wl->next;
-          cb (EV_A_ EV_SIGNAL, wl);
+          cb (LIBEV_A_ LIBEV_SIGNAL, wl);
           wl = wn;
         }
 #endif
 
-#if EV_CHILD_ENABLE
-  if (types & EV_CHILD)
-    for (i = (EV_PID_HASHSIZE); i--; )
+#if LIBEV_CHILD_ENABLE
+  if (types & LIBEV_CHILD)
+    for (i = (LIBEV_PID_HASHSIZE); i--; )
       for (wl = childs [i]; wl; )
         {
           wn = wl->next;
-          cb (EV_A_ EV_CHILD, wl);
+          cb (LIBEV_A_ LIBEV_CHILD, wl);
           wl = wn;
         }
 #endif
-/* EV_STAT     0x00001000 /* stat data changed */
-/* EV_EMBED    0x00010000 /* embedded event loop needs sweep */
+/* LIBEV_STAT     0x00001000 /* stat data changed */
+/* LIBEV_EMBED    0x00010000 /* embedded event loop needs sweep */
 }
 #endif
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
   #include "ev_wrap.h"
 #endif
 
diff --git a/ev.h b/ev.h
index 38f62d8..916ef58 100644
--- a/ev.h
+++ b/ev.h
@@ -37,115 +37,115 @@
  * either the BSD or the GPL.
  */
 
-#ifndef EV_H_
-#define EV_H_
+#ifndef LIBEV_H_
+#define LIBEV_H_
 
 #ifdef __cplusplus
-# define EV_CPP(x) x
+# define LIBEV_CPP(x) x
 # if __cplusplus >= 201103L
-#  define EV_THROW noexcept
+#  define LIBEV_THROW noexcept
 # else
-#  define EV_THROW throw ()
+#  define LIBEV_THROW throw ()
 # endif
 #else
-# define EV_CPP(x)
-# define EV_THROW
+# define LIBEV_CPP(x)
+# define LIBEV_THROW
 #endif
 
-EV_CPP(extern "C" {)
+LIBEV_CPP(extern "C" {)
 
 /*****************************************************************************/
 
 /* pre-4.0 compatibility */
-#ifndef EV_COMPAT3
-# define EV_COMPAT3 1
+#ifndef LIBEV_COMPAT3
+# define LIBEV_COMPAT3 1
 #endif
 
-#ifndef EV_FEATURES
+#ifndef LIBEV_FEATURES
 # if defined __OPTIMIZE_SIZE__
-#  define EV_FEATURES 0x7c
+#  define LIBEV_FEATURES 0x7c
 # else
-#  define EV_FEATURES 0x7f
+#  define LIBEV_FEATURES 0x7f
 # endif
 #endif
 
-#define EV_FEATURE_CODE     ((EV_FEATURES) &  1)
-#define EV_FEATURE_DATA     ((EV_FEATURES) &  2)
-#define EV_FEATURE_CONFIG   ((EV_FEATURES) &  4)
-#define EV_FEATURE_API      ((EV_FEATURES) &  8)
-#define EV_FEATURE_WATCHERS ((EV_FEATURES) & 16)
-#define EV_FEATURE_BACKENDS ((EV_FEATURES) & 32)
-#define EV_FEATURE_OS       ((EV_FEATURES) & 64)
+#define LIBEV_FEATURE_CODE     ((LIBEV_FEATURES) &  1)
+#define LIBEV_FEATURE_DATA     ((LIBEV_FEATURES) &  2)
+#define LIBEV_FEATURE_CONFIG   ((LIBEV_FEATURES) &  4)
+#define LIBEV_FEATURE_API      ((LIBEV_FEATURES) &  8)
+#define LIBEV_FEATURE_WATCHERS ((LIBEV_FEATURES) & 16)
+#define LIBEV_FEATURE_BACKENDS ((LIBEV_FEATURES) & 32)
+#define LIBEV_FEATURE_OS       ((LIBEV_FEATURES) & 64)
 
 /* these priorities are inclusive, higher priorities will be invoked earlier */
-#ifndef EV_MINPRI
-# define EV_MINPRI (EV_FEATURE_CONFIG ? -2 : 0)
+#ifndef LIBEV_MINPRI
+# define LIBEV_MINPRI (LIBEV_FEATURE_CONFIG ? -2 : 0)
 #endif
-#ifndef EV_MAXPRI
-# define EV_MAXPRI (EV_FEATURE_CONFIG ? +2 : 0)
+#ifndef LIBEV_MAXPRI
+# define LIBEV_MAXPRI (LIBEV_FEATURE_CONFIG ? +2 : 0)
 #endif
 
-#ifndef EV_MULTIPLICITY
-# define EV_MULTIPLICITY EV_FEATURE_CONFIG
+#ifndef LIBEV_MULTIPLICITY
+# define LIBEV_MULTIPLICITY LIBEV_FEATURE_CONFIG
 #endif
 
-#ifndef EV_PERIODIC_ENABLE
-# define EV_PERIODIC_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_PERIODIC_ENABLE
+# define LIBEV_PERIODIC_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_STAT_ENABLE
-# define EV_STAT_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_STAT_ENABLE
+# define LIBEV_STAT_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_PREPARE_ENABLE
-# define EV_PREPARE_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_PREPARE_ENABLE
+# define LIBEV_PREPARE_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_CHECK_ENABLE
-# define EV_CHECK_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_CHECK_ENABLE
+# define LIBEV_CHECK_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_IDLE_ENABLE
-# define EV_IDLE_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_IDLE_ENABLE
+# define LIBEV_IDLE_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_FORK_ENABLE
-# define EV_FORK_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_FORK_ENABLE
+# define LIBEV_FORK_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_CLEANUP_ENABLE
-# define EV_CLEANUP_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_CLEANUP_ENABLE
+# define LIBEV_CLEANUP_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_SIGNAL_ENABLE
-# define EV_SIGNAL_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_SIGNAL_ENABLE
+# define LIBEV_SIGNAL_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_CHILD_ENABLE
+#ifndef LIBEV_CHILD_ENABLE
 # ifdef _WIN32
-#  define EV_CHILD_ENABLE 0
+#  define LIBEV_CHILD_ENABLE 0
 # else
-#  define EV_CHILD_ENABLE EV_FEATURE_WATCHERS
+#  define LIBEV_CHILD_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 #endif
 
-#ifndef EV_ASYNC_ENABLE
-# define EV_ASYNC_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_ASYNC_ENABLE
+# define LIBEV_ASYNC_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_EMBED_ENABLE
-# define EV_EMBED_ENABLE EV_FEATURE_WATCHERS
+#ifndef LIBEV_EMBED_ENABLE
+# define LIBEV_EMBED_ENABLE LIBEV_FEATURE_WATCHERS
 #endif
 
-#ifndef EV_WALK_ENABLE
-# define EV_WALK_ENABLE 0 /* not yet */
+#ifndef LIBEV_WALK_ENABLE
+# define LIBEV_WALK_ENABLE 0 /* not yet */
 #endif
 
 /*****************************************************************************/
 
-#if EV_CHILD_ENABLE && !EV_SIGNAL_ENABLE
-# undef EV_SIGNAL_ENABLE
-# define EV_SIGNAL_ENABLE 1
+#if LIBEV_CHILD_ENABLE && !LIBEV_SIGNAL_ENABLE
+# undef LIBEV_SIGNAL_ENABLE
+# define LIBEV_SIGNAL_ENABLE 1
 #endif
 
 /*****************************************************************************/
@@ -154,12 +154,12 @@ typedef double ev_tstamp;
 
 #include <string.h> /* for memmove */
 
-#ifndef EV_ATOMIC_T
+#ifndef LIBEV_ATOMIC_T
 # include <signal.h>
-# define EV_ATOMIC_T sig_atomic_t volatile
+# define LIBEV_ATOMIC_T sig_atomic_t volatile
 #endif
 
-#if EV_STAT_ENABLE
+#if LIBEV_STAT_ENABLE
 # ifdef _WIN32
 #  include <time.h>
 #  include <sys/types.h>
@@ -168,92 +168,92 @@ typedef double ev_tstamp;
 #endif
 
 /* support multiple event loops? */
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
 struct ev_loop;
-# define EV_P  struct ev_loop *loop               /* a loop as sole parameter in a declaration */
-# define EV_P_ EV_P,                              /* a loop as first of multiple parameters */
-# define EV_A  loop                               /* a loop as sole argument to a function call */
-# define EV_A_ EV_A,                              /* a loop as first of multiple arguments */
-# define EV_DEFAULT_UC  ev_default_loop_uc_ ()    /* the default loop, if initialised, as sole arg */
-# define EV_DEFAULT_UC_ EV_DEFAULT_UC,            /* the default loop as first of multiple arguments */
-# define EV_DEFAULT  ev_default_loop (0)          /* the default loop as sole arg */
-# define EV_DEFAULT_ EV_DEFAULT,                  /* the default loop as first of multiple arguments */
+# define LIBEV_P  struct ev_loop *loop               /* a loop as sole parameter in a declaration */
+# define LIBEV_P_ LIBEV_P,                              /* a loop as first of multiple parameters */
+# define LIBEV_A  loop                               /* a loop as sole argument to a function call */
+# define LIBEV_A_ LIBEV_A,                              /* a loop as first of multiple arguments */
+# define LIBEV_DEFAULT_UC  ev_default_loop_uc_ ()    /* the default loop, if initialised, as sole arg */
+# define LIBEV_DEFAULT_UC_ LIBEV_DEFAULT_UC,            /* the default loop as first of multiple arguments */
+# define LIBEV_DEFAULT  ev_default_loop (0)          /* the default loop as sole arg */
+# define LIBEV_DEFAULT_ LIBEV_DEFAULT,                  /* the default loop as first of multiple arguments */
 #else
-# define EV_P void
-# define EV_P_
-# define EV_A
-# define EV_A_
-# define EV_DEFAULT
-# define EV_DEFAULT_
-# define EV_DEFAULT_UC
-# define EV_DEFAULT_UC_
-# undef EV_EMBED_ENABLE
-#endif
-
-/* EV_INLINE is used for functions in header files */
+# define LIBEV_P void
+# define LIBEV_P_
+# define LIBEV_A
+# define LIBEV_A_
+# define LIBEV_DEFAULT
+# define LIBEV_DEFAULT_
+# define LIBEV_DEFAULT_UC
+# define LIBEV_DEFAULT_UC_
+# undef LIBEV_EMBED_ENABLE
+#endif
+
+/* LIBEV_INLINE is used for functions in header files */
 #if __STDC_VERSION__ >= 199901L || __GNUC__ >= 3
-# define EV_INLINE static inline
+# define LIBEV_INLINE static inline
 #else
-# define EV_INLINE static
+# define LIBEV_INLINE static
 #endif
 
-#ifdef EV_API_STATIC
-# define EV_API_DECL static
+#ifdef LIBEV_API_STATIC
+# define LIBEV_API_DECL static
 #else
-# define EV_API_DECL extern
+# define LIBEV_API_DECL extern
 #endif
 
-/* EV_PROTOTYPES can be used to switch of prototype declarations */
-#ifndef EV_PROTOTYPES
-# define EV_PROTOTYPES 1
+/* LIBEV_PROTOTYPES can be used to switch of prototype declarations */
+#ifndef LIBEV_PROTOTYPES
+# define LIBEV_PROTOTYPES 1
 #endif
 
 /*****************************************************************************/
 
-#define EV_VERSION_MAJOR 4
-#define EV_VERSION_MINOR 22
+#define LIBEV_VERSION_MAJOR 4
+#define LIBEV_VERSION_MINOR 24
 
 /* eventmask, revents, events... */
 enum {
-  EV_UNDEF    = (int)0xFFFFFFFF, /* guaranteed to be invalid */
-  EV_NONE     =            0x00, /* no events */
-  EV_READ     =            0x01, /* ev_io detected read will not block */
-  EV_WRITE    =            0x02, /* ev_io detected write will not block */
-  EV__IOFDSET =            0x80, /* internal use only */
-  EV_IO       =         EV_READ, /* alias for type-detection */
-  EV_TIMER    =      0x00000100, /* timer timed out */
-#if EV_COMPAT3
-  EV_TIMEOUT  =        EV_TIMER, /* pre 4.0 API compatibility */
-#endif
-  EV_PERIODIC =      0x00000200, /* periodic timer timed out */
-  EV_SIGNAL   =      0x00000400, /* signal was received */
-  EV_CHILD    =      0x00000800, /* child/pid had status change */
-  EV_STAT     =      0x00001000, /* stat data changed */
-  EV_IDLE     =      0x00002000, /* event loop is idling */
-  EV_PREPARE  =      0x00004000, /* event loop about to poll */
-  EV_CHECK    =      0x00008000, /* event loop finished poll */
-  EV_EMBED    =      0x00010000, /* embedded event loop needs sweep */
-  EV_FORK     =      0x00020000, /* event loop resumed in child */
-  EV_CLEANUP  =      0x00040000, /* event loop resumed in child */
-  EV_ASYNC    =      0x00080000, /* async intra-loop signal */
-  EV_CUSTOM   =      0x01000000, /* for use by user code */
-  EV_ERROR    = (int)0x80000000  /* sent when an error occurs */
+  LIBEV_UNDEF    = (int)0xFFFFFFFF, /* guaranteed to be invalid */
+  LIBEV_NONE     =            0x00, /* no events */
+  LIBEV_READ     =            0x01, /* ev_io detected read will not block */
+  LIBEV_WRITE    =            0x02, /* ev_io detected write will not block */
+  LIBEV__IOFDSET =            0x80, /* internal use only */
+  LIBEV_IO       =         LIBEV_READ, /* alias for type-detection */
+  LIBEV_TIMER    =      0x00000100, /* timer timed out */
+#if LIBEV_COMPAT3
+  LIBEV_TIMEOUT  =        LIBEV_TIMER, /* pre 4.0 API compatibility */
+#endif
+  LIBEV_PERIODIC =      0x00000200, /* periodic timer timed out */
+  LIBEV_SIGNAL   =      0x00000400, /* signal was received */
+  LIBEV_CHILD    =      0x00000800, /* child/pid had status change */
+  LIBEV_STAT     =      0x00001000, /* stat data changed */
+  LIBEV_IDLE     =      0x00002000, /* event loop is idling */
+  LIBEV_PREPARE  =      0x00004000, /* event loop about to poll */
+  LIBEV_CHECK    =      0x00008000, /* event loop finished poll */
+  LIBEV_EMBED    =      0x00010000, /* embedded event loop needs sweep */
+  LIBEV_FORK     =      0x00020000, /* event loop resumed in child */
+  LIBEV_CLEANUP  =      0x00040000, /* event loop resumed in child */
+  LIBEV_ASYNC    =      0x00080000, /* async intra-loop signal */
+  LIBEV_CUSTOM   =      0x01000000, /* for use by user code */
+  LIBEV_ERROR    = (int)0x80000000  /* sent when an error occurs */
 };
 
 /* can be used to add custom fields to all watchers, while losing binary compatibility */
-#ifndef EV_COMMON
-# define EV_COMMON void *data;
+#ifndef LIBEV_COMMON
+# define LIBEV_COMMON void *data;
 #endif
 
-#ifndef EV_CB_DECLARE
-# define EV_CB_DECLARE(type) void (*cb)(EV_P_ struct type *w, int revents);
+#ifndef LIBEV_CB_DECLARE
+# define LIBEV_CB_DECLARE(type) void (*cb)(LIBEV_P_ struct type *w, int revents);
 #endif
-#ifndef EV_CB_INVOKE
-# define EV_CB_INVOKE(watcher,revents) (watcher)->cb (EV_A_ (watcher), (revents))
+#ifndef LIBEV_CB_INVOKE
+# define LIBEV_CB_INVOKE(watcher,revents) (watcher)->cb (LIBEV_A_ (watcher), (revents))
 #endif
 
 /* not official, do not use */
-#define EV_CB(type,name) void name (EV_P_ struct ev_ ## type *w, int revents)
+#define LIBEV_CB(type,name) void name (LIBEV_P_ struct ev_ ## type *w, int revents)
 
 /*
  * struct member types:
@@ -272,91 +272,91 @@ enum {
  *           or the array index + 1 in the pendings array.
  */
 
-#if EV_MINPRI == EV_MAXPRI
-# define EV_DECL_PRIORITY
-#elif !defined (EV_DECL_PRIORITY)
-# define EV_DECL_PRIORITY int priority;
+#if LIBEV_MINPRI == LIBEV_MAXPRI
+# define LIBEV_DECL_PRIORITY
+#elif !defined (LIBEV_DECL_PRIORITY)
+# define LIBEV_DECL_PRIORITY int priority;
 #endif
 
 /* shared by all watchers */
-#define EV_WATCHER(type)			\
+#define LIBEV_WATCHER(type)			\
   int active; /* private */			\
   int pending; /* private */			\
-  EV_DECL_PRIORITY /* private */		\
-  EV_COMMON /* rw */				\
-  EV_CB_DECLARE (type) /* private */
+  LIBEV_DECL_PRIORITY /* private */		\
+  LIBEV_COMMON /* rw */				\
+  LIBEV_CB_DECLARE (type) /* private */
 
-#define EV_WATCHER_LIST(type)			\
-  EV_WATCHER (type)				\
+#define LIBEV_WATCHER_LIST(type)			\
+  LIBEV_WATCHER (type)				\
   struct ev_watcher_list *next; /* private */
 
-#define EV_WATCHER_TIME(type)			\
-  EV_WATCHER (type)				\
+#define LIBEV_WATCHER_TIME(type)			\
+  LIBEV_WATCHER (type)				\
   ev_tstamp at;     /* private */
 
 /* base class, nothing to see here unless you subclass */
 typedef struct ev_watcher
 {
-  EV_WATCHER (ev_watcher)
+  LIBEV_WATCHER (ev_watcher)
 } ev_watcher;
 
 /* base class, nothing to see here unless you subclass */
 typedef struct ev_watcher_list
 {
-  EV_WATCHER_LIST (ev_watcher_list)
+  LIBEV_WATCHER_LIST (ev_watcher_list)
 } ev_watcher_list;
 
 /* base class, nothing to see here unless you subclass */
 typedef struct ev_watcher_time
 {
-  EV_WATCHER_TIME (ev_watcher_time)
+  LIBEV_WATCHER_TIME (ev_watcher_time)
 } ev_watcher_time;
 
-/* invoked when fd is either EV_READable or EV_WRITEable */
-/* revent EV_READ, EV_WRITE */
+/* invoked when fd is either LIBEV_READable or LIBEV_WRITEable */
+/* revent LIBEV_READ, LIBEV_WRITE */
 typedef struct ev_io
 {
-  EV_WATCHER_LIST (ev_io)
+  LIBEV_WATCHER_LIST (ev_io)
 
   int fd;     /* ro */
   int events; /* ro */
 } ev_io;
 
 /* invoked after a specific time, repeatable (based on monotonic clock) */
-/* revent EV_TIMEOUT */
+/* revent LIBEV_TIMEOUT */
 typedef struct ev_timer
 {
-  EV_WATCHER_TIME (ev_timer)
+  LIBEV_WATCHER_TIME (ev_timer)
 
   ev_tstamp repeat; /* rw */
 } ev_timer;
 
 /* invoked at some specific time, possibly repeating at regular intervals (based on UTC) */
-/* revent EV_PERIODIC */
+/* revent LIBEV_PERIODIC */
 typedef struct ev_periodic
 {
-  EV_WATCHER_TIME (ev_periodic)
+  LIBEV_WATCHER_TIME (ev_periodic)
 
   ev_tstamp offset; /* rw */
   ev_tstamp interval; /* rw */
-  ev_tstamp (*reschedule_cb)(struct ev_periodic *w, ev_tstamp now) EV_THROW; /* rw */
+  ev_tstamp (*reschedule_cb)(struct ev_periodic *w, ev_tstamp now) LIBEV_THROW; /* rw */
 } ev_periodic;
 
 /* invoked when the given signal has been received */
-/* revent EV_SIGNAL */
+/* revent LIBEV_SIGNAL */
 typedef struct ev_signal
 {
-  EV_WATCHER_LIST (ev_signal)
+  LIBEV_WATCHER_LIST (ev_signal)
 
   int signum; /* ro */
 } ev_signal;
 
 /* invoked when sigchld is received and waitpid indicates the given pid */
-/* revent EV_CHILD */
+/* revent LIBEV_CHILD */
 /* does not support priorities */
 typedef struct ev_child
 {
-  EV_WATCHER_LIST (ev_child)
+  LIBEV_WATCHER_LIST (ev_child)
 
   int flags;   /* private */
   int pid;     /* ro */
@@ -364,7 +364,7 @@ typedef struct ev_child
   int rstatus; /* rw, holds the exit status, use the macros from sys/wait.h */
 } ev_child;
 
-#if EV_STAT_ENABLE
+#if LIBEV_STAT_ENABLE
 /* st_nlink = 0 means missing file or other error */
 # ifdef _WIN32
 typedef struct _stati64 ev_statdata;
@@ -373,10 +373,10 @@ typedef struct stat ev_statdata;
 # endif
 
 /* invoked each time the stat data changes for a given path */
-/* revent EV_STAT */
+/* revent LIBEV_STAT */
 typedef struct ev_stat
 {
-  EV_WATCHER_LIST (ev_stat)
+  LIBEV_WATCHER_LIST (ev_stat)
 
   ev_timer timer;     /* private */
   ev_tstamp interval; /* ro */
@@ -388,54 +388,54 @@ typedef struct ev_stat
 } ev_stat;
 #endif
 
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
 /* invoked when the nothing else needs to be done, keeps the process from blocking */
-/* revent EV_IDLE */
+/* revent LIBEV_IDLE */
 typedef struct ev_idle
 {
-  EV_WATCHER (ev_idle)
+  LIBEV_WATCHER (ev_idle)
 } ev_idle;
 #endif
 
 /* invoked for each run of the mainloop, just before the blocking call */
 /* you can still change events in any way you like */
-/* revent EV_PREPARE */
+/* revent LIBEV_PREPARE */
 typedef struct ev_prepare
 {
-  EV_WATCHER (ev_prepare)
+  LIBEV_WATCHER (ev_prepare)
 } ev_prepare;
 
 /* invoked for each run of the mainloop, just after the blocking call */
-/* revent EV_CHECK */
+/* revent LIBEV_CHECK */
 typedef struct ev_check
 {
-  EV_WATCHER (ev_check)
+  LIBEV_WATCHER (ev_check)
 } ev_check;
 
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
 /* the callback gets invoked before check in the child process when a fork was detected */
-/* revent EV_FORK */
+/* revent LIBEV_FORK */
 typedef struct ev_fork
 {
-  EV_WATCHER (ev_fork)
+  LIBEV_WATCHER (ev_fork)
 } ev_fork;
 #endif
 
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
 /* is invoked just before the loop gets destroyed */
-/* revent EV_CLEANUP */
+/* revent LIBEV_CLEANUP */
 typedef struct ev_cleanup
 {
-  EV_WATCHER (ev_cleanup)
+  LIBEV_WATCHER (ev_cleanup)
 } ev_cleanup;
 #endif
 
-#if EV_EMBED_ENABLE
+#if LIBEV_EMBED_ENABLE
 /* used to embed an event loop inside another */
 /* the callback gets invoked when the event loop has handled events, and can be 0 */
 typedef struct ev_embed
 {
-  EV_WATCHER (ev_embed)
+  LIBEV_WATCHER (ev_embed)
 
   struct ev_loop *other; /* ro */
   ev_io io;              /* private */
@@ -445,20 +445,20 @@ typedef struct ev_embed
   ev_periodic periodic;  /* unused */
   ev_idle idle;          /* unused */
   ev_fork fork;          /* private */
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
   ev_cleanup cleanup;    /* unused */
 #endif
 } ev_embed;
 #endif
 
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
 /* invoked when somebody calls ev_async_send on the watcher */
-/* revent EV_ASYNC */
+/* revent LIBEV_ASYNC */
 typedef struct ev_async
 {
-  EV_WATCHER (ev_async)
+  LIBEV_WATCHER (ev_async)
 
-  EV_ATOMIC_T sent; /* private */
+  LIBEV_ATOMIC_T sent; /* private */
 } ev_async;
 
 # define ev_async_pending(w) (+(w)->sent)
@@ -475,24 +475,24 @@ union ev_any_watcher
   struct ev_periodic periodic;
   struct ev_signal signal;
   struct ev_child child;
-#if EV_STAT_ENABLE
+#if LIBEV_STAT_ENABLE
   struct ev_stat stat;
 #endif
-#if EV_IDLE_ENABLE
+#if LIBEV_IDLE_ENABLE
   struct ev_idle idle;
 #endif
   struct ev_prepare prepare;
   struct ev_check check;
-#if EV_FORK_ENABLE
+#if LIBEV_FORK_ENABLE
   struct ev_fork fork;
 #endif
-#if EV_CLEANUP_ENABLE
+#if LIBEV_CLEANUP_ENABLE
   struct ev_cleanup cleanup;
 #endif
-#if EV_EMBED_ENABLE
+#if LIBEV_EMBED_ENABLE
   struct ev_embed embed;
 #endif
-#if EV_ASYNC_ENABLE
+#if LIBEV_ASYNC_ENABLE
   struct ev_async async;
 #endif
 };
@@ -500,41 +500,41 @@ union ev_any_watcher
 /* flag bits for ev_default_loop and ev_loop_new */
 enum {
   /* the default */
-  EVFLAG_AUTO      = 0x00000000U, /* not quite a mask */
+  LIBEVFLAG_AUTO      = 0x00000000U, /* not quite a mask */
   /* flag bits */
-  EVFLAG_NOENV     = 0x01000000U, /* do NOT consult environment */
-  EVFLAG_FORKCHECK = 0x02000000U, /* check for a fork in each iteration */
+  LIBEVFLAG_NOENV     = 0x01000000U, /* do NOT consult environment */
+  LIBEVFLAG_FORKCHECK = 0x02000000U, /* check for a fork in each iteration */
   /* debugging/feature disable */
-  EVFLAG_NOINOTIFY = 0x00100000U, /* do not attempt to use inotify */
-#if EV_COMPAT3
-  EVFLAG_NOSIGFD   = 0, /* compatibility to pre-3.9 */
+  LIBEVFLAG_NOINOTIFY = 0x00100000U, /* do not attempt to use inotify */
+#if LIBEV_COMPAT3
+  LIBEVFLAG_NOSIGFD   = 0, /* compatibility to pre-3.9 */
 #endif
-  EVFLAG_SIGNALFD  = 0x00200000U, /* attempt to use signalfd */
-  EVFLAG_NOSIGMASK = 0x00400000U  /* avoid modifying the signal mask */
+  LIBEVFLAG_SIGNALFD  = 0x00200000U, /* attempt to use signalfd */
+  LIBEVFLAG_NOSIGMASK = 0x00400000U  /* avoid modifying the signal mask */
 };
 
 /* method bits to be ored together */
 enum {
-  EVBACKEND_SELECT  = 0x00000001U, /* about anywhere */
-  EVBACKEND_POLL    = 0x00000002U, /* !win */
-  EVBACKEND_EPOLL   = 0x00000004U, /* linux */
-  EVBACKEND_KQUEUE  = 0x00000008U, /* bsd */
-  EVBACKEND_DEVPOLL = 0x00000010U, /* solaris 8 */ /* NYI */
-  EVBACKEND_PORT    = 0x00000020U, /* solaris 10 */
-  EVBACKEND_ALL     = 0x0000003FU, /* all known backends */
-  EVBACKEND_MASK    = 0x0000FFFFU  /* all future backends */
+  LIBEVBACKEND_SELECT  = 0x00000001U, /* available just about anywhere */
+  LIBEVBACKEND_POLL    = 0x00000002U, /* !win, !aix, broken on osx */
+  LIBEVBACKEND_EPOLL   = 0x00000004U, /* linux */
+  LIBEVBACKEND_KQUEUE  = 0x00000008U, /* bsd, broken on osx */
+  LIBEVBACKEND_DEVPOLL = 0x00000010U, /* solaris 8 */ /* NYI */
+  LIBEVBACKEND_PORT    = 0x00000020U, /* solaris 10 */
+  LIBEVBACKEND_ALL     = 0x0000003FU, /* all known backends */
+  LIBEVBACKEND_MASK    = 0x0000FFFFU  /* all future backends */
 };
 
-#if EV_PROTOTYPES
-EV_API_DECL int ev_version_major (void) EV_THROW;
-EV_API_DECL int ev_version_minor (void) EV_THROW;
+#if LIBEV_PROTOTYPES
+LIBEV_API_DECL int ev_version_major (void) LIBEV_THROW;
+LIBEV_API_DECL int ev_version_minor (void) LIBEV_THROW;
 
-EV_API_DECL unsigned int ev_supported_backends (void) EV_THROW;
-EV_API_DECL unsigned int ev_recommended_backends (void) EV_THROW;
-EV_API_DECL unsigned int ev_embeddable_backends (void) EV_THROW;
+LIBEV_API_DECL unsigned int ev_supported_backends (void) LIBEV_THROW;
+LIBEV_API_DECL unsigned int ev_recommended_backends (void) LIBEV_THROW;
+LIBEV_API_DECL unsigned int ev_embeddable_backends (void) LIBEV_THROW;
 
-EV_API_DECL ev_tstamp ev_time (void) EV_THROW;
-EV_API_DECL void ev_sleep (ev_tstamp delay) EV_THROW; /* sleep for a while */
+LIBEV_API_DECL ev_tstamp ev_time (void) LIBEV_THROW;
+LIBEV_API_DECL void ev_sleep (ev_tstamp delay) LIBEV_THROW; /* sleep for a while */
 
 /* Sets the allocation function to use, works like realloc.
  * It is used to allocate and free memory.
@@ -542,58 +542,58 @@ EV_API_DECL void ev_sleep (ev_tstamp delay) EV_THROW; /* sleep for a while */
  * or take some potentially destructive action.
  * The default is your system realloc function.
  */
-EV_API_DECL void ev_set_allocator (void *(*cb)(void *ptr, long size) EV_THROW) EV_THROW;
+LIBEV_API_DECL void ev_set_allocator (void *(*cb)(void *ptr, long size) LIBEV_THROW) LIBEV_THROW;
 
 /* set the callback function to call on a
  * retryable syscall error
  * (such as failed select, poll, epoll_wait)
  */
-EV_API_DECL void ev_set_syserr_cb (void (*cb)(const char *msg) EV_THROW) EV_THROW;
+LIBEV_API_DECL void ev_set_syserr_cb (void (*cb)(const char *msg) LIBEV_THROW) LIBEV_THROW;
 
-#if EV_MULTIPLICITY
+#if LIBEV_MULTIPLICITY
 
 /* the default loop is the only one that handles signals and child watchers */
 /* you can call this as often as you like */
-EV_API_DECL struct ev_loop *ev_default_loop (unsigned int flags EV_CPP (= 0)) EV_THROW;
+LIBEV_API_DECL struct ev_loop *ev_default_loop (unsigned int flags LIBEV_CPP (= 0)) LIBEV_THROW;
 
-#ifdef EV_API_STATIC
-EV_API_DECL struct ev_loop *ev_default_loop_ptr;
+#ifdef LIBEV_API_STATIC
+LIBEV_API_DECL struct ev_loop *ev_default_loop_ptr;
 #endif
 
-EV_INLINE struct ev_loop *
-ev_default_loop_uc_ (void) EV_THROW
+LIBEV_INLINE struct ev_loop *
+ev_default_loop_uc_ (void) LIBEV_THROW
 {
   extern struct ev_loop *ev_default_loop_ptr;
 
   return ev_default_loop_ptr;
 }
 
-EV_INLINE int
-ev_is_default_loop (EV_P) EV_THROW
+LIBEV_INLINE int
+ev_is_default_loop (LIBEV_P) LIBEV_THROW
 {
-  return EV_A == EV_DEFAULT_UC;
+  return LIBEV_A == LIBEV_DEFAULT_UC;
 }
 
 /* create and destroy alternative loops that don't handle signals */
-EV_API_DECL struct ev_loop *ev_loop_new (unsigned int flags EV_CPP (= 0)) EV_THROW;
+LIBEV_API_DECL struct ev_loop *ev_loop_new (unsigned int flags LIBEV_CPP (= 0)) LIBEV_THROW;
 
-EV_API_DECL ev_tstamp ev_now (EV_P) EV_THROW; /* time w.r.t. timers and the eventloop, updated after each poll */
+LIBEV_API_DECL ev_tstamp ev_now (LIBEV_P) LIBEV_THROW; /* time w.r.t. timers and the eventloop, updated after each poll */
 
 #else
 
-EV_API_DECL int ev_default_loop (unsigned int flags EV_CPP (= 0)) EV_THROW; /* returns true when successful */
+LIBEV_API_DECL int ev_default_loop (unsigned int flags LIBEV_CPP (= 0)) LIBEV_THROW; /* returns true when successful */
 
-EV_API_DECL ev_tstamp ev_rt_now;
+LIBEV_API_DECL ev_tstamp ev_rt_now;
 
-EV_INLINE ev_tstamp
-ev_now (void) EV_THROW
+LIBEV_INLINE ev_tstamp
+ev_now (void) LIBEV_THROW
 {
   return ev_rt_now;
 }
 
-/* looks weird, but ev_is_default_loop (EV_A) still works if this exists */
-EV_INLINE int
-ev_is_default_loop (void) EV_THROW
+/* looks weird, but ev_is_default_loop (LIBEV_A) still works if this exists */
+LIBEV_INLINE int
+ev_is_default_loop (void) LIBEV_THROW
 {
   return 1;
 }
@@ -601,82 +601,82 @@ ev_is_default_loop (void) EV_THROW
 #endif /* multiplicity */
 
 /* destroy event loops, also works for the default loop */
-EV_API_DECL void ev_loop_destroy (EV_P);
+LIBEV_API_DECL void ev_loop_destroy (LIBEV_P);
 
 /* this needs to be called after fork, to duplicate the loop */
 /* when you want to re-use it in the child */
 /* you can call it in either the parent or the child */
 /* you can actually call it at any time, anywhere :) */
-EV_API_DECL void ev_loop_fork (EV_P) EV_THROW;
+LIBEV_API_DECL void ev_loop_fork (LIBEV_P) LIBEV_THROW;
 
-EV_API_DECL unsigned int ev_backend (EV_P) EV_THROW; /* backend in use by loop */
+LIBEV_API_DECL unsigned int ev_backend (LIBEV_P) LIBEV_THROW; /* backend in use by loop */
 
-EV_API_DECL void ev_now_update (EV_P) EV_THROW; /* update event loop time */
+LIBEV_API_DECL void ev_now_update (LIBEV_P) LIBEV_THROW; /* update event loop time */
 
-#if EV_WALK_ENABLE
+#if LIBEV_WALK_ENABLE
 /* walk (almost) all watchers in the loop of a given type, invoking the */
 /* callback on every such watcher. The callback might stop the watcher, */
 /* but do nothing else with the loop */
-EV_API_DECL void ev_walk (EV_P_ int types, void (*cb)(EV_P_ int type, void *w)) EV_THROW;
+LIBEV_API_DECL void ev_walk (LIBEV_P_ int types, void (*cb)(LIBEV_P_ int type, void *w)) LIBEV_THROW;
 #endif
 
 #endif /* prototypes */
 
 /* ev_run flags values */
 enum {
-  EVRUN_NOWAIT = 1, /* do not block/wait */
-  EVRUN_ONCE   = 2  /* block *once* only */
+  LIBEVRUN_NOWAIT = 1, /* do not block/wait */
+  LIBEVRUN_ONCE   = 2  /* block *once* only */
 };
 
 /* ev_break how values */
 enum {
-  EVBREAK_CANCEL = 0, /* undo unloop */
-  EVBREAK_ONE    = 1, /* unloop once */
-  EVBREAK_ALL    = 2  /* unloop all loops */
+  LIBEVBREAK_CANCEL = 0, /* undo unloop */
+  LIBEVBREAK_ONE    = 1, /* unloop once */
+  LIBEVBREAK_ALL    = 2  /* unloop all loops */
 };
 
-#if EV_PROTOTYPES
-EV_API_DECL int  ev_run (EV_P_ int flags EV_CPP (= 0));
-EV_API_DECL void ev_break (EV_P_ int how EV_CPP (= EVBREAK_ONE)) EV_THROW; /* break out of the loop */
+#if LIBEV_PROTOTYPES
+LIBEV_API_DECL int  ev_run (LIBEV_P_ int flags LIBEV_CPP (= 0));
+LIBEV_API_DECL void ev_break (LIBEV_P_ int how LIBEV_CPP (= LIBEVBREAK_ONE)) LIBEV_THROW; /* break out of the loop */
 
 /*
  * ref/unref can be used to add or remove a refcount on the mainloop. every watcher
  * keeps one reference. if you have a long-running watcher you never unregister that
  * should not keep ev_loop from running, unref() after starting, and ref() before stopping.
  */
-EV_API_DECL void ev_ref   (EV_P) EV_THROW;
-EV_API_DECL void ev_unref (EV_P) EV_THROW;
+LIBEV_API_DECL void ev_ref   (LIBEV_P) LIBEV_THROW;
+LIBEV_API_DECL void ev_unref (LIBEV_P) LIBEV_THROW;
 
 /*
  * convenience function, wait for a single event, without registering an event watcher
  * if timeout is < 0, do wait indefinitely
  */
-EV_API_DECL void ev_once (EV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *arg) EV_THROW;
+LIBEV_API_DECL void ev_once (LIBEV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *arg) LIBEV_THROW;
 
-# if EV_FEATURE_API
-EV_API_DECL unsigned int ev_iteration (EV_P) EV_THROW; /* number of loop iterations */
-EV_API_DECL unsigned int ev_depth     (EV_P) EV_THROW; /* #ev_loop enters - #ev_loop leaves */
-EV_API_DECL void         ev_verify    (EV_P) EV_THROW; /* abort if loop data corrupted */
+# if LIBEV_FEATURE_API
+LIBEV_API_DECL unsigned int ev_iteration (LIBEV_P) LIBEV_THROW; /* number of loop iterations */
+LIBEV_API_DECL unsigned int ev_depth     (LIBEV_P) LIBEV_THROW; /* #ev_loop enters - #ev_loop leaves */
+LIBEV_API_DECL void         ev_verify    (LIBEV_P) LIBEV_THROW; /* abort if loop data corrupted */
 
-EV_API_DECL void ev_set_io_collect_interval (EV_P_ ev_tstamp interval) EV_THROW; /* sleep at least this time, default 0 */
-EV_API_DECL void ev_set_timeout_collect_interval (EV_P_ ev_tstamp interval) EV_THROW; /* sleep at least this time, default 0 */
+LIBEV_API_DECL void ev_set_io_collect_interval (LIBEV_P_ ev_tstamp interval) LIBEV_THROW; /* sleep at least this time, default 0 */
+LIBEV_API_DECL void ev_set_timeout_collect_interval (LIBEV_P_ ev_tstamp interval) LIBEV_THROW; /* sleep at least this time, default 0 */
 
 /* advanced stuff for threading etc. support, see docs */
-EV_API_DECL void ev_set_userdata (EV_P_ void *data) EV_THROW;
-EV_API_DECL void *ev_userdata (EV_P) EV_THROW;
-typedef void (*ev_loop_callback)(EV_P);
-EV_API_DECL void ev_set_invoke_pending_cb (EV_P_ ev_loop_callback invoke_pending_cb) EV_THROW;
+LIBEV_API_DECL void ev_set_userdata (LIBEV_P_ void *data) LIBEV_THROW;
+LIBEV_API_DECL void *ev_userdata (LIBEV_P) LIBEV_THROW;
+typedef void (*ev_loop_callback)(LIBEV_P);
+LIBEV_API_DECL void ev_set_invoke_pending_cb (LIBEV_P_ ev_loop_callback invoke_pending_cb) LIBEV_THROW;
 /* C++ doesn't allow the use of the ev_loop_callback typedef here, so we need to spell it out */
-EV_API_DECL void ev_set_loop_release_cb (EV_P_ void (*release)(EV_P) EV_THROW, void (*acquire)(EV_P) EV_THROW) EV_THROW;
+LIBEV_API_DECL void ev_set_loop_release_cb (LIBEV_P_ void (*release)(LIBEV_P) LIBEV_THROW, void (*acquire)(LIBEV_P) LIBEV_THROW) LIBEV_THROW;
 
-EV_API_DECL unsigned int ev_pending_count (EV_P) EV_THROW; /* number of pending events, if any */
-EV_API_DECL void ev_invoke_pending (EV_P); /* invoke all pending watchers */
+LIBEV_API_DECL unsigned int ev_pending_count (LIBEV_P) LIBEV_THROW; /* number of pending events, if any */
+LIBEV_API_DECL void ev_invoke_pending (LIBEV_P); /* invoke all pending watchers */
 
 /*
  * stop/start the timer handling.
  */
-EV_API_DECL void ev_suspend (EV_P) EV_THROW;
-EV_API_DECL void ev_resume  (EV_P) EV_THROW;
+LIBEV_API_DECL void ev_suspend (LIBEV_P) LIBEV_THROW;
+LIBEV_API_DECL void ev_resume  (LIBEV_P) LIBEV_THROW;
 #endif
 
 #endif
@@ -690,7 +690,7 @@ EV_API_DECL void ev_resume  (EV_P) EV_THROW;
   ev_set_cb ((ev), cb_);			\
 } while (0)
 
-#define ev_io_set(ev,fd_,events_)            do { (ev)->fd = (fd_); (ev)->events = (events_) | EV__IOFDSET; } while (0)
+#define ev_io_set(ev,fd_,events_)            do { (ev)->fd = (fd_); (ev)->events = (events_) | LIBEV__IOFDSET; } while (0)
 #define ev_timer_set(ev,after_,repeat_)      do { ((ev_watcher_time *)(ev))->at = (after_); (ev)->repeat = (repeat_); } while (0)
 #define ev_periodic_set(ev,ofs_,ival_,rcb_)  do { (ev)->offset = (ofs_); (ev)->interval = (ival_); (ev)->reschedule_cb = (rcb_); } while (0)
 #define ev_signal_set(ev,signum_)            do { (ev)->signum = (signum_); } while (0)
@@ -724,8 +724,8 @@ EV_API_DECL void ev_resume  (EV_P) EV_THROW;
 #define ev_cb_(ev)                           (ev)->cb /* rw */
 #define ev_cb(ev)                            (memmove (&ev_cb_ (ev), &((ev_watcher *)(ev))->cb, sizeof (ev_cb_ (ev))), (ev)->cb)
 
-#if EV_MINPRI == EV_MAXPRI
-# define ev_priority(ev)                     ((ev), EV_MINPRI)
+#if LIBEV_MINPRI == LIBEV_MAXPRI
+# define ev_priority(ev)                     ((ev), LIBEV_MINPRI)
 # define ev_set_priority(ev,pri)             ((ev), (pri))
 #else
 # define ev_priority(ev)                     (+(((ev_watcher *)(void *)(ev))->priority))
@@ -740,106 +740,106 @@ EV_API_DECL void ev_resume  (EV_P) EV_THROW;
 
 /* stopping (enabling, adding) a watcher does nothing if it is already running */
 /* stopping (disabling, deleting) a watcher does nothing unless it's already running */
-#if EV_PROTOTYPES
+#if LIBEV_PROTOTYPES
 
 /* feeds an event into a watcher as if the event actually occurred */
 /* accepts any ev_watcher type */
-EV_API_DECL void ev_feed_event     (EV_P_ void *w, int revents) EV_THROW;
-EV_API_DECL void ev_feed_fd_event  (EV_P_ int fd, int revents) EV_THROW;
-#if EV_SIGNAL_ENABLE
-EV_API_DECL void ev_feed_signal    (int signum) EV_THROW;
-EV_API_DECL void ev_feed_signal_event (EV_P_ int signum) EV_THROW;
+LIBEV_API_DECL void ev_feed_event     (LIBEV_P_ void *w, int revents) LIBEV_THROW;
+LIBEV_API_DECL void ev_feed_fd_event  (LIBEV_P_ int fd, int revents) LIBEV_THROW;
+#if LIBEV_SIGNAL_ENABLE
+LIBEV_API_DECL void ev_feed_signal    (int signum) LIBEV_THROW;
+LIBEV_API_DECL void ev_feed_signal_event (LIBEV_P_ int signum) LIBEV_THROW;
 #endif
-EV_API_DECL void ev_invoke         (EV_P_ void *w, int revents);
-EV_API_DECL int  ev_clear_pending  (EV_P_ void *w) EV_THROW;
+LIBEV_API_DECL void ev_invoke         (LIBEV_P_ void *w, int revents);
+LIBEV_API_DECL int  ev_clear_pending  (LIBEV_P_ void *w) LIBEV_THROW;
 
-EV_API_DECL void ev_io_start       (EV_P_ ev_io *w) EV_THROW;
-EV_API_DECL void ev_io_stop        (EV_P_ ev_io *w) EV_THROW;
+LIBEV_API_DECL void ev_io_start       (LIBEV_P_ ev_io *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_io_stop        (LIBEV_P_ ev_io *w) LIBEV_THROW;
 
-EV_API_DECL void ev_timer_start    (EV_P_ ev_timer *w) EV_THROW;
-EV_API_DECL void ev_timer_stop     (EV_P_ ev_timer *w) EV_THROW;
+LIBEV_API_DECL void ev_timer_start    (LIBEV_P_ ev_timer *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_timer_stop     (LIBEV_P_ ev_timer *w) LIBEV_THROW;
 /* stops if active and no repeat, restarts if active and repeating, starts if inactive and repeating */
-EV_API_DECL void ev_timer_again    (EV_P_ ev_timer *w) EV_THROW;
+LIBEV_API_DECL void ev_timer_again    (LIBEV_P_ ev_timer *w) LIBEV_THROW;
 /* return remaining time */
-EV_API_DECL ev_tstamp ev_timer_remaining (EV_P_ ev_timer *w) EV_THROW;
+LIBEV_API_DECL ev_tstamp ev_timer_remaining (LIBEV_P_ ev_timer *w) LIBEV_THROW;
 
-#if EV_PERIODIC_ENABLE
-EV_API_DECL void ev_periodic_start (EV_P_ ev_periodic *w) EV_THROW;
-EV_API_DECL void ev_periodic_stop  (EV_P_ ev_periodic *w) EV_THROW;
-EV_API_DECL void ev_periodic_again (EV_P_ ev_periodic *w) EV_THROW;
+#if LIBEV_PERIODIC_ENABLE
+LIBEV_API_DECL void ev_periodic_start (LIBEV_P_ ev_periodic *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_periodic_stop  (LIBEV_P_ ev_periodic *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_periodic_again (LIBEV_P_ ev_periodic *w) LIBEV_THROW;
 #endif
 
 /* only supported in the default loop */
-#if EV_SIGNAL_ENABLE
-EV_API_DECL void ev_signal_start   (EV_P_ ev_signal *w) EV_THROW;
-EV_API_DECL void ev_signal_stop    (EV_P_ ev_signal *w) EV_THROW;
+#if LIBEV_SIGNAL_ENABLE
+LIBEV_API_DECL void ev_signal_start   (LIBEV_P_ ev_signal *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_signal_stop    (LIBEV_P_ ev_signal *w) LIBEV_THROW;
 #endif
 
 /* only supported in the default loop */
-# if EV_CHILD_ENABLE
-EV_API_DECL void ev_child_start    (EV_P_ ev_child *w) EV_THROW;
-EV_API_DECL void ev_child_stop     (EV_P_ ev_child *w) EV_THROW;
+# if LIBEV_CHILD_ENABLE
+LIBEV_API_DECL void ev_child_start    (LIBEV_P_ ev_child *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_child_stop     (LIBEV_P_ ev_child *w) LIBEV_THROW;
 # endif
 
-# if EV_STAT_ENABLE
-EV_API_DECL void ev_stat_start     (EV_P_ ev_stat *w) EV_THROW;
-EV_API_DECL void ev_stat_stop      (EV_P_ ev_stat *w) EV_THROW;
-EV_API_DECL void ev_stat_stat      (EV_P_ ev_stat *w) EV_THROW;
+# if LIBEV_STAT_ENABLE
+LIBEV_API_DECL void ev_stat_start     (LIBEV_P_ ev_stat *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_stat_stop      (LIBEV_P_ ev_stat *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_stat_stat      (LIBEV_P_ ev_stat *w) LIBEV_THROW;
 # endif
 
-# if EV_IDLE_ENABLE
-EV_API_DECL void ev_idle_start     (EV_P_ ev_idle *w) EV_THROW;
-EV_API_DECL void ev_idle_stop      (EV_P_ ev_idle *w) EV_THROW;
+# if LIBEV_IDLE_ENABLE
+LIBEV_API_DECL void ev_idle_start     (LIBEV_P_ ev_idle *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_idle_stop      (LIBEV_P_ ev_idle *w) LIBEV_THROW;
 # endif
 
-#if EV_PREPARE_ENABLE
-EV_API_DECL void ev_prepare_start  (EV_P_ ev_prepare *w) EV_THROW;
-EV_API_DECL void ev_prepare_stop   (EV_P_ ev_prepare *w) EV_THROW;
+#if LIBEV_PREPARE_ENABLE
+LIBEV_API_DECL void ev_prepare_start  (LIBEV_P_ ev_prepare *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_prepare_stop   (LIBEV_P_ ev_prepare *w) LIBEV_THROW;
 #endif
 
-#if EV_CHECK_ENABLE
-EV_API_DECL void ev_check_start    (EV_P_ ev_check *w) EV_THROW;
-EV_API_DECL void ev_check_stop     (EV_P_ ev_check *w) EV_THROW;
+#if LIBEV_CHECK_ENABLE
+LIBEV_API_DECL void ev_check_start    (LIBEV_P_ ev_check *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_check_stop     (LIBEV_P_ ev_check *w) LIBEV_THROW;
 #endif
 
-# if EV_FORK_ENABLE
-EV_API_DECL void ev_fork_start     (EV_P_ ev_fork *w) EV_THROW;
-EV_API_DECL void ev_fork_stop      (EV_P_ ev_fork *w) EV_THROW;
+# if LIBEV_FORK_ENABLE
+LIBEV_API_DECL void ev_fork_start     (LIBEV_P_ ev_fork *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_fork_stop      (LIBEV_P_ ev_fork *w) LIBEV_THROW;
 # endif
 
-# if EV_CLEANUP_ENABLE
-EV_API_DECL void ev_cleanup_start  (EV_P_ ev_cleanup *w) EV_THROW;
-EV_API_DECL void ev_cleanup_stop   (EV_P_ ev_cleanup *w) EV_THROW;
+# if LIBEV_CLEANUP_ENABLE
+LIBEV_API_DECL void ev_cleanup_start  (LIBEV_P_ ev_cleanup *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_cleanup_stop   (LIBEV_P_ ev_cleanup *w) LIBEV_THROW;
 # endif
 
-# if EV_EMBED_ENABLE
+# if LIBEV_EMBED_ENABLE
 /* only supported when loop to be embedded is in fact embeddable */
-EV_API_DECL void ev_embed_start    (EV_P_ ev_embed *w) EV_THROW;
-EV_API_DECL void ev_embed_stop     (EV_P_ ev_embed *w) EV_THROW;
-EV_API_DECL void ev_embed_sweep    (EV_P_ ev_embed *w) EV_THROW;
+LIBEV_API_DECL void ev_embed_start    (LIBEV_P_ ev_embed *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_embed_stop     (LIBEV_P_ ev_embed *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_embed_sweep    (LIBEV_P_ ev_embed *w) LIBEV_THROW;
 # endif
 
-# if EV_ASYNC_ENABLE
-EV_API_DECL void ev_async_start    (EV_P_ ev_async *w) EV_THROW;
-EV_API_DECL void ev_async_stop     (EV_P_ ev_async *w) EV_THROW;
-EV_API_DECL void ev_async_send     (EV_P_ ev_async *w) EV_THROW;
+# if LIBEV_ASYNC_ENABLE
+LIBEV_API_DECL void ev_async_start    (LIBEV_P_ ev_async *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_async_stop     (LIBEV_P_ ev_async *w) LIBEV_THROW;
+LIBEV_API_DECL void ev_async_send     (LIBEV_P_ ev_async *w) LIBEV_THROW;
 # endif
 
-#if EV_COMPAT3
-  #define EVLOOP_NONBLOCK EVRUN_NOWAIT
-  #define EVLOOP_ONESHOT  EVRUN_ONCE
-  #define EVUNLOOP_CANCEL EVBREAK_CANCEL
-  #define EVUNLOOP_ONE    EVBREAK_ONE
-  #define EVUNLOOP_ALL    EVBREAK_ALL
-  #if EV_PROTOTYPES
-    EV_INLINE void ev_loop   (EV_P_ int flags) { ev_run   (EV_A_ flags); }
-    EV_INLINE void ev_unloop (EV_P_ int how  ) { ev_break (EV_A_ how  ); }
-    EV_INLINE void ev_default_destroy (void) { ev_loop_destroy (EV_DEFAULT); }
-    EV_INLINE void ev_default_fork    (void) { ev_loop_fork    (EV_DEFAULT); }
-    #if EV_FEATURE_API
-      EV_INLINE unsigned int ev_loop_count  (EV_P) { return ev_iteration  (EV_A); }
-      EV_INLINE unsigned int ev_loop_depth  (EV_P) { return ev_depth      (EV_A); }
-      EV_INLINE void         ev_loop_verify (EV_P) {        ev_verify     (EV_A); }
+#if LIBEV_COMPAT3
+  #define LIBEVLOOP_NONBLOCK LIBEVRUN_NOWAIT
+  #define LIBEVLOOP_ONESHOT  LIBEVRUN_ONCE
+  #define LIBEVUNLOOP_CANCEL LIBEVBREAK_CANCEL
+  #define LIBEVUNLOOP_ONE    LIBEVBREAK_ONE
+  #define LIBEVUNLOOP_ALL    LIBEVBREAK_ALL
+  #if LIBEV_PROTOTYPES
+    LIBEV_INLINE void ev_loop   (LIBEV_P_ int flags) { ev_run   (LIBEV_A_ flags); }
+    LIBEV_INLINE void ev_unloop (LIBEV_P_ int how  ) { ev_break (LIBEV_A_ how  ); }
+    LIBEV_INLINE void ev_default_destroy (void) { ev_loop_destroy (LIBEV_DEFAULT); }
+    LIBEV_INLINE void ev_default_fork    (void) { ev_loop_fork    (LIBEV_DEFAULT); }
+    #if LIBEV_FEATURE_API
+      LIBEV_INLINE unsigned int ev_loop_count  (LIBEV_P) { return ev_iteration  (LIBEV_A); }
+      LIBEV_INLINE unsigned int ev_loop_depth  (LIBEV_P) { return ev_depth      (LIBEV_A); }
+      LIBEV_INLINE void         ev_loop_verify (LIBEV_P) {        ev_verify     (LIBEV_A); }
     #endif
   #endif
 #else
@@ -848,7 +848,7 @@ EV_API_DECL void ev_async_send     (EV_P_ ev_async *w) EV_THROW;
 
 #endif
 
-EV_CPP(})
+LIBEV_CPP(})
 
 #endif
 
diff --git a/ev_epoll.c b/ev_epoll.c
index a1f04f6..bae1c51 100644
--- a/ev_epoll.c
+++ b/ev_epoll.c
@@ -65,10 +65,10 @@
 
 #include <sys/epoll.h>
 
-#define EV_EMASK_EPERM 0x80
+#define LIBEV_EMASK_EPERM 0x80
 
 static void
-epoll_modify (EV_P_ int fd, int oev, int nev)
+epoll_modify (LIBEV_P_ int fd, int oev, int nev)
 {
   struct epoll_event ev;
   unsigned char oldmask;
@@ -90,8 +90,8 @@ epoll_modify (EV_P_ int fd, int oev, int nev)
   /* store the generation counter in the upper 32 bits, the fd in the lower 32 bits */
   ev.data.u64 = (uint64_t)(uint32_t)fd
               | ((uint64_t)(uint32_t)++anfds [fd].egen << 32);
-  ev.events   = (nev & EV_READ  ? EPOLLIN  : 0)
-              | (nev & EV_WRITE ? EPOLLOUT : 0);
+  ev.events   = (nev & LIBEV_READ  ? EPOLLIN  : 0)
+              | (nev & LIBEV_WRITE ? EPOLLOUT : 0);
 
   if (expect_true (!epoll_ctl (backend_fd, oev && oldmask != nev ? EPOLL_CTL_MOD : EPOLL_CTL_ADD, fd, &ev)))
     return;
@@ -119,10 +119,10 @@ epoll_modify (EV_P_ int fd, int oev, int nev)
     {
       /* EPERM means the fd is always ready, but epoll is too snobbish */
       /* to handle it, unlike select or poll. */
-      anfds [fd].emask = EV_EMASK_EPERM;
+      anfds [fd].emask = LIBEV_EMASK_EPERM;
 
       /* add fd to epoll_eperms, if not already inside */
-      if (!(oldmask & EV_EMASK_EPERM))
+      if (!(oldmask & LIBEV_EMASK_EPERM))
         {
           array_needsize (int, epoll_eperms, epoll_epermmax, epoll_epermcnt + 1, EMPTY2);
           epoll_eperms [epoll_epermcnt++] = fd;
@@ -131,7 +131,7 @@ epoll_modify (EV_P_ int fd, int oev, int nev)
       return;
     }
 
-  fd_kill (EV_A_ fd);
+  fd_kill (LIBEV_A_ fd);
 
 dec_egen:
   /* we didn't successfully call epoll_ctl, so decrement the generation counter again */
@@ -139,7 +139,7 @@ dec_egen:
 }
 
 static void
-epoll_poll (EV_P_ ev_tstamp timeout)
+epoll_poll (LIBEV_P_ ev_tstamp timeout)
 {
   int i;
   int eventcnt;
@@ -149,9 +149,9 @@ epoll_poll (EV_P_ ev_tstamp timeout)
 
   /* epoll wait times cannot be larger than (LONG_MAX - 999UL) / HZ msecs, which is below */
   /* the default libev max wait time, however. */
-  EV_RELEASE_CB;
+  LIBEV_RELEASE_CB;
   eventcnt = epoll_wait (backend_fd, epoll_events, epoll_eventmax, timeout * 1e3);
-  EV_ACQUIRE_CB;
+  LIBEV_ACQUIRE_CB;
 
   if (expect_false (eventcnt < 0))
     {
@@ -167,8 +167,8 @@ epoll_poll (EV_P_ ev_tstamp timeout)
 
       int fd = (uint32_t)ev->data.u64; /* mask out the lower 32 bits */
       int want = anfds [fd].events;
-      int got  = (ev->events & (EPOLLOUT | EPOLLERR | EPOLLHUP) ? EV_WRITE : 0)
-               | (ev->events & (EPOLLIN  | EPOLLERR | EPOLLHUP) ? EV_READ  : 0);
+      int got  = (ev->events & (EPOLLOUT | EPOLLERR | EPOLLHUP) ? LIBEV_WRITE : 0)
+               | (ev->events & (EPOLLIN  | EPOLLERR | EPOLLHUP) ? LIBEV_READ  : 0);
 
       /*
        * check for spurious notification.
@@ -196,8 +196,8 @@ epoll_poll (EV_P_ ev_tstamp timeout)
            * partially here, when epoll_ctl returns an error (== a child has the fd
            * but we closed it).
            */
-          ev->events = (want & EV_READ  ? EPOLLIN  : 0)
-                     | (want & EV_WRITE ? EPOLLOUT : 0);
+          ev->events = (want & LIBEV_READ  ? EPOLLIN  : 0)
+                     | (want & LIBEV_WRITE ? EPOLLOUT : 0);
 
           /* pre-2.6.9 kernels require a non-null pointer with EPOLL_CTL_DEL, */
           /* which is fortunately easy to do for us. */
@@ -208,7 +208,7 @@ epoll_poll (EV_P_ ev_tstamp timeout)
             }
         }
 
-      fd_event (EV_A_ fd, got);
+      fd_event (LIBEV_A_ fd, got);
     }
 
   /* if the receive array was full, increase its size */
@@ -223,10 +223,10 @@ epoll_poll (EV_P_ ev_tstamp timeout)
   for (i = epoll_epermcnt; i--; )
     {
       int fd = epoll_eperms [i];
-      unsigned char events = anfds [fd].events & (EV_READ | EV_WRITE);
+      unsigned char events = anfds [fd].events & (LIBEV_READ | LIBEV_WRITE);
 
-      if (anfds [fd].emask & EV_EMASK_EPERM && events)
-        fd_event (EV_A_ fd, events);
+      if (anfds [fd].emask & LIBEV_EMASK_EPERM && events)
+        fd_event (LIBEV_A_ fd, events);
       else
         {
           epoll_eperms [i] = epoll_eperms [--epoll_epermcnt];
@@ -235,8 +235,9 @@ epoll_poll (EV_P_ ev_tstamp timeout)
     }
 }
 
-int inline_size
-epoll_init (EV_P_ int flags)
+inline_size
+int
+epoll_init (LIBEV_P_ int flags)
 {
 #ifdef EPOLL_CLOEXEC
   backend_fd = epoll_create1 (EPOLL_CLOEXEC);
@@ -257,18 +258,20 @@ epoll_init (EV_P_ int flags)
   epoll_eventmax = 64; /* initial number of events receivable per poll */
   epoll_events = (struct epoll_event *)ev_malloc (sizeof (struct epoll_event) * epoll_eventmax);
 
-  return EVBACKEND_EPOLL;
+  return LIBEVBACKEND_EPOLL;
 }
 
-void inline_size
-epoll_destroy (EV_P)
+inline_size
+void
+epoll_destroy (LIBEV_P)
 {
   ev_free (epoll_events);
   array_free (epoll_eperm, EMPTY);
 }
 
-void inline_size
-epoll_fork (EV_P)
+inline_size
+void
+epoll_fork (LIBEV_P)
 {
   close (backend_fd);
 
@@ -277,6 +280,6 @@ epoll_fork (EV_P)
 
   fcntl (backend_fd, F_SETFD, FD_CLOEXEC);
 
-  fd_rearm_all (EV_A);
+  fd_rearm_all (LIBEV_A);
 }
 
diff --git a/ev_kqueue.c b/ev_kqueue.c
index 27def23..84fd557 100644
--- a/ev_kqueue.c
+++ b/ev_kqueue.c
@@ -43,13 +43,14 @@
 #include <string.h>
 #include <errno.h>
 
-void inline_speed
-kqueue_change (EV_P_ int fd, int filter, int flags, int fflags)
+inline_speed
+void
+kqueue_change (LIBEV_P_ int fd, int filter, int flags, int fflags)
 {
   ++kqueue_changecnt;
   array_needsize (struct kevent, kqueue_changes, kqueue_changemax, kqueue_changecnt, EMPTY2);
 
-  EV_SET (&kqueue_changes [kqueue_changecnt - 1], fd, filter, flags, fflags, 0, 0);
+  LIBEV_SET (&kqueue_changes [kqueue_changecnt - 1], fd, filter, flags, fflags, 0, 0);
 }
 
 /* OS X at least needs this */
@@ -61,29 +62,29 @@ kqueue_change (EV_P_ int fd, int filter, int flags, int fflags)
 #endif
 
 static void
-kqueue_modify (EV_P_ int fd, int oev, int nev)
+kqueue_modify (LIBEV_P_ int fd, int oev, int nev)
 {
   if (oev != nev)
     {
-      if (oev & EV_READ)
-        kqueue_change (EV_A_ fd, EVFILT_READ , EV_DELETE, 0);
+      if (oev & LIBEV_READ)
+        kqueue_change (LIBEV_A_ fd, EVFILT_READ , EV_DELETE, 0);
 
-      if (oev & EV_WRITE)
-        kqueue_change (EV_A_ fd, EVFILT_WRITE, EV_DELETE, 0);
+      if (oev & LIBEV_WRITE)
+        kqueue_change (LIBEV_A_ fd, EVFILT_WRITE, EV_DELETE, 0);
     }
 
   /* to detect close/reopen reliably, we have to re-add */
   /* event requests even when oev == nev */
 
-  if (nev & EV_READ)
-    kqueue_change (EV_A_ fd, EVFILT_READ , EV_ADD | EV_ENABLE, NOTE_EOF);
+  if (nev & LIBEV_READ)
+    kqueue_change (LIBEV_A_ fd, EVFILT_READ , EV_ADD | EV_ENABLE, NOTE_EOF);
 
-  if (nev & EV_WRITE)
-    kqueue_change (EV_A_ fd, EVFILT_WRITE, EV_ADD | EV_ENABLE, NOTE_EOF);
+  if (nev & LIBEV_WRITE)
+    kqueue_change (LIBEV_A_ fd, EVFILT_WRITE, EV_ADD | EV_ENABLE, NOTE_EOF);
 }
 
 static void
-kqueue_poll (EV_P_ ev_tstamp timeout)
+kqueue_poll (LIBEV_P_ ev_tstamp timeout)
 {
   int res, i;
   struct timespec ts;
@@ -96,10 +97,10 @@ kqueue_poll (EV_P_ ev_tstamp timeout)
       kqueue_events = (struct kevent *)ev_malloc (sizeof (struct kevent) * kqueue_eventmax);
     }
 
-  EV_RELEASE_CB;
-  EV_TS_SET (ts, timeout);
+  LIBEV_RELEASE_CB;
+  LIBEV_TS_SET (ts, timeout);
   res = kevent (backend_fd, kqueue_changes, kqueue_changecnt, kqueue_events, kqueue_eventmax, &ts);
-  EV_ACQUIRE_CB;
+  LIBEV_ACQUIRE_CB;
   kqueue_changecnt = 0;
 
   if (expect_false (res < 0))
@@ -114,7 +115,7 @@ kqueue_poll (EV_P_ ev_tstamp timeout)
     {
       int fd = kqueue_events [i].ident;
 
-      if (expect_false (kqueue_events [i].flags & EV_ERROR))
+      if (expect_false (kqueue_events [i].flags & LIBEV_ERROR))
         {
           int err = kqueue_events [i].data;
 
@@ -122,24 +123,24 @@ kqueue_poll (EV_P_ ev_tstamp timeout)
           if (anfds [fd].events)
             {
               if (err == ENOENT) /* resubmit changes on ENOENT */
-                kqueue_modify (EV_A_ fd, 0, anfds [fd].events);
+                kqueue_modify (LIBEV_A_ fd, 0, anfds [fd].events);
               else if (err == EBADF) /* on EBADF, we re-check the fd */
                 {
                   if (fd_valid (fd))
-                    kqueue_modify (EV_A_ fd, 0, anfds [fd].events);
+                    kqueue_modify (LIBEV_A_ fd, 0, anfds [fd].events);
                   else
-                    fd_kill (EV_A_ fd);
+                    fd_kill (LIBEV_A_ fd);
                 }
               else /* on all other errors, we error out on the fd */
-                fd_kill (EV_A_ fd);
+                fd_kill (LIBEV_A_ fd);
             }
         }
       else
         fd_event (
-          EV_A_
+          LIBEV_A_
           fd,
-          kqueue_events [i].filter == EVFILT_READ ? EV_READ
-          : kqueue_events [i].filter == EVFILT_WRITE ? EV_WRITE
+          kqueue_events [i].filter == EVFILT_READ ? LIBEV_READ
+          : kqueue_events [i].filter == EVFILT_WRITE ? LIBEV_WRITE
           : 0
         );
     }
@@ -152,8 +153,9 @@ kqueue_poll (EV_P_ ev_tstamp timeout)
     }
 }
 
-int inline_size
-kqueue_init (EV_P_ int flags)
+inline_size
+int
+kqueue_init (LIBEV_P_ int flags)
 {
   /* initialize the kernel queue */
   kqueue_fd_pid = getpid ();
@@ -173,18 +175,20 @@ kqueue_init (EV_P_ int flags)
   kqueue_changemax = 0;
   kqueue_changecnt = 0;
 
-  return EVBACKEND_KQUEUE;
+  return LIBEVBACKEND_KQUEUE;
 }
 
-void inline_size
-kqueue_destroy (EV_P)
+inline_size
+void
+kqueue_destroy (LIBEV_P)
 {
   ev_free (kqueue_events);
   ev_free (kqueue_changes);
 }
 
-void inline_size
-kqueue_fork (EV_P)
+inline_size
+void
+kqueue_fork (LIBEV_P)
 {
   /* some BSD kernels don't just destroy the kqueue itself,
    * but also close the fd, which isn't documented, and
@@ -206,9 +210,9 @@ kqueue_fork (EV_P)
   fcntl (backend_fd, F_SETFD, FD_CLOEXEC);
 
   /* re-register interest in fds */
-  fd_rearm_all (EV_A);
+  fd_rearm_all (LIBEV_A);
 }
 
-/* sys/event.h defines EV_ERROR */
-#undef EV_ERROR
+/* sys/event.h defines LIBEV_ERROR */
+#undef LIBEV_ERROR
 
diff --git a/ev_poll.c b/ev_poll.c
index 4832351..8f849fa 100644
--- a/ev_poll.c
+++ b/ev_poll.c
@@ -39,7 +39,8 @@
 
 #include <poll.h>
 
-void inline_size
+inline_size
+void
 pollidx_init (int *base, int count)
 {
   /* consider using memset (.., -1, ...), which is practically guaranteed
@@ -49,7 +50,7 @@ pollidx_init (int *base, int count)
 }
 
 static void
-poll_modify (EV_P_ int fd, int oev, int nev)
+poll_modify (LIBEV_P_ int fd, int oev, int nev)
 {
   int idx;
 
@@ -71,8 +72,8 @@ poll_modify (EV_P_ int fd, int oev, int nev)
 
   if (nev)
     polls [idx].events =
-        (nev & EV_READ ? POLLIN : 0)
-        | (nev & EV_WRITE ? POLLOUT : 0);
+        (nev & LIBEV_READ ? POLLIN : 0)
+        | (nev & LIBEV_WRITE ? POLLOUT : 0);
   else /* remove pollfd */
     {
       pollidxs [fd] = -1;
@@ -86,21 +87,21 @@ poll_modify (EV_P_ int fd, int oev, int nev)
 }
 
 static void
-poll_poll (EV_P_ ev_tstamp timeout)
+poll_poll (LIBEV_P_ ev_tstamp timeout)
 {
   struct pollfd *p;
   int res;
   
-  EV_RELEASE_CB;
+  LIBEV_RELEASE_CB;
   res = poll (polls, pollcnt, timeout * 1e3);
-  EV_ACQUIRE_CB;
+  LIBEV_ACQUIRE_CB;
 
   if (expect_false (res < 0))
     {
       if (errno == EBADF)
-        fd_ebadf (EV_A);
+        fd_ebadf (LIBEV_A);
       else if (errno == ENOMEM && !syserr_cb)
-        fd_enomem (EV_A);
+        fd_enomem (LIBEV_A);
       else if (errno != EINTR)
         ev_syserr ("(libev) poll");
     }
@@ -114,20 +115,21 @@ poll_poll (EV_P_ ev_tstamp timeout)
             --res;
 
             if (expect_false (p->revents & POLLNVAL))
-              fd_kill (EV_A_ p->fd);
+              fd_kill (LIBEV_A_ p->fd);
             else
               fd_event (
-                EV_A_
+                LIBEV_A_
                 p->fd,
-                (p->revents & (POLLOUT | POLLERR | POLLHUP) ? EV_WRITE : 0)
-                | (p->revents & (POLLIN | POLLERR | POLLHUP) ? EV_READ : 0)
+                (p->revents & (POLLOUT | POLLERR | POLLHUP) ? LIBEV_WRITE : 0)
+                | (p->revents & (POLLIN | POLLERR | POLLHUP) ? LIBEV_READ : 0)
               );
           }
       }
 }
 
-int inline_size
-poll_init (EV_P_ int flags)
+inline_size
+int
+poll_init (LIBEV_P_ int flags)
 {
   backend_mintime = 1e-3;
   backend_modify  = poll_modify;
@@ -136,11 +138,12 @@ poll_init (EV_P_ int flags)
   pollidxs = 0; pollidxmax = 0;
   polls    = 0; pollmax    = 0; pollcnt = 0;
 
-  return EVBACKEND_POLL;
+  return LIBEVBACKEND_POLL;
 }
 
-void inline_size
-poll_destroy (EV_P)
+inline_size
+void
+poll_destroy (LIBEV_P)
 {
   ev_free (pollidxs);
   ev_free (polls);
diff --git a/ev_port.c b/ev_port.c
index 9368501..1ded322 100644
--- a/ev_port.c
+++ b/ev_port.c
@@ -55,27 +55,28 @@
 #include <string.h>
 #include <errno.h>
 
-void inline_speed
-port_associate_and_check (EV_P_ int fd, int ev)
+inline_speed
+void
+port_associate_and_check (LIBEV_P_ int fd, int ev)
 {
   if (0 >
       port_associate (
          backend_fd, PORT_SOURCE_FD, fd,
-         (ev & EV_READ ? POLLIN : 0)
-         | (ev & EV_WRITE ? POLLOUT : 0),
+         (ev & LIBEV_READ ? POLLIN : 0)
+         | (ev & LIBEV_WRITE ? POLLOUT : 0),
          0
       )
   )
     {
       if (errno == EBADFD)
-        fd_kill (EV_A_ fd);
+        fd_kill (LIBEV_A_ fd);
       else
         ev_syserr ("(libev) port_associate");
     }
 }
 
 static void
-port_modify (EV_P_ int fd, int oev, int nev)
+port_modify (LIBEV_P_ int fd, int oev, int nev)
 {
   /* we need to reassociate no matter what, as closes are
    * once more silently being discarded.
@@ -86,11 +87,11 @@ port_modify (EV_P_ int fd, int oev, int nev)
         port_dissociate (backend_fd, PORT_SOURCE_FD, fd);
     }
   else
-    port_associate_and_check (EV_A_ fd, nev);
+    port_associate_and_check (LIBEV_A_ fd, nev);
 }
 
 static void
-port_poll (EV_P_ ev_tstamp timeout)
+port_poll (LIBEV_P_ ev_tstamp timeout)
 {
   int res, i;
   struct timespec ts;
@@ -101,15 +102,15 @@ port_poll (EV_P_ ev_tstamp timeout)
   /* whether it was the original value or has been updated :/ */
   port_events [0].portev_source = 0;
 
-  EV_RELEASE_CB;
-  EV_TS_SET (ts, timeout);
+  LIBEV_RELEASE_CB;
+  LIBEV_TS_SET (ts, timeout);
   res = port_getn (backend_fd, port_events, port_eventmax, &nget, &ts);
-  EV_ACQUIRE_CB;
+  LIBEV_ACQUIRE_CB;
 
   /* port_getn may or may not set nget on error */
   /* so we rely on port_events [0].portev_source not being updated */
   if (res == -1 && errno != ETIME && errno != EINTR)
-    ev_syserr ("(libev) port_getn (see http://bugs.opensolaris.org/view_bug.do?bug_id=6268715, try LIBEV_FLAGS=3 env variable)");
+    ev_syserr ("(libev) port_getn (see http://bugs.opensolaris.org/view_bug.do?bug_id=6268715, try LIBLIBEV_FLAGS=3 env variable)");
 
   for (i = 0; i < nget; ++i)
     {
@@ -118,13 +119,13 @@ port_poll (EV_P_ ev_tstamp timeout)
           int fd = port_events [i].portev_object;
 
           fd_event (
-            EV_A_
+            LIBEV_A_
             fd,
-            (port_events [i].portev_events & (POLLOUT | POLLERR | POLLHUP) ? EV_WRITE : 0)
-            | (port_events [i].portev_events & (POLLIN | POLLERR | POLLHUP) ? EV_READ : 0)
+            (port_events [i].portev_events & (POLLOUT | POLLERR | POLLHUP) ? LIBEV_WRITE : 0)
+            | (port_events [i].portev_events & (POLLIN | POLLERR | POLLHUP) ? LIBEV_READ : 0)
           );
 
-          fd_change (EV_A_ fd, EV__IOFDSET);
+          fd_change (LIBEV_A_ fd, LIBEV__IOFDSET);
         }
     }
 
@@ -136,8 +137,9 @@ port_poll (EV_P_ ev_tstamp timeout)
     }
 }
 
-int inline_size
-port_init (EV_P_ int flags)
+inline_size
+int
+port_init (LIBEV_P_ int flags)
 {
   /* Initialize the kernel queue */
   if ((backend_fd = port_create ()) < 0)
@@ -160,17 +162,19 @@ port_init (EV_P_ int flags)
   port_eventmax = 64; /* initial number of events receivable per poll */
   port_events = (port_event_t *)ev_malloc (sizeof (port_event_t) * port_eventmax);
 
-  return EVBACKEND_PORT;
+  return LIBEVBACKEND_PORT;
 }
 
-void inline_size
-port_destroy (EV_P)
+inline_size
+void
+port_destroy (LIBEV_P)
 {
   ev_free (port_events);
 }
 
-void inline_size
-port_fork (EV_P)
+inline_size
+void
+port_fork (LIBEV_P)
 {
   close (backend_fd);
 
@@ -180,6 +184,6 @@ port_fork (EV_P)
   fcntl (backend_fd, F_SETFD, FD_CLOEXEC);
 
   /* re-register interest in fds */
-  fd_rearm_all (EV_A);
+  fd_rearm_all (LIBEV_A);
 }
 
diff --git a/ev_select.c b/ev_select.c
index f38d6ca..c896724 100644
--- a/ev_select.c
+++ b/ev_select.c
@@ -46,37 +46,37 @@
 # endif
 #endif
 
-#ifndef EV_SELECT_USE_FD_SET
+#ifndef LIBEV_SELECT_USE_FD_SET
 # ifdef NFDBITS
-#  define EV_SELECT_USE_FD_SET 0
+#  define LIBEV_SELECT_USE_FD_SET 0
 # else
-#  define EV_SELECT_USE_FD_SET 1
+#  define LIBEV_SELECT_USE_FD_SET 1
 # endif
 #endif
 
-#if EV_SELECT_IS_WINSOCKET
-# undef EV_SELECT_USE_FD_SET
-# define EV_SELECT_USE_FD_SET 1
+#if LIBEV_SELECT_IS_WINSOCKET
+# undef LIBEV_SELECT_USE_FD_SET
+# define LIBEV_SELECT_USE_FD_SET 1
 # undef NFDBITS
 # define NFDBITS 0
 #endif
 
-#if !EV_SELECT_USE_FD_SET
+#if !LIBEV_SELECT_USE_FD_SET
 # define NFDBYTES (NFDBITS / 8)
 #endif
 
 #include <string.h>
 
 static void
-select_modify (EV_P_ int fd, int oev, int nev)
+select_modify (LIBEV_P_ int fd, int oev, int nev)
 {
   if (oev == nev)
     return;
 
   {
-#if EV_SELECT_USE_FD_SET
+#if LIBEV_SELECT_USE_FD_SET
 
-    #if EV_SELECT_IS_WINSOCKET
+    #if LIBEV_SELECT_IS_WINSOCKET
     SOCKET handle = anfds [fd].handle;
     #else
     int handle = fd;
@@ -87,18 +87,18 @@ select_modify (EV_P_ int fd, int oev, int nev)
     /* FD_SET is broken on windows (it adds the fd to a set twice or more,
      * which eventually leads to overflows). Need to call it only on changes.
      */
-    #if EV_SELECT_IS_WINSOCKET
-    if ((oev ^ nev) & EV_READ)
+    #if LIBEV_SELECT_IS_WINSOCKET
+    if ((oev ^ nev) & LIBEV_READ)
     #endif
-      if (nev & EV_READ)
+      if (nev & LIBEV_READ)
         FD_SET (handle, (fd_set *)vec_ri);
       else
         FD_CLR (handle, (fd_set *)vec_ri);
 
-    #if EV_SELECT_IS_WINSOCKET
-    if ((oev ^ nev) & EV_WRITE)
+    #if LIBEV_SELECT_IS_WINSOCKET
+    if ((oev ^ nev) & LIBEV_WRITE)
     #endif
-      if (nev & EV_WRITE)
+      if (nev & LIBEV_WRITE)
         FD_SET (handle, (fd_set *)vec_wi);
       else
         FD_CLR (handle, (fd_set *)vec_wi);
@@ -126,27 +126,27 @@ select_modify (EV_P_ int fd, int oev, int nev)
       }
 
     ((fd_mask *)vec_ri) [word] |= mask;
-    if (!(nev & EV_READ))
+    if (!(nev & LIBEV_READ))
       ((fd_mask *)vec_ri) [word] &= ~mask;
 
     ((fd_mask *)vec_wi) [word] |= mask;
-    if (!(nev & EV_WRITE))
+    if (!(nev & LIBEV_WRITE))
       ((fd_mask *)vec_wi) [word] &= ~mask;
 #endif
   }
 }
 
 static void
-select_poll (EV_P_ ev_tstamp timeout)
+select_poll (LIBEV_P_ ev_tstamp timeout)
 {
   struct timeval tv;
   int res;
   int fd_setsize;
 
-  EV_RELEASE_CB;
-  EV_TV_SET (tv, timeout);
+  LIBEV_RELEASE_CB;
+  LIBEV_TV_SET (tv, timeout);
 
-#if EV_SELECT_USE_FD_SET
+#if LIBEV_SELECT_USE_FD_SET
   fd_setsize = sizeof (fd_set);
 #else
   fd_setsize = vec_max * NFDBYTES;
@@ -163,17 +163,17 @@ select_poll (EV_P_ ev_tstamp timeout)
    */
   memcpy (vec_eo, vec_wi, fd_setsize);
   res = select (vec_max * NFDBITS, (fd_set *)vec_ro, (fd_set *)vec_wo, (fd_set *)vec_eo, &tv);
-#elif EV_SELECT_USE_FD_SET
+#elif LIBEV_SELECT_USE_FD_SET
   fd_setsize = anfdmax < FD_SETSIZE ? anfdmax : FD_SETSIZE;
   res = select (fd_setsize, (fd_set *)vec_ro, (fd_set *)vec_wo, 0, &tv);
 #else
   res = select (vec_max * NFDBITS, (fd_set *)vec_ro, (fd_set *)vec_wo, 0, &tv);
 #endif
-  EV_ACQUIRE_CB;
+  LIBEV_ACQUIRE_CB;
 
   if (expect_false (res < 0))
     {
-      #if EV_SELECT_IS_WINSOCKET
+      #if LIBEV_SELECT_IS_WINSOCKET
       errno = WSAGetLastError ();
       #endif
       #ifdef WSABASEERR
@@ -206,16 +206,16 @@ select_poll (EV_P_ ev_tstamp timeout)
       #endif
 
       if (errno == EBADF)
-        fd_ebadf (EV_A);
+        fd_ebadf (LIBEV_A);
       else if (errno == ENOMEM && !syserr_cb)
-        fd_enomem (EV_A);
+        fd_enomem (LIBEV_A);
       else if (errno != EINTR)
         ev_syserr ("(libev) select");
 
       return;
     }
 
-#if EV_SELECT_USE_FD_SET
+#if LIBEV_SELECT_USE_FD_SET
 
   {
     int fd;
@@ -224,20 +224,20 @@ select_poll (EV_P_ ev_tstamp timeout)
       if (anfds [fd].events)
         {
           int events = 0;
-          #if EV_SELECT_IS_WINSOCKET
+          #if LIBEV_SELECT_IS_WINSOCKET
           SOCKET handle = anfds [fd].handle;
           #else
           int handle = fd;
           #endif
 
-          if (FD_ISSET (handle, (fd_set *)vec_ro)) events |= EV_READ;
-          if (FD_ISSET (handle, (fd_set *)vec_wo)) events |= EV_WRITE;
+          if (FD_ISSET (handle, (fd_set *)vec_ro)) events |= LIBEV_READ;
+          if (FD_ISSET (handle, (fd_set *)vec_wo)) events |= LIBEV_WRITE;
           #ifdef _WIN32
-          if (FD_ISSET (handle, (fd_set *)vec_eo)) events |= EV_WRITE;
+          if (FD_ISSET (handle, (fd_set *)vec_eo)) events |= LIBEV_WRITE;
           #endif
 
           if (expect_true (events))
-            fd_event (EV_A_ fd, events);
+            fd_event (LIBEV_A_ fd, events);
         }
   }
 
@@ -259,11 +259,11 @@ select_poll (EV_P_ ev_tstamp timeout)
               fd_mask mask = 1UL << bit;
               int events = 0;
 
-              events |= word_r & mask ? EV_READ  : 0;
-              events |= word_w & mask ? EV_WRITE : 0;
+              events |= word_r & mask ? LIBEV_READ  : 0;
+              events |= word_w & mask ? LIBEV_WRITE : 0;
 
               if (expect_true (events))
-                fd_event (EV_A_ word * NFDBITS + bit, events);
+                fd_event (LIBEV_A_ word * NFDBITS + bit, events);
             }
       }
   }
@@ -271,14 +271,15 @@ select_poll (EV_P_ ev_tstamp timeout)
 #endif
 }
 
-int inline_size
-select_init (EV_P_ int flags)
+inline_size
+int
+select_init (LIBEV_P_ int flags)
 {
   backend_mintime = 1e-6;
   backend_modify  = select_modify;
   backend_poll    = select_poll;
 
-#if EV_SELECT_USE_FD_SET
+#if LIBEV_SELECT_USE_FD_SET
   vec_ri  = ev_malloc (sizeof (fd_set)); FD_ZERO ((fd_set *)vec_ri);
   vec_ro  = ev_malloc (sizeof (fd_set));
   vec_wi  = ev_malloc (sizeof (fd_set)); FD_ZERO ((fd_set *)vec_wi);
@@ -297,11 +298,12 @@ select_init (EV_P_ int flags)
   #endif
 #endif
 
-  return EVBACKEND_SELECT;
+  return LIBEVBACKEND_SELECT;
 }
 
-void inline_size
-select_destroy (EV_P)
+inline_size
+void
+select_destroy (LIBEV_P)
 {
   ev_free (vec_ri);
   ev_free (vec_ro);
diff --git a/ev_vars.h b/ev_vars.h
index 04d4db1..8efe81c 100644
--- a/ev_vars.h
+++ b/ev_vars.h
@@ -59,39 +59,39 @@ VARx(ev_tstamp, timeout_blocktime)
 
 VARx(int, backend)
 VARx(int, activecnt) /* total number of active events ("refcount") */
-VARx(EV_ATOMIC_T, loop_done)  /* signal by ev_break */
+VARx(LIBEV_ATOMIC_T, loop_done)  /* signal by ev_break */
 
 VARx(int, backend_fd)
 VARx(ev_tstamp, backend_mintime) /* assumed typical timer resolution */
-VAR (backend_modify, void (*backend_modify)(EV_P_ int fd, int oev, int nev))
-VAR (backend_poll  , void (*backend_poll)(EV_P_ ev_tstamp timeout))
+VAR (backend_modify, void (*backend_modify)(LIBEV_P_ int fd, int oev, int nev))
+VAR (backend_poll  , void (*backend_poll)(LIBEV_P_ ev_tstamp timeout))
 
 VARx(ANFD *, anfds)
 VARx(int, anfdmax)
 
 VAR (evpipe, int evpipe [2])
 VARx(ev_io, pipe_w)
-VARx(EV_ATOMIC_T, pipe_write_wanted)
-VARx(EV_ATOMIC_T, pipe_write_skipped)
+VARx(LIBEV_ATOMIC_T, pipe_write_wanted)
+VARx(LIBEV_ATOMIC_T, pipe_write_skipped)
 
-#if !defined(_WIN32) || EV_GENWRAP
+#if !defined(_WIN32) || LIBEV_GENWRAP
 VARx(pid_t, curpid)
 #endif
 
 VARx(char, postfork)  /* true if we need to recreate kernel state after fork */
 
-#if EV_USE_SELECT || EV_GENWRAP
+#if LIBEV_USE_SELECT || LIBEV_GENWRAP
 VARx(void *, vec_ri)
 VARx(void *, vec_ro)
 VARx(void *, vec_wi)
 VARx(void *, vec_wo)
-#if defined(_WIN32) || EV_GENWRAP
+#if defined(_WIN32) || LIBEV_GENWRAP
 VARx(void *, vec_eo)
 #endif
 VARx(int, vec_max)
 #endif
 
-#if EV_USE_POLL || EV_GENWRAP
+#if LIBEV_USE_POLL || LIBEV_GENWRAP
 VARx(struct pollfd *, polls)
 VARx(int, pollmax)
 VARx(int, pollcnt)
@@ -99,7 +99,7 @@ VARx(int *, pollidxs) /* maps fds into structure indices */
 VARx(int, pollidxmax)
 #endif
 
-#if EV_USE_EPOLL || EV_GENWRAP
+#if LIBEV_USE_EPOLL || LIBEV_GENWRAP
 VARx(struct epoll_event *, epoll_events)
 VARx(int, epoll_eventmax)
 VARx(int *, epoll_eperms)
@@ -107,7 +107,7 @@ VARx(int, epoll_epermcnt)
 VARx(int, epoll_epermmax)
 #endif
 
-#if EV_USE_KQUEUE || EV_GENWRAP
+#if LIBEV_USE_KQUEUE || LIBEV_GENWRAP
 VARx(pid_t, kqueue_fd_pid)
 VARx(struct kevent *, kqueue_changes)
 VARx(int, kqueue_changemax)
@@ -116,12 +116,12 @@ VARx(struct kevent *, kqueue_events)
 VARx(int, kqueue_eventmax)
 #endif
 
-#if EV_USE_PORT || EV_GENWRAP
+#if LIBEV_USE_PORT || LIBEV_GENWRAP
 VARx(struct port_event *, port_events)
 VARx(int, port_eventmax)
 #endif
 
-#if EV_USE_IOCP || EV_GENWRAP
+#if LIBEV_USE_IOCP || LIBEV_GENWRAP
 VARx(HANDLE, iocp)
 #endif
 
@@ -133,13 +133,13 @@ VARx(ANHE *, timers)
 VARx(int, timermax)
 VARx(int, timercnt)
 
-#if EV_PERIODIC_ENABLE || EV_GENWRAP
+#if LIBEV_PERIODIC_ENABLE || LIBEV_GENWRAP
 VARx(ANHE *, periodics)
 VARx(int, periodicmax)
 VARx(int, periodiccnt)
 #endif
 
-#if EV_IDLE_ENABLE || EV_GENWRAP
+#if LIBEV_IDLE_ENABLE || LIBEV_GENWRAP
 VAR (idles, ev_idle **idles [NUMPRI])
 VAR (idlemax, int idlemax [NUMPRI])
 VAR (idlecnt, int idlecnt [NUMPRI])
@@ -154,34 +154,34 @@ VARx(struct ev_check **, checks)
 VARx(int, checkmax)
 VARx(int, checkcnt)
 
-#if EV_FORK_ENABLE || EV_GENWRAP
+#if LIBEV_FORK_ENABLE || LIBEV_GENWRAP
 VARx(struct ev_fork **, forks)
 VARx(int, forkmax)
 VARx(int, forkcnt)
 #endif
 
-#if EV_CLEANUP_ENABLE || EV_GENWRAP
+#if LIBEV_CLEANUP_ENABLE || LIBEV_GENWRAP
 VARx(struct ev_cleanup **, cleanups)
 VARx(int, cleanupmax)
 VARx(int, cleanupcnt)
 #endif
 
-#if EV_ASYNC_ENABLE || EV_GENWRAP
-VARx(EV_ATOMIC_T, async_pending)
+#if LIBEV_ASYNC_ENABLE || LIBEV_GENWRAP
+VARx(LIBEV_ATOMIC_T, async_pending)
 VARx(struct ev_async **, asyncs)
 VARx(int, asyncmax)
 VARx(int, asynccnt)
 #endif
 
-#if EV_USE_INOTIFY || EV_GENWRAP
+#if LIBEV_USE_INOTIFY || LIBEV_GENWRAP
 VARx(int, fs_fd)
 VARx(ev_io, fs_w)
 VARx(char, fs_2625) /* whether we are running in linux 2.6.25 or newer */
-VAR (fs_hash, ANFS fs_hash [EV_INOTIFY_HASHSIZE])
+VAR (fs_hash, ANFS fs_hash [LIBEV_INOTIFY_HASHSIZE])
 #endif
 
-VARx(EV_ATOMIC_T, sig_pending)
-#if EV_USE_SIGNALFD || EV_GENWRAP
+VARx(LIBEV_ATOMIC_T, sig_pending)
+#if LIBEV_USE_SIGNALFD || LIBEV_GENWRAP
 VARx(int, sigfd)
 VARx(ev_io, sigfd_w)
 VARx(sigset_t, sigfd_set)
@@ -189,14 +189,14 @@ VARx(sigset_t, sigfd_set)
 
 VARx(unsigned int, origflags) /* original loop flags */
 
-#if EV_FEATURE_API || EV_GENWRAP
+#if LIBEV_FEATURE_API || LIBEV_GENWRAP
 VARx(unsigned int, loop_count) /* total number of loop iterations/blocks */
 VARx(unsigned int, loop_depth) /* #ev_run enters - #ev_run leaves */
 
 VARx(void *, userdata)
 /* C++ doesn't support the ev_loop_callback typedef here. stinks. */
-VAR (release_cb, void (*release_cb)(EV_P) EV_THROW)
-VAR (acquire_cb, void (*acquire_cb)(EV_P) EV_THROW)
+VAR (release_cb, void (*release_cb)(LIBEV_P) LIBEV_THROW)
+VAR (acquire_cb, void (*acquire_cb)(LIBEV_P) LIBEV_THROW)
 VAR (invoke_cb , ev_loop_callback invoke_cb)
 #endif
 
diff --git a/ev_win32.c b/ev_win32.c
index fd67135..ed36393 100644
--- a/ev_win32.c
+++ b/ev_win32.c
@@ -48,7 +48,7 @@ volatile double SIGFPE_REQ = 0.0f;
 static SOCKET
 ev_tcp_socket (void)
 {
-#if EV_USE_WSASOCKET
+#if LIBEV_USE_WSASOCKET
   return WSASocket (AF_INET, SOCK_STREAM, 0, 0, 0, 0);
 #else
   return socket (AF_INET, SOCK_STREAM, 0);
@@ -119,9 +119,9 @@ ev_pipe (int filedes [2])
 
   closesocket (listener);
 
-#if EV_SELECT_IS_WINSOCKET
-  filedes [0] = EV_WIN32_HANDLE_TO_FD (sock [0]);
-  filedes [1] = EV_WIN32_HANDLE_TO_FD (sock [1]);
+#if LIBEV_SELECT_IS_WINSOCKET
+  filedes [0] = LIBEV_WIN32_HANDLE_TO_FD (sock [0]);
+  filedes [1] = LIBEV_WIN32_HANDLE_TO_FD (sock [1]);
 #else
   /* when select isn't winsocket, we also expect socket, connect, accept etc.
    * to work on fds */
@@ -143,7 +143,7 @@ fail:
 #undef pipe
 #define pipe(filedes) ev_pipe (filedes)
 
-#define EV_HAVE_EV_TIME 1
+#define LIBEV_HAVE_LIBEV_TIME 1
 ev_tstamp
 ev_time (void)
 {
diff --git a/ev_wrap.h b/ev_wrap.h
index ad989ea..0dc2841 100644
--- a/ev_wrap.h
+++ b/ev_wrap.h
@@ -1,6 +1,6 @@
 /* DO NOT EDIT, automatically generated by update_ev_wrap */
-#ifndef EV_WRAP_H
-#define EV_WRAP_H
+#ifndef LIBEV_WRAP_H
+#define LIBEV_WRAP_H
 #define acquire_cb ((loop)->acquire_cb)
 #define activecnt ((loop)->activecnt)
 #define anfdmax ((loop)->anfdmax)
@@ -99,7 +99,7 @@
 #define vec_wi ((loop)->vec_wi)
 #define vec_wo ((loop)->vec_wo)
 #else
-#undef EV_WRAP_H
+#undef LIBEV_WRAP_H
 #undef acquire_cb
 #undef activecnt
 #undef anfdmax
diff --git a/event.c b/event.c
deleted file mode 100644
index 5586cd3..0000000
--- a/event.c
+++ /dev/null
@@ -1,425 +0,0 @@
-/*
- * libevent compatibility layer
- *
- * Copyright (c) 2007,2008,2009,2010,2012 Marc Alexander Lehmann <libev@schmorp.de>
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without modifica-
- * tion, are permitted provided that the following conditions are met:
- *
- *   1.  Redistributions of source code must retain the above copyright notice,
- *       this list of conditions and the following disclaimer.
- *
- *   2.  Redistributions in binary form must reproduce the above copyright
- *       notice, this list of conditions and the following disclaimer in the
- *       documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MER-
- * CHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
- * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPE-
- * CIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
- * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTH-
- * ERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
- * OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- * Alternatively, the contents of this file may be used under the terms of
- * the GNU General Public License ("GPL") version 2 or any later version,
- * in which case the provisions of the GPL are applicable instead of
- * the above. If you wish to allow the use of your version of this file
- * only under the terms of the GPL and not to allow others to use your
- * version of this file under the BSD license, indicate your decision
- * by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL. If you do not delete the
- * provisions above, a recipient may use your version of this file under
- * either the BSD or the GPL.
- */
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <assert.h>
-
-#ifdef EV_EVENT_H
-# include EV_EVENT_H
-#else
-# include "event.h"
-#endif
-
-#if EV_MULTIPLICITY
-# define dLOOPev struct ev_loop *loop = (struct ev_loop *)ev->ev_base
-# define dLOOPbase struct ev_loop *loop = (struct ev_loop *)base
-#else
-# define dLOOPev
-# define dLOOPbase
-#endif
-
-/* never accessed, will always be cast from/to ev_loop */
-struct event_base
-{
-  int dummy;
-};
-
-static struct event_base *ev_x_cur;
-
-static ev_tstamp
-ev_tv_get (struct timeval *tv)
-{
-  if (tv)
-    {
-      ev_tstamp after = tv->tv_sec + tv->tv_usec * 1e-6;
-      return after ? after : 1e-6;
-    }
-  else
-    return -1.;
-}
-
-#define EVENT_STRINGIFY(s) # s
-#define EVENT_VERSION(a,b) EVENT_STRINGIFY (a) "." EVENT_STRINGIFY (b)
-
-const char *
-event_get_version (void)
-{
-  /* returns ABI, not API or library, version */
-  return EVENT_VERSION (EV_VERSION_MAJOR, EV_VERSION_MINOR);
-}
-
-const char *
-event_get_method (void)
-{
-  return "libev";
-}
-
-void *event_init (void)
-{
-#if EV_MULTIPLICITY
-  if (ev_x_cur)
-    ev_x_cur = (struct event_base *)ev_loop_new (EVFLAG_AUTO);
-  else
-    ev_x_cur = (struct event_base *)ev_default_loop (EVFLAG_AUTO);
-#else
-  assert (("libev: multiple event bases not supported when not compiled with EV_MULTIPLICITY", !ev_x_cur));
-
-  ev_x_cur = (struct event_base *)(long)ev_default_loop (EVFLAG_AUTO);
-#endif
-
-  return ev_x_cur;
-}
-
-const char *
-event_base_get_method (const struct event_base *base)
-{
-  return "libev";
-}
-
-struct event_base *
-event_base_new (void)
-{
-#if EV_MULTIPLICITY
-  return (struct event_base *)ev_loop_new (EVFLAG_AUTO);
-#else
-  assert (("libev: multiple event bases not supported when not compiled with EV_MULTIPLICITY"));
-  return NULL;
-#endif
-}
-
-void event_base_free (struct event_base *base)
-{
-  dLOOPbase;
-
-#if EV_MULTIPLICITY
-  if (!ev_is_default_loop (loop))
-    ev_loop_destroy (loop);
-#endif
-}
-
-int event_dispatch (void)
-{
-  return event_base_dispatch (ev_x_cur);
-}
-
-#ifdef EV_STANDALONE
-void event_set_log_callback (event_log_cb cb)
-{
-  /* nop */
-}
-#endif
-
-int event_loop (int flags)
-{
-  return event_base_loop (ev_x_cur, flags);
-}
-
-int event_loopexit (struct timeval *tv)
-{
-  return event_base_loopexit (ev_x_cur, tv);
-}
-
-event_callback_fn event_get_callback
-(const struct event *ev)
-{
-  return ev->ev_callback;
-}
-
-static void
-ev_x_cb (struct event *ev, int revents)
-{
-  revents &= EV_READ | EV_WRITE | EV_TIMER | EV_SIGNAL;
-
-  ev->ev_res = revents;
-  ev->ev_callback (ev->ev_fd, (short)revents, ev->ev_arg);
-}
-
-static void
-ev_x_cb_sig (EV_P_ struct ev_signal *w, int revents)
-{
-  struct event *ev = (struct event *)(((char *)w) - offsetof (struct event, iosig.sig));
-
-  if (revents & EV_ERROR)
-    event_del (ev);
-
-  ev_x_cb (ev, revents);
-}
-
-static void
-ev_x_cb_io (EV_P_ struct ev_io *w, int revents)
-{
-  struct event *ev = (struct event *)(((char *)w) - offsetof (struct event, iosig.io));
-
-  if ((revents & EV_ERROR) || !(ev->ev_events & EV_PERSIST))
-    event_del (ev);
-
-  ev_x_cb (ev, revents);
-}
-
-static void
-ev_x_cb_to (EV_P_ struct ev_timer *w, int revents)
-{
-  struct event *ev = (struct event *)(((char *)w) - offsetof (struct event, to));
-
-  event_del (ev);
-
-  ev_x_cb (ev, revents);
-}
-
-void event_set (struct event *ev, int fd, short events, void (*cb)(int, short, void *), void *arg)
-{
-  if (events & EV_SIGNAL)
-    ev_init (&ev->iosig.sig, ev_x_cb_sig);
-  else
-    ev_init (&ev->iosig.io, ev_x_cb_io);
-
-  ev_init (&ev->to, ev_x_cb_to);
-
-  ev->ev_base     = ev_x_cur; /* not threadsafe, but it's how libevent works */
-  ev->ev_fd       = fd;
-  ev->ev_events   = events;
-  ev->ev_pri      = 0;
-  ev->ev_callback = cb;
-  ev->ev_arg      = arg;
-  ev->ev_res      = 0;
-  ev->ev_flags    = EVLIST_INIT;
-}
-
-int event_once (int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv)
-{
-  return event_base_once (ev_x_cur, fd, events, cb, arg, tv);
-}
-
-int event_add (struct event *ev, struct timeval *tv)
-{
-  dLOOPev;
-
-  if (ev->ev_events & EV_SIGNAL)
-    {
-      if (!ev_is_active (&ev->iosig.sig))
-        {
-          ev_signal_set (&ev->iosig.sig, ev->ev_fd);
-          ev_signal_start (EV_A_ &ev->iosig.sig);
-
-          ev->ev_flags |= EVLIST_SIGNAL;
-        }
-    }
-  else if (ev->ev_events & (EV_READ | EV_WRITE))
-    {
-      if (!ev_is_active (&ev->iosig.io))
-        {
-          ev_io_set (&ev->iosig.io, ev->ev_fd, ev->ev_events & (EV_READ | EV_WRITE));
-          ev_io_start (EV_A_ &ev->iosig.io);
-
-          ev->ev_flags |= EVLIST_INSERTED;
-        }
-    }
-
-  if (tv)
-    {
-      ev->to.repeat = ev_tv_get (tv);
-      ev_timer_again (EV_A_ &ev->to);
-      ev->ev_flags |= EVLIST_TIMEOUT;
-    }
-  else
-    {
-      ev_timer_stop (EV_A_ &ev->to);
-      ev->ev_flags &= ~EVLIST_TIMEOUT;
-    }
-
-  ev->ev_flags |= EVLIST_ACTIVE;
-
-  return 0;
-}
-
-int event_del (struct event *ev)
-{
-  dLOOPev;
-
-  if (ev->ev_events & EV_SIGNAL)
-    ev_signal_stop (EV_A_ &ev->iosig.sig);
-  else if (ev->ev_events & (EV_READ | EV_WRITE))
-    ev_io_stop (EV_A_ &ev->iosig.io);
-
-  if (ev_is_active (&ev->to))
-    ev_timer_stop (EV_A_ &ev->to);
-
-  ev->ev_flags = EVLIST_INIT;
-
-  return 0;
-}
-
-void event_active (struct event *ev, int res, short ncalls)
-{
-  dLOOPev;
-
-  if (res & EV_TIMEOUT)
-    ev_feed_event (EV_A_ &ev->to, res & EV_TIMEOUT);
-
-  if (res & EV_SIGNAL)
-    ev_feed_event (EV_A_ &ev->iosig.sig, res & EV_SIGNAL);
-
-  if (res & (EV_READ | EV_WRITE))
-    ev_feed_event (EV_A_ &ev->iosig.io, res & (EV_READ | EV_WRITE));
-}
-
-int event_pending (struct event *ev, short events, struct timeval *tv)
-{
-  short revents = 0;
-  dLOOPev;
-
-  if (ev->ev_events & EV_SIGNAL)
-    {
-      /* sig */
-      if (ev_is_active (&ev->iosig.sig) || ev_is_pending (&ev->iosig.sig))
-        revents |= EV_SIGNAL;
-    }
-  else if (ev->ev_events & (EV_READ | EV_WRITE))
-    {
-      /* io */
-      if (ev_is_active (&ev->iosig.io) || ev_is_pending (&ev->iosig.io))
-        revents |= ev->ev_events & (EV_READ | EV_WRITE);
-    }
-
-  if (ev->ev_events & EV_TIMEOUT || ev_is_active (&ev->to) || ev_is_pending (&ev->to))
-    {
-      revents |= EV_TIMEOUT;
-
-      if (tv)
-        {
-          ev_tstamp at = ev_now (EV_A);
-
-          tv->tv_sec  = (long)at;
-          tv->tv_usec = (long)((at - (ev_tstamp)tv->tv_sec) * 1e6);
-        }
-    }
-
-  return events & revents;
-}
-
-int event_priority_init (int npri)
-{
-  return event_base_priority_init (ev_x_cur, npri);
-}
-
-int event_priority_set (struct event *ev, int pri)
-{
-  ev->ev_pri = pri;
-
-  return 0;
-}
-
-int event_base_set (struct event_base *base, struct event *ev)
-{
-  ev->ev_base = base;
-
-  return 0;
-}
-
-int event_base_loop (struct event_base *base, int flags)
-{
-  dLOOPbase;
-
-  return !ev_run (EV_A_ flags);
-}
-
-int event_base_dispatch (struct event_base *base)
-{
-  return event_base_loop (base, 0);
-}
-
-static void
-ev_x_loopexit_cb (int revents, void *base)
-{
-  dLOOPbase;
-
-  ev_break (EV_A_ EVBREAK_ONE);
-}
-
-int event_base_loopexit (struct event_base *base, struct timeval *tv)
-{
-  ev_tstamp after = ev_tv_get (tv);
-  dLOOPbase;
-
-  ev_once (EV_A_ -1, 0, after >= 0. ? after : 0., ev_x_loopexit_cb, (void *)base);
-
-  return 0;
-}
-
-struct ev_x_once
-{
-  int fd;
-  void (*cb)(int, short, void *);
-  void *arg;
-};
-
-static void
-ev_x_once_cb (int revents, void *arg)
-{
-  struct ev_x_once *once = (struct ev_x_once *)arg;
-
-  once->cb (once->fd, (short)revents, once->arg);
-  free (once);
-}
-
-int event_base_once (struct event_base *base, int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv)
-{
-  struct ev_x_once *once = (struct ev_x_once *)malloc (sizeof (struct ev_x_once));
-  dLOOPbase;
-
-  if (!once)
-    return -1;
-
-  once->fd  = fd;
-  once->cb  = cb;
-  once->arg = arg;
-
-  ev_once (EV_A_ fd, events & (EV_READ | EV_WRITE), ev_tv_get (tv), ev_x_once_cb, (void *)once);
-
-  return 0;
-}
-
-int event_base_priority_init (struct event_base *base, int npri)
-{
-  /*dLOOPbase;*/
-
-  return 0;
-}
-
diff --git a/event.h b/event.h
deleted file mode 100644
index aa81928..0000000
--- a/event.h
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * libevent compatibility header, only core events supported
- *
- * Copyright (c) 2007,2008,2010,2012 Marc Alexander Lehmann <libev@schmorp.de>
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without modifica-
- * tion, are permitted provided that the following conditions are met:
- *
- *   1.  Redistributions of source code must retain the above copyright notice,
- *       this list of conditions and the following disclaimer.
- *
- *   2.  Redistributions in binary form must reproduce the above copyright
- *       notice, this list of conditions and the following disclaimer in the
- *       documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
- * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MER-
- * CHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
- * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPE-
- * CIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
- * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
- * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
- * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTH-
- * ERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
- * OF THE POSSIBILITY OF SUCH DAMAGE.
- *
- * Alternatively, the contents of this file may be used under the terms of
- * the GNU General Public License ("GPL") version 2 or any later version,
- * in which case the provisions of the GPL are applicable instead of
- * the above. If you wish to allow the use of your version of this file
- * only under the terms of the GPL and not to allow others to use your
- * version of this file under the BSD license, indicate your decision
- * by deleting the provisions above and replace them with the notice
- * and other provisions required by the GPL. If you do not delete the
- * provisions above, a recipient may use your version of this file under
- * either the BSD or the GPL.
- */
-
-#ifndef EVENT_H_
-#define EVENT_H_
-
-#ifdef EV_H
-# include EV_H
-#else
-# include "ev.h"
-#endif
-
-#ifndef EVLOOP_NONBLOCK
-# define EVLOOP_NONBLOCK EVRUN_NOWAIT
-#endif
-#ifndef EVLOOP_ONESHOT
-# define EVLOOP_ONESHOT EVRUN_ONCE
-#endif
-#ifndef EV_TIMEOUT
-# define EV_TIMEOUT EV_TIMER
-#endif
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-/* we need sys/time.h for struct timeval only */
-#if !defined (WIN32) || defined (__MINGW32__)
-# include <time.h> /* mingw seems to need this, for whatever reason */
-# include <sys/time.h>
-#endif
-
-struct event_base;
-
-#define EVLIST_TIMEOUT  0x01
-#define EVLIST_INSERTED 0x02
-#define EVLIST_SIGNAL   0x04
-#define EVLIST_ACTIVE   0x08
-#define EVLIST_INTERNAL 0x10
-#define EVLIST_INIT     0x80
-
-typedef void (*event_callback_fn)(int, short, void *);
-
-struct event
-{
-  /* libev watchers we map onto */
-  union {
-    struct ev_io io;
-    struct ev_signal sig;
-  } iosig;
-  struct ev_timer to;
-
-  /* compatibility slots */
-  struct event_base *ev_base;
-  event_callback_fn ev_callback;
-  void *ev_arg;
-  int ev_fd;
-  int ev_pri;
-  int ev_res;
-  int ev_flags;
-  short ev_events;
-};
-
-event_callback_fn event_get_callback (const struct event *ev);
-
-#define EV_READ                    EV_READ
-#define EV_WRITE                   EV_WRITE
-#define EV_PERSIST                 0x10
-#define EV_ET                      0x20 /* nop */
-
-#define EVENT_SIGNAL(ev)           ((int) (ev)->ev_fd)
-#define EVENT_FD(ev)               ((int) (ev)->ev_fd)
-
-#define event_initialized(ev)      ((ev)->ev_flags & EVLIST_INIT)
-
-#define evtimer_add(ev,tv)         event_add (ev, tv)
-#define evtimer_set(ev,cb,data)    event_set (ev, -1, 0, cb, data)
-#define evtimer_del(ev)            event_del (ev)
-#define evtimer_pending(ev,tv)     event_pending (ev, EV_TIMEOUT, tv)
-#define evtimer_initialized(ev)    event_initialized (ev)
-
-#define timeout_add(ev,tv)         evtimer_add (ev, tv)
-#define timeout_set(ev,cb,data)    evtimer_set (ev, cb, data)
-#define timeout_del(ev)            evtimer_del (ev)
-#define timeout_pending(ev,tv)     evtimer_pending (ev, tv)
-#define timeout_initialized(ev)    evtimer_initialized (ev)
-
-#define signal_add(ev,tv)          event_add (ev, tv)
-#define signal_set(ev,sig,cb,data) event_set (ev, sig, EV_SIGNAL | EV_PERSIST, cb, data)
-#define signal_del(ev)             event_del (ev)
-#define signal_pending(ev,tv)      event_pending (ev, EV_SIGNAL, tv)
-#define signal_initialized(ev)     event_initialized (ev)
-
-const char *event_get_version (void);
-const char *event_get_method (void);
-
-void *event_init (void);
-void event_base_free (struct event_base *base);
-
-#define EVLOOP_ONCE      EVLOOP_ONESHOT
-int event_loop (int);
-int event_loopexit (struct timeval *tv);
-int event_dispatch (void);
-
-#define _EVENT_LOG_DEBUG 0
-#define _EVENT_LOG_MSG   1
-#define _EVENT_LOG_WARN  2
-#define _EVENT_LOG_ERR   3
-typedef void (*event_log_cb)(int severity, const char *msg);
-void event_set_log_callback(event_log_cb cb);
-
-void event_set (struct event *ev, int fd, short events, void (*cb)(int, short, void *), void *arg);
-int event_once (int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv);
-
-int event_add (struct event *ev, struct timeval *tv);
-int event_del (struct event *ev);
-void event_active (struct event *ev, int res, short ncalls); /* ncalls is being ignored */
-
-int event_pending (struct event *ev, short, struct timeval *tv);
-
-int event_priority_init (int npri);
-int event_priority_set (struct event *ev, int pri);
-
-struct event_base *event_base_new (void);
-const char *event_base_get_method (const struct event_base *);
-int event_base_set (struct event_base *base, struct event *ev);
-int event_base_loop (struct event_base *base, int);
-int event_base_loopexit (struct event_base *base, struct timeval *tv);
-int event_base_dispatch (struct event_base *base);
-int event_base_once (struct event_base *base, int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval *tv);
-int event_base_priority_init (struct event_base *base, int fd);
-
-/* next line is different in the libevent+libev version */
-/*libevent-include*/
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
-
-- 
2.6.2

